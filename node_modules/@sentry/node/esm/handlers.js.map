{"version":3,"file":"handlers.js","sourceRoot":"","sources":["../src/handlers.ts"],"names":[],"mappings":"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","sourcesContent":["import { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { Span } from '@sentry/hub';\nimport { Event } from '@sentry/types';\nimport { forget, isString, logger, normalize } from '@sentry/utils';\nimport * as cookie from 'cookie';\nimport * as domain from 'domain';\nimport * as http from 'http';\nimport * as os from 'os';\nimport * as url from 'url';\n\nimport { NodeClient } from './client';\nimport { flush } from './sdk';\n\nconst DEFAULT_SHUTDOWN_TIMEOUT = 2000;\n\ntype TransactionTypes = 'path' | 'methodPath' | 'handler';\n\n/** JSDoc */\nfunction extractTransaction(req: { [key: string]: any }, type: boolean | TransactionTypes): string | undefined {\n  try {\n    // Express.js shape\n    const request = req as {\n      method: string;\n      route: {\n        path: string;\n        stack: [\n          {\n            name: string;\n          }\n        ];\n      };\n    };\n\n    switch (type) {\n      case 'path': {\n        return request.route.path;\n      }\n      case 'handler': {\n        return request.route.stack[0].name;\n      }\n      case 'methodPath':\n      default: {\n        const method = request.method.toUpperCase();\n        const path = request.route.path;\n        return `${method}|${path}`;\n      }\n    }\n  } catch (_oO) {\n    return undefined;\n  }\n}\n\n/** Default request keys that'll be used to extract data from the request */\nconst DEFAULT_REQUEST_KEYS = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\n\n/** JSDoc */\nfunction extractRequestData(req: { [key: string]: any }, keys: boolean | string[]): { [key: string]: string } {\n  const request: { [key: string]: any } = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_REQUEST_KEYS;\n\n  // headers:\n  //   node, express: req.headers\n  //   koa: req.header\n  const headers = (req.headers || req.header || {}) as {\n    host?: string;\n    cookie?: string;\n  };\n  // method:\n  //   node, express, koa: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node: req.headers.host\n  const host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node: <n/a>\n  //   express, koa: req.protocol\n  const protocol =\n    req.protocol === 'https' || req.secure || ((req.socket || {}) as { encrypted?: boolean }).encrypted\n      ? 'https'\n      : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa: req.url\n  const originalUrl = (req.originalUrl || req.url) as string;\n  // absolute url\n  const absoluteUrl = `${protocol}://${host}${originalUrl}`;\n\n  attributes.forEach(key => {\n    switch (key) {\n      case 'headers':\n        request.headers = headers;\n        break;\n      case 'method':\n        request.method = method;\n        break;\n      case 'url':\n        request.url = absoluteUrl;\n        break;\n      case 'cookies':\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        request.cookies = cookie.parse(headers.cookie || '');\n        break;\n      case 'query_string':\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa: req.query\n        request.query_string = url.parse(originalUrl || '', false).query;\n        break;\n      case 'data':\n        // body data:\n        //   node, express, koa: req.body\n        let data = req.body;\n        if (method === 'GET' || method === 'HEAD') {\n          if (typeof data === 'undefined') {\n            data = '<unavailable>';\n          }\n        }\n        if (data && !isString(data)) {\n          // Make sure the request body is a string\n          data = JSON.stringify(normalize(data));\n        }\n        request.data = data;\n        break;\n      default:\n        if ({}.hasOwnProperty.call(req, key)) {\n          request[key] = (req as { [key: string]: any })[key];\n        }\n    }\n  });\n\n  return request;\n}\n\n/** Default user keys that'll be used to extract data from the request */\nconst DEFAULT_USER_KEYS = ['id', 'username', 'email'];\n\n/** JSDoc */\nfunction extractUserData(\n  req: {\n    ip?: string;\n    connection?: {\n      remoteAddress?: string;\n    };\n    user?: {\n      [key: string]: any;\n    };\n  },\n  keys: boolean | string[],\n): { [key: string]: any } {\n  const user: { [key: string]: any } = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_KEYS;\n\n  attributes.forEach(key => {\n    if (req.user && key in req.user) {\n      user[key] = req.user[key];\n    }\n  });\n\n  // client ip:\n  //   node: req.connection.remoteAddress\n  //   express, koa: req.ip\n  const ip = req.ip || (req.connection && req.connection.remoteAddress);\n\n  if (ip) {\n    user.ip_address = ip;\n  }\n\n  return user;\n}\n\n/**\n * Enriches passed event with request data.\n *\n *\n * @param event Will be mutated and enriched with req data\n * @param req Request object\n * @param options object containing flags to enable functionality\n * @hidden\n */\nexport function parseRequest(\n  event: Event,\n  req: {\n    [key: string]: any;\n  },\n  options?: {\n    request?: boolean | string[];\n    serverName?: boolean;\n    transaction?: boolean | TransactionTypes;\n    user?: boolean | string[];\n    version?: boolean;\n  },\n): Event {\n  // tslint:disable-next-line:no-parameter-reassignment\n  options = {\n    request: true,\n    serverName: true,\n    transaction: true,\n    user: true,\n    version: true,\n    ...options,\n  };\n\n  if (options.version) {\n    event.extra = {\n      ...event.extra,\n      node: global.process.version,\n    };\n  }\n\n  if (options.request) {\n    event.request = {\n      ...event.request,\n      ...extractRequestData(req, options.request),\n    };\n  }\n\n  if (options.serverName) {\n    event.server_name = global.process.env.SENTRY_NAME || os.hostname();\n  }\n\n  if (options.user && req.user) {\n    event.user = {\n      ...event.user,\n      ...extractUserData(req, options.user),\n    };\n  }\n\n  if (options.transaction && !event.transaction) {\n    const transaction = extractTransaction(req, options.transaction);\n    if (transaction) {\n      event.transaction = transaction;\n    }\n  }\n\n  return event;\n}\n\n/**\n * Express compatible request handler.\n * @see Exposed as `Handlers.requestHandler`\n */\nexport function requestHandler(options?: {\n  request?: boolean;\n  serverName?: boolean;\n  transaction?: boolean | TransactionTypes;\n  user?: boolean | string[];\n  version?: boolean;\n  flushTimeout?: number;\n}): (req: http.IncomingMessage, res: http.ServerResponse, next: (error?: any) => void) => void {\n  return function sentryRequestMiddleware(\n    req: http.IncomingMessage,\n    res: http.ServerResponse,\n    next: (error?: any) => void,\n  ): void {\n    if (options && options.flushTimeout && options.flushTimeout > 0) {\n      // tslint:disable-next-line: no-unbound-method\n      const _end = res.end;\n      res.end = function(chunk?: any | (() => void), encoding?: string | (() => void), cb?: () => void): void {\n        flush(options.flushTimeout)\n          .then(() => {\n            _end.call(this, chunk, encoding, cb);\n          })\n          .catch(e => {\n            logger.error(e);\n          });\n      };\n    }\n    const local = domain.create();\n    local.add(req);\n    local.add(res);\n    local.on('error', next);\n    local.run(() => {\n      getCurrentHub().configureScope(scope =>\n        scope.addEventProcessor((event: Event) => parseRequest(event, req, options)),\n      );\n      next();\n    });\n  };\n}\n\n/** JSDoc */\ninterface MiddlewareError extends Error {\n  status?: number | string;\n  statusCode?: number | string;\n  status_code?: number | string;\n  output?: {\n    statusCode?: number | string;\n  };\n}\n\n/** JSDoc */\nfunction getStatusCodeFromResponse(error: MiddlewareError): number {\n  const statusCode = error.status || error.statusCode || error.status_code || (error.output && error.output.statusCode);\n  return statusCode ? parseInt(statusCode as string, 10) : 500;\n}\n\n/** Returns true if response code is internal server error */\nfunction defaultShouldHandleError(error: MiddlewareError): boolean {\n  const status = getStatusCodeFromResponse(error);\n  return status >= 500;\n}\n\n/**\n * Express compatible error handler.\n * @see Exposed as `Handlers.errorHandler`\n */\nexport function errorHandler(options?: {\n  /**\n   * Callback method deciding whether error should be captured and sent to Sentry\n   * @param error Captured middleware error\n   */\n  shouldHandleError?(error: MiddlewareError): boolean;\n}): (\n  error: MiddlewareError,\n  req: http.IncomingMessage,\n  res: http.ServerResponse,\n  next: (error: MiddlewareError) => void,\n) => void {\n  return function sentryErrorMiddleware(\n    error: MiddlewareError,\n    _req: http.IncomingMessage,\n    _res: http.ServerResponse,\n    next: (error: MiddlewareError) => void,\n  ): void {\n    const shouldHandleError = (options && options.shouldHandleError) || defaultShouldHandleError;\n\n    if (shouldHandleError(error)) {\n      withScope(scope => {\n        if (_req.headers && isString(_req.headers['sentry-trace'])) {\n          const span = Span.fromTraceparent(_req.headers['sentry-trace'] as string);\n          scope.setSpan(span);\n        }\n        const eventId = captureException(error);\n        (_res as any).sentry = eventId;\n        next(error);\n      });\n\n      return;\n    }\n\n    next(error);\n  };\n}\n\n/**\n * @hidden\n */\nexport function defaultOnFatalError(error: Error): void {\n  console.error(error && error.stack ? error.stack : error);\n  const client = getCurrentHub().getClient<NodeClient>();\n\n  if (client === undefined) {\n    logger.warn('No NodeClient was defined, we are exiting the process now.');\n    global.process.exit(1);\n    return;\n  }\n\n  const options = client.getOptions();\n  const timeout =\n    (options && options.shutdownTimeout && options.shutdownTimeout > 0 && options.shutdownTimeout) ||\n    DEFAULT_SHUTDOWN_TIMEOUT;\n  forget(\n    client.close(timeout).then((result: boolean) => {\n      if (!result) {\n        logger.warn('We reached the timeout for emptying the request buffer, still exiting now!');\n      }\n      global.process.exit(1);\n    }),\n  );\n}\n"]}