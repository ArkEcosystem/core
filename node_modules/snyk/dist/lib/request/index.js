"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const request = require("./request");
const alerts = require("../alerts");
module.exports = (payload, callback) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        const result = yield request(payload);
        if (result.body.alerts) {
            alerts.registerAlerts(result.body.alerts);
        }
        // make callbacks and promises work
        if (callback) {
            callback(null, result.res, result.body);
        }
        return result;
    }
    catch (error) {
        if (callback) {
            return callback(error);
        }
        throw error;
    }
});
//# sourceMappingURL=index.js.map