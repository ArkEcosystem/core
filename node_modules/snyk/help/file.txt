
File:

When testing locally, you can specify the file that Snyk should inspect for
package information.

  $ snyk test --file=package.json

When ommitted Snyk will try to detect the appropriate file for your project by
looking for files in following order:
  yarn.lock
  package-lock.json
  package.json
  Gemfile
  Gemfile.lock
  pom.xml
  build.gradle
  build.gradle.kts
  build.sbt
  Pipfile
  requirements.txt
  Gopkg.lock
  go.mod
  vendor/vendor.json
  project.assets.json
  packages.config
  paket.dependencies
  composer.lock

If more than one file exists it will use the first order-wise. If you wish to specify manually, you can
  point the --file parameter to force using what you specify, for example:

  $ snyk test --file=Gemfile

When used alongside `--docker`, and passed the appropriate Dockerfile, Snyk will
offer more detailed remediation advice for your image:

  $ snyk test --docker myapp:latest --file=./myapp/Dockerfile
