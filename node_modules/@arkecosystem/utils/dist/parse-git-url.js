"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseGitUrl = void 0;
const url_1 = require("url");
const last_1 = require("./last");
const getOwner = (value) => {
    const string = value.indexOf(":");
    return string > -1 ? value.slice(string + 1) : value;
};
exports.parseGitUrl = (value) => {
    const parsed = url_1.parse(value);
    if (value.startsWith("git@")) {
        parsed.host = url_1.parse("https://" + value).host;
    }
    if (!parsed.host) {
        throw new Error("Failed to find a host.");
    }
    // @ts-ignore - The previous host check will already exit if there are problems
    // but for some reason the node typings say the path could be undefined.
    // This doesn't seem to be the case and it always defaults to at least the host.
    const segments = parsed.path.split("/").filter(Boolean);
    if (segments.length === 1) {
        throw new Error("Failed to find a name.");
    }
    const owner = getOwner(segments[0]);
    const name = segments[1].replace(/^\W+|\.git$/g, "");
    const result = {
        host: parsed.host,
        owner,
        name,
        branch: (parsed.hash ? last_1.last(parsed.hash.split("#")) : segments[2]) || "master",
        repo: owner + "/" + name,
    };
    return result;
};
//# sourceMappingURL=parse-git-url.js.map