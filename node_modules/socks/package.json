{
  "name": "socks",
  "private": false,
  "version": "2.3.2",
  "description": "Fully featured SOCKS proxy client supporting SOCKSv4, SOCKSv4a, and SOCKSv5. Includes Bind and Associate functionality.",
  "main": "build/index.js",
  "typings": "typings",
  "homepage": "https://github.com/JoshGlazebrook/socks/",
  "repository": {
    "type": "git",
    "url": "https://github.com/JoshGlazebrook/socks.git"
  },
  "bugs": {
    "url": "https://github.com/JoshGlazebrook/socks/issues"
  },
  "keywords": [
    "socks",
    "proxy",
    "tor",
    "socks 4",
    "socks 5",
    "socks4",
    "socks5"
  ],
  "engines": {
    "node": ">= 6.0.0",
    "npm": ">= 3.0.0"
  },
  "author": "Josh Glazebrook",
  "contributors": [
    "castorw"
  ],
  "license": "MIT",
  "readmeFilename": "README.md",
  "devDependencies": {
    "@types/chai": "4.1.2",
    "@types/ip": "^0.0.30",
    "@types/mocha": "5.0.0",
    "@types/node": "9.6.2",
    "chai": "^4.1.2",
    "coveralls": "^3.0.0",
    "mocha": "5.0.5",
    "nyc": "11.6.0",
    "prettier": "^1.9.2",
    "socks5-server": "^0.1.1",
    "ts-node": "5.0.1",
    "tslint": "^5.8.0",
    "typescript": "2.8.1"
  },
  "dependencies": {
    "ip": "^1.1.5",
    "smart-buffer": "4.0.2"
  },
  "scripts": {
    "prepublish": "npm install -g typescript && npm run build",
    "test": "NODE_ENV=test mocha --recursive --compilers ts:ts-node/register test/**/*.ts",
    "coverage": "NODE_ENV=test nyc npm test",
    "coveralls": "NODE_ENV=test nyc npm test && nyc report --reporter=text-lcov | coveralls",
    "lint": "tslint --project tsconfig.json 'src/**/*.ts'",
    "build": "tslint --project tsconfig.json && prettier --write ./src/**/*.ts --config .prettierrc.yaml && tsc -p ."
  },
  "nyc": {
    "extension": [
      ".ts",
      ".tsx"
    ],
    "include": [
      "src/*.ts",
      "src/**/*.ts"
    ],
    "exclude": [
      "**.*.d.ts",
      "node_modules",
      "typings"
    ],
    "require": [
      "ts-node/register"
    ],
    "reporter": [
      "json",
      "html"
    ],
    "all": true
  }
}
