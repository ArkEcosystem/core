"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const default_gateway_1 = require("default-gateway");
const ipaddr_js_1 = require("ipaddr.js");
const interfaces_1 = require("./interfaces");
function findAddressByGateway(gateway) {
    const gatewayIp = ipaddr_js_1.parse(gateway);
    let ip;
    interfaces_1.networkInterfaces().some(addr => {
        const prefix = ipaddr_js_1.parse(addr.netmask).prefixLengthFromSubnetMask();
        const network = ipaddr_js_1.parseCIDR(`${addr.address}/${prefix}`);
        const sameKind = network[0].kind() === gatewayIp.kind();
        if (network[0] && sameKind && gatewayIp.match(network)) {
            ip = network[0].toString();
        }
        return Boolean(ip);
    });
    if (!ipaddr_js_1.isValid(ip)) {
        ip = undefined;
    }
    return ip;
}
function internalv4() {
    try {
        return findAddressByGateway(default_gateway_1.v4.sync().gateway);
    }
    catch (err) {
        return undefined;
    }
}
exports.internalv4 = internalv4;
function internalv6() {
    try {
        return findAddressByGateway(default_gateway_1.v6.sync().gateway);
    }
    catch (err) {
        return undefined;
    }
}
exports.internalv6 = internalv6;
//# sourceMappingURL=gateway.js.map