{"version":3,"sources":["../../../src/error/main.js"],"names":["custom","inspect","getError","name","event","message","stack","error","buildError","Error","Object","defineProperty","value","capitalize","enumerable","writable","configurable","string","firstLetter","rest","toUpperCase","join","addErrorPrint","opts","level","printError","bind"],"mappings":"iKAAA;;AAEA;AACA;AACA;;AAEA,KAAM,CAAEA,MAAF,EAAaC,aAAnB;;;;AAIO,KAAMC,CAAAA,QAAQ,CAAG,SAAS,CAAEC,IAAF,CAAQC,KAAR,CAAT,CAA0B;AAChD,KAAMC,CAAAA,OAAO,CAAG,wBAAW,CAAED,KAAF,CAASD,IAAT,CAAX,CAAhB;AACA,KAAMG,CAAAA,KAAK,CAAG,oBAAS,CAAEF,KAAF,CAAT,CAAd;AACA,KAAMG,CAAAA,KAAK,CAAGC,UAAU,CAAC,CAAEL,IAAF,CAAQE,OAAR,CAAiBC,KAAjB,CAAD,CAAxB;AACA,MAAO,CAAEC,KAAF,CAASD,KAAT,CAAP;AACD,CALM,C;;AAOP,KAAME,CAAAA,UAAU,CAAG,SAAS,CAAEL,IAAF,CAAQE,OAAR,CAAiBC,KAAjB,CAAT,CAAmC;AACpD,KAAMC,CAAAA,KAAK,CAAG,GAAIE,CAAAA,KAAJ,CAAUJ,OAAV,CAAd;;;AAGAK,MAAM,CAACC,cAAP,CAAsBJ,KAAtB,CAA6B,MAA7B,CAAqC;AACnCK,KAAK,CAAEC,UAAU,CAACV,IAAD,CADkB;AAEnCW,UAAU,CAAE,KAFuB;AAGnCC,QAAQ,CAAE,IAHyB;AAInCC,YAAY,CAAE,IAJqB,CAArC;;;;AAQAT,KAAK,CAACD,KAAN,CAAe,GAAEC,KAAM,KAAID,KAAM,EAAjC;AACA,MAAOC,CAAAA,KAAP;AACD,CAdD;;AAgBA,KAAMM,CAAAA,UAAU,CAAG,SAASI,MAAT,CAAiB;AAClC,KAAM,CAACC,WAAD,CAAc,GAAGC,IAAjB,EAAyBF,MAA/B;AACA,MAAO,CAACC,WAAW,CAACE,WAAZ,EAAD,CAA4B,GAAGD,IAA/B,EAAqCE,IAArC,CAA0C,EAA1C,CAAP;AACD,CAHD;;;AAMO,KAAMC,CAAAA,aAAa,CAAG,SAAS;AACpCf,KADoC;AAEpCA,KAAK,CAAE,CAAEF,OAAF,CAF6B;AAGpCkB,IAHoC;AAIpCC,KAJoC;AAKpCrB,IALoC;AAMpCG,KANoC,CAAT;AAO1B;;AAEDC,KAAK,CAACP,MAAD,CAAL,CAAgByB,kBAAWC,IAAX,CAAgB,IAAhB,CAAsB,CAAEH,IAAF,CAAQC,KAAR,CAAerB,IAAf,CAAqBE,OAArB,CAA8BC,KAA9B,CAAtB,CAAhB;AACD,CAVM,C","sourcesContent":["import { inspect } from 'util'\n\nimport { getMessage } from './message.js'\nimport { getStack } from './stack.js'\nimport { printError } from './print.js'\n\nconst { custom } = inspect\n\n// Retrieve `error` which sums up all information that can be gathered about\n// the event.\nexport const getError = function({ name, event }) {\n  const message = getMessage({ event, name })\n  const stack = getStack({ event })\n  const error = buildError({ name, message, stack })\n  return { error, stack }\n}\n\nconst buildError = function({ name, message, stack }) {\n  const error = new Error(message)\n  // `error.name` should not be enumerable, to ensure it is correctly printed.\n  // eslint-disable-next-line fp/no-mutating-methods\n  Object.defineProperty(error, 'name', {\n    value: capitalize(name),\n    enumerable: false,\n    writable: true,\n    configurable: true,\n  })\n  // We removed the first line of `stack`, now we substitute it\n  // eslint-disable-next-line fp/no-mutation\n  error.stack = `${error}\\n${stack}`\n  return error\n}\n\nconst capitalize = function(string) {\n  const [firstLetter, ...rest] = string\n  return [firstLetter.toUpperCase(), ...rest].join('')\n}\n\n// This needs to be done later because `error` is used by `level`\nexport const addErrorPrint = function({\n  error,\n  error: { message },\n  opts,\n  level,\n  name,\n  stack,\n}) {\n  // eslint-disable-next-line fp/no-mutation, no-param-reassign\n  error[custom] = printError.bind(null, { opts, level, name, message, stack })\n}\n"],"file":"src/error/main.js"}