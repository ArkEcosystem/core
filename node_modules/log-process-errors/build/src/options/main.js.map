{"version":3,"sources":["../../../src/options/main.js"],"names":["getOptions","opts","optsA","value","undefined","exampleConfig","EXAMPLE_OPTS","validateOptions","optsB","level","optsC","DEFAULT_OPTS","optsD","log","defaultLog","exitOn","colors","exampleFunction","testing"],"mappings":"gGAAA;;AAEA;;;;;AAKA;AACA;AACA;AACA;;AAEA;;;AAGO,KAAMA,CAAAA,UAAU,CAAG,SAAS,CAAEC,IAAI,CAAG,EAAT,CAAT,CAAwB;AAChD,KAAMC,CAAAA,KAAK,CAAG,kBAAOD,IAAP,CAAaE,KAAK,EAAIA,KAAK,GAAKC,SAAhC,CAAd;;AAEA,2BAASF,KAAT,CAAgB,CAAEG,aAAa,CAAEC,YAAjB,CAAhB;AACAC,eAAe,CAACL,KAAD,CAAf;;AAEA,KAAMM,CAAAA,KAAK,CAAG,0BAAa,CAAEP,IAAI,CAAEC,KAAR,CAAb,CAAd;AACA,KAAMO,CAAAA,KAAK,CAAG,8BAAmB,CAAER,IAAI,CAAEO,KAAR,CAAnB,CAAd;AACA,KAAME,CAAAA,KAAK,CAAG,CAAE,GAAGC,YAAL,CAAmB,GAAGH,KAAtB,CAA6BC,KAA7B,CAAd;;AAEA,KAAMG,CAAAA,KAAK,CAAG,qBAAS,CAAEX,IAAI,CAAES,KAAR,CAAT,CAAd;AACA,MAAOE,CAAAA,KAAP;AACD,CAZM,C;;AAcP,KAAMD,CAAAA,YAAY,CAAG;AACnBE,GAAG,CAAEC,eADc;AAEnBC,MAAM,CAAE,CAAC,mBAAD,CAFW;AAGnBC,MAAM,CAAE,IAHW,CAArB;;;;;AAQA,KAAMC,CAAAA,eAAe,CAAG,UAAW,CAAE,CAArC;;AAEA,KAAMX,CAAAA,YAAY,CAAG;AACnB,GAAGK,YADgB;AAEnBE,GAAG,CAAEI,eAFc;AAGnBR,KAAK,CAAE,6BAHY;AAInBS,OAAO,CAAE,gCAJU,CAArB;;;;AAQA,KAAMX,CAAAA,eAAe,CAAG,SAAS,CAAEQ,MAAF,CAAUN,KAAK,CAAG,EAAlB,CAAT,CAAiC;AACvD,0BAAe,CAAEA,KAAF,CAAf;AACA,yBAAe,CAAEM,MAAF,CAAf;AACD,CAHD","sourcesContent":["import { validate } from 'jest-validate'\n\nimport {\n  applyDefaultLevels,\n  getExampleLevels,\n  validateLevels,\n} from '../level.js'\nimport { validateExitOn } from '../exit.js'\nimport { defaultLog } from '../log.js'\nimport { addChalk } from '../colors.js'\nimport { pickBy } from '../utils.js'\n\nimport { applyTesting, getExampleTesting } from './testing.js'\n\n// Validate options and assign default options\nexport const getOptions = function({ opts = {} }) {\n  const optsA = pickBy(opts, value => value !== undefined)\n\n  validate(optsA, { exampleConfig: EXAMPLE_OPTS })\n  validateOptions(optsA)\n\n  const optsB = applyTesting({ opts: optsA })\n  const level = applyDefaultLevels({ opts: optsB })\n  const optsC = { ...DEFAULT_OPTS, ...optsB, level }\n\n  const optsD = addChalk({ opts: optsC })\n  return optsD\n}\n\nconst DEFAULT_OPTS = {\n  log: defaultLog,\n  exitOn: ['uncaughtException'],\n  colors: true,\n}\n\n// `validate-jest` prints the function body\n// eslint-disable-next-line no-empty-function\nconst exampleFunction = function() {}\n\nconst EXAMPLE_OPTS = {\n  ...DEFAULT_OPTS,\n  log: exampleFunction,\n  level: getExampleLevels(),\n  testing: getExampleTesting(),\n}\n\n// Validation beyond what `jest-validate` can do\nconst validateOptions = function({ exitOn, level = {} }) {\n  validateLevels({ level })\n  validateExitOn({ exitOn })\n}\n"],"file":"src/options/main.js"}