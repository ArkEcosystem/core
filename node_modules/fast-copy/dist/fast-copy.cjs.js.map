{"version":3,"file":"fast-copy.cjs.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["const { toString: toStringFunction } = Function.prototype;\nconst {\n  create,\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getOwnPropertySymbols,\n  getPrototypeOf,\n} = Object;\nconst { hasOwnProperty, propertyIsEnumerable } = Object.prototype;\n\n/**\n * @enum\n *\n * @const {Object} SUPPORTS\n *\n * @property {boolean} SYMBOL_PROPERTIES are symbol properties supported\n * @property {boolean} WEAKMAP is WeakMap supported\n */\nexport const SUPPORTS = {\n  SYMBOL_PROPERTIES: typeof getOwnPropertySymbols === 'function',\n  WEAKMAP: typeof WeakMap === 'function',\n};\n\n/**\n * @function createCache\n *\n * @description\n * get a new cache object to prevent circular references\n *\n * @returns the new cache object\n */\nexport const createCache = (): FastCopy.Cache => {\n  if (SUPPORTS.WEAKMAP) {\n    return new WeakMap();\n  }\n\n  // tiny implementation of WeakMap\n  const object = create({\n    has: (key: any) => !!~object._keys.indexOf(key),\n    set: (key: any, value: any) => {\n      object._keys.push(key);\n      object._values.push(value);\n    },\n    get: (key: any) => object._values[object._keys.indexOf(key)],\n  });\n\n  object._keys = [];\n  object._values = [];\n\n  return object;\n};\n\n/**\n * @function getCleanClone\n *\n * @description\n * get an empty version of the object with the same prototype it has\n *\n * @param object the object to build a clean clone from\n * @param realm the realm the object resides in\n * @returns the empty cloned object\n */\nexport const getCleanClone = (object: any, realm: FastCopy.Realm): any => {\n  if (!object.constructor) {\n    return create(null);\n  }\n\n  const { constructor: Constructor } = object;\n  const prototype = object.__proto__ || getPrototypeOf(object);\n\n  if (Constructor === realm.Object) {\n    return prototype === realm.Object.prototype ? {} : create(prototype);\n  }\n\n  if (~toStringFunction.call(Constructor).indexOf('[native code]')) {\n    try {\n      return new Constructor();\n    } catch {}\n  }\n\n  return create(prototype);\n};\n\n/**\n * @function getObjectCloneLoose\n *\n * @description\n * get a copy of the object based on loose rules, meaning all enumerable keys\n * and symbols are copied, but property descriptors are not considered\n *\n * @param object the object to clone\n * @param realm the realm the object resides in\n * @param handleCopy the function that handles copying the object\n * @returns the copied object\n */\nexport const getObjectCloneLoose: FastCopy.ObjectCloner = (\n  object: any,\n  realm: FastCopy.Realm,\n  handleCopy: FastCopy.Copier,\n  cache: FastCopy.Cache,\n): any => {\n  const clone: any = getCleanClone(object, realm);\n  // set in the cache immediately to be able to reuse the object recursively\n  cache.set(object, clone);\n\n  for (const key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      clone[key] = handleCopy(object[key], cache);\n    }\n  }\n\n  if (SUPPORTS.SYMBOL_PROPERTIES) {\n    const symbols: symbol[] = getOwnPropertySymbols(object);\n\n    const { length } = symbols;\n\n    if (length) {\n      for (let index = 0, symbol; index < length; index++) {\n        symbol = symbols[index];\n\n        if (propertyIsEnumerable.call(object, symbol)) {\n          clone[symbol] = handleCopy(object[symbol], cache);\n        }\n      }\n    }\n  }\n\n  return clone;\n};\n\n/**\n * @function getObjectCloneStrict\n *\n * @description\n * get a copy of the object based on strict rules, meaning all keys and symbols\n * are copied based on the original property descriptors\n *\n * @param object the object to clone\n * @param realm the realm the object resides in\n * @param handleCopy the function that handles copying the object\n * @returns the copied object\n */\nexport const getObjectCloneStrict: FastCopy.ObjectCloner = (\n  object: any,\n  realm: FastCopy.Realm,\n  handleCopy: FastCopy.Copier,\n  cache: FastCopy.Cache,\n): any => {\n  const clone: any = getCleanClone(object, realm);\n  // set in the cache immediately to be able to reuse the object recursively\n  cache.set(object, clone);\n\n  const properties: (string | symbol)[] = SUPPORTS.SYMBOL_PROPERTIES\n    ? getOwnPropertyNames(object).concat((getOwnPropertySymbols(object) as unknown) as string[])\n    : getOwnPropertyNames(object);\n\n  const { length } = properties;\n\n  if (length) {\n    for (let index = 0, property, descriptor; index < length; index++) {\n      property = properties[index];\n\n      if (property !== 'callee' && property !== 'caller') {\n        descriptor = getOwnPropertyDescriptor(object, property);\n\n        if (descriptor) {\n          // Only clone the value if actually a value, not a getter / setter.\n          if (!descriptor.get && !descriptor.set) {\n            descriptor.value = handleCopy(object[property], cache);\n          }\n\n          try {\n            defineProperty(clone, property, descriptor);\n          } catch (error) {\n            // Tee above can fail on node in edge cases, so fall back to the loose assignment.\n            clone[property] = descriptor.value;\n          }\n        } else {\n          // In extra edge cases where the property descriptor cannot be retrived, fall back to\n          // the loose assignment.\n          clone[property] = handleCopy(object[property], cache);\n        }\n      }\n    }\n  }\n\n  return clone;\n};\n\n/**\n * @function getRegExpFlags\n *\n * @description\n * get the flags to apply to the copied regexp\n *\n * @param regExp the regexp to get the flags of\n * @returns the flags for the regexp\n */\nexport const getRegExpFlags = (regExp: RegExp): string => {\n  let flags = '';\n\n  if (regExp.global) {\n    flags += 'g';\n  }\n\n  if (regExp.ignoreCase) {\n    flags += 'i';\n  }\n\n  if (regExp.multiline) {\n    flags += 'm';\n  }\n\n  if (regExp.unicode) {\n    flags += 'u';\n  }\n\n  if (regExp.sticky) {\n    flags += 'y';\n  }\n\n  return flags;\n};\n","// utils\nimport { createCache, getObjectCloneLoose, getObjectCloneStrict, getRegExpFlags } from './utils';\n\nconst { isArray } = Array;\n\nconst GLOBAL_THIS = (() => {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  if (console && console.error) {\n    console.error('Unable to locate global object, returning \"this\".');\n  }\n})();\n\n/**\n * @function copy\n *\n * @description\n * copy an object deeply as much as possible\n *\n * If `strict` is applied, then all properties (including non-enumerable ones)\n * are copied with their original property descriptors on both objects and arrays.\n *\n * The object is compared to the global constructors in the `realm` provided,\n * and the native constructor is always used to ensure that extensions of native\n * objects (allows in ES2015+) are maintained.\n *\n * @param object the object to copy\n * @param [options] the options for copying with\n * @param [options.isStrict] should the copy be strict\n * @param [options.realm] the realm (this) object the object is copied from\n * @returns the copied object\n */\nfunction copy<T>(object: T, options?: FastCopy.Options): T {\n  // manually coalesced instead of default parameters for performance\n  const isStrict: boolean = !!(options && options.isStrict);\n  const realm: FastCopy.Realm = (options && options.realm) || GLOBAL_THIS;\n\n  const getObjectClone: FastCopy.ObjectCloner = isStrict\n    ? getObjectCloneStrict\n    : getObjectCloneLoose;\n\n  /**\n   * @function handleCopy\n   *\n   * @description\n   * copy the object recursively based on its type\n   *\n   * @param object the object to copy\n   * @returns the copied object\n   */\n  const handleCopy: FastCopy.Copier = (object: any, cache: FastCopy.Cache): any => {\n    if (!object || typeof object !== 'object') {\n      return object;\n    } if (cache.has(object)) {\n      return cache.get(object);\n    }\n\n    const { constructor: Constructor } = object;\n\n    // plain objects\n    if (Constructor === realm.Object) {\n      return getObjectClone(object, realm, handleCopy, cache);\n    }\n\n    let clone: any;\n    // arrays\n    if (isArray(object)) {\n      // if strict, include non-standard properties\n      if (isStrict) {\n        return getObjectCloneStrict(object, realm, handleCopy, cache);\n      }\n\n      const { length } = object;\n\n      clone = new Constructor();\n      cache.set(object, clone);\n\n      for (let index: number = 0; index < length; index++) {\n        clone[index] = handleCopy(object[index], cache);\n      }\n\n      return clone;\n    }\n\n    // dates\n    if (object instanceof realm.Date) {\n      return new Constructor(object.getTime());\n    }\n\n    // regexps\n    if (object instanceof realm.RegExp) {\n      clone = new Constructor(object.source, object.flags || getRegExpFlags(object));\n\n      clone.lastIndex = object.lastIndex;\n\n      return clone;\n    }\n\n    // maps\n    if (realm.Map && object instanceof realm.Map) {\n      clone = new Constructor();\n      cache.set(object, clone);\n\n      object.forEach((value: any, key: any) => {\n        clone.set(key, handleCopy(value, cache));\n      });\n\n      return clone;\n    }\n\n    // sets\n    if (realm.Set && object instanceof realm.Set) {\n      clone = new Constructor();\n      cache.set(object, clone);\n\n      object.forEach((value: any) => {\n        clone.add(handleCopy(value, cache));\n      });\n\n      return clone;\n    }\n\n    // blobs\n    if (realm.Blob && object instanceof realm.Blob) {\n      clone = new Blob([object], { type: object.type });\n      return clone;\n    }\n\n    // buffers (node-only)\n    if (realm.Buffer && realm.Buffer.isBuffer(object)) {\n      clone = realm.Buffer.allocUnsafe\n        ? realm.Buffer.allocUnsafe(object.length)\n        : new Constructor(object.length);\n\n      cache.set(object, clone);\n      object.copy(clone);\n\n      return clone;\n    }\n\n    // arraybuffers / dataviews\n    if (realm.ArrayBuffer) {\n      // dataviews\n      if (realm.ArrayBuffer.isView(object)) {\n        clone = new Constructor(object.buffer.slice(0));\n        cache.set(object, clone);\n        return clone;\n      }\n\n      // arraybuffers\n      if (object instanceof realm.ArrayBuffer) {\n        clone = object.slice(0);\n        cache.set(object, clone);\n        return clone;\n      }\n    }\n\n    // if the object cannot / should not be cloned, don't\n    if (\n      // promise-like\n      typeof object.then === 'function' ||\n      // errors\n      object instanceof Error ||\n      // weakmaps\n      (realm.WeakMap && object instanceof realm.WeakMap) ||\n      // weaksets\n      (realm.WeakSet && object instanceof realm.WeakSet)\n    ) {\n      return object;\n    }\n\n    // assume anything left is a custom constructor\n    return getObjectClone(object, realm, handleCopy, cache);\n  };\n\n  return handleCopy(object, createCache());\n}\n\n/**\n * @function strictCopy\n *\n * @description\n * copy the object with `strict` option pre-applied\n *\n * @param object the object to copy\n * @param [options] the options for copying with\n * @param [options.realm] the realm (this) object the object is copied from\n * @returns the copied object\n */\ncopy.strict = function strictCopy(object: any, options?: FastCopy.Options) {\n  return copy(object, {\n    isStrict: true,\n    realm: options ? options.realm : void 0,\n  });\n};\n\nexport default copy;\n"],"names":[],"mappings":"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"}