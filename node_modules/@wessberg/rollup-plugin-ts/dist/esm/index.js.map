{"version":3,"file":"index.js","sources":["../../src/constant/constant.ts","../../src/util/path/path-util.ts","../../src/util/finalize-parsed-command-line/finalize-parsed-command-line.ts","../../src/util/get-parsed-command-line/get-parsed-command-line.ts","../../src/util/get-script-target-from-browserslist/get-script-target-from-browserslist.ts","../../src/util/get-module-kind-from-rollup-format/get-module-kind-from-rollup-format.ts","../../src/util/hash/generate-random-hash.ts","../../src/util/get-out-dir/get-out-dir.ts","../../src/util/get-forced-compiler-options/get-forced-compiler-options.ts","../../src/util/is-code-output-file/is-code-output-file.ts","../../src/util/is-map-output-file/is-map-output-file.ts","../../src/util/get-source-description-from-emit-output/get-source-description-from-emit-output.ts","../../src/service/emit/diagnostics/emit-diagnostics.ts","../../src/util/get-supported-extensions/get-supported-extensions.ts","../../src/util/is-output-chunk/is-output-chunk.ts","../../src/util/take-bundled-filenames/take-bundled-filenames.ts","../../src/util/file-system/file-system.ts","../../src/util/plugin-options/get-plugin-options.ts","../../src/util/is-defined/is-defined.ts","../../src/util/get-babel-config/get-babel-config.ts","../../src/util/get-forced-babel-options/get-forced-babel-options.ts","../../src/util/ensure-array/ensure-array.ts","../../src/util/get-browserslist/get-browserslist.ts","../../src/service/cache/resolve-cache/resolve-cache.ts","../../src/lib/regenerator/regenerator.ts","../../src/util/get-default-babel-options/get-default-babel-options.ts","../../src/util/merge-transformers/merge-transformers.ts","../../src/util/take-browserslist-or-compute-based-on-compiler-options/take-browserslist-or-compute-based-on-compiler-options.ts","../../src/util/get-declaration-out-dir/get-declaration-out-dir.ts","../../src/service/transformer/declaration-bundler/util/apply-transformers.ts","../../src/service/transformer/declaration-bundler/util/get-chunk-filename.ts","../../src/service/transformer/declaration-bundler/util/format-lib-reference-directive.ts","../../src/service/transformer/declaration-bundler/util/format-type-reference-directive.ts","../../src/util/pick-resolved-module.ts","../../src/service/transformer/declaration-bundler/util/modifier-util.ts","../../src/service/transformer/declaration-bundler/util/create-export-specifier-from-name-and-modifiers.ts","../../src/service/transformer/declaration-bundler/transformers/track-imports-transformer/visitor/visit-import-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/track-imports-transformer/visitor/visit-import-type-node.ts","../../src/service/transformer/declaration-bundler/transformers/track-imports-transformer/visitor/visit-module-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/track-imports-transformer/visitor/visit-node.ts","../../src/service/transformer/declaration-bundler/transformers/track-imports-transformer/track-imports-transformer.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/visitor/visit-class-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/visitor/visit-class-expression.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/visitor/visit-function-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/visitor/visit-function-expression.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/visitor/visit-enum-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-binding-element.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-class-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-enum-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-function-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-import-clause.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-namespace-import.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-import-specifier.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-export-specifier.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-identifier.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-interface-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-type-alias-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-variable-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-export-assignment.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-call-expression.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-new-expression.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/visitor/trace-identifiers-for-node.ts","../../src/service/transformer/declaration-bundler/transformers/trace-identifiers/trace-identifiers.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/visitor/visit-variable-statement.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/visitor/visit-interface-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/visitor/visit-module-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/visitor/visit-type-alias-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/visitor/visit-export-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/visitor/visit-export-assignment.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/visitor/visit-node.ts","../../src/service/transformer/declaration-bundler/transformers/track-exports-transformer/track-exports-transformer.ts","../../src/service/transformer/declaration-bundler/transformers/source-file-bundler/source-file-bundler.ts","../../src/service/transformer/declaration-bundler/util/generate-module-specifier.ts","../../src/service/transformer/declaration-bundler/util/get-symbol-flags-for-node.ts","../../src/service/transformer/declaration-bundler/util/get-original-node.ts","../../src/service/transformer/declaration-bundler/util/get-symbol-at-location.ts","../../src/service/transformer/declaration-bundler/util/clone-node-with-meta.ts","../../src/service/transformer/declaration-bundler/util/clone-lexical-environment.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-declare-modifier-transformer/visitor/visit-class-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-declare-modifier-transformer/visitor/visit-class-expression.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-declare-modifier-transformer/visitor/visit-function-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-declare-modifier-transformer/visitor/visit-function-expression.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-declare-modifier-transformer/visitor/visit-enum-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-declare-modifier-transformer/visitor/visit-variable-statement.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-declare-modifier-transformer/visitor/visit-interface-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-declare-modifier-transformer/visitor/visit-module-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-declare-modifier-transformer/visitor/visit-type-alias-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-declare-modifier-transformer/visitor/visit-node.ts","../../src/util/is-debug/should-debug.ts","../../src/util/logging/get-formatted-date-time-prefix.ts","../../src/util/logging/log-metrics.ts","../../src/util/logging/log-transformer.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-declare-modifier-transformer/ensure-no-declare-modifier-transformer.ts","../../src/service/transformer/declaration-bundler/transformers/statement-merger/visitor/visit-import-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/statement-merger/visitor/visit-export-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/statement-merger/visitor/visit-export-assignment.ts","../../src/service/transformer/declaration-bundler/transformers/statement-merger/visitor/visit-node.ts","../../src/service/transformer/declaration-bundler/util/get-merged-import-declarations-for-modules.ts","../../src/service/transformer/declaration-bundler/util/get-merged-export-declarations-for-modules.ts","../../src/service/transformer/declaration-bundler/transformers/statement-merger/statement-merger.ts","../../src/service/transformer/declaration-bundler/transformers/module-merger/visitor/visit-export-declaration.ts","../../src/service/transformer/declaration-bundler/util/generate-identifier-name.ts","../../src/service/transformer/declaration-bundler/util/get-parent-node.ts","../../src/service/transformer/declaration-bundler/transformers/module-merger/visitor/visit-import-type-node.ts","../../src/service/transformer/declaration-bundler/transformers/module-merger/visitor/visit-import-declaration.ts","../../src/service/transformer/declaration-bundler/util/get-aliased-declaration.ts","../../src/service/transformer/declaration-bundler/util/generate-unique-binding.ts","../../src/service/transformer/declaration-bundler/util/create-aliased-binding.ts","../../src/service/transformer/declaration-bundler/util/locate-exported-symbol.ts","../../src/service/transformer/declaration-bundler/transformers/module-merger/visitor/visit-import-specifier.ts","../../src/service/transformer/declaration-bundler/transformers/module-merger/visitor/visit-export-specifier.ts","../../src/service/transformer/declaration-bundler/transformers/module-merger/visitor/visit-import-clause.ts","../../src/service/transformer/declaration-bundler/transformers/module-merger/visitor/visit-namespace-import.ts","../../src/service/transformer/declaration-bundler/transformers/module-merger/visitor/visit-source-file.ts","../../src/service/transformer/declaration-bundler/transformers/module-merger/visitor/visit-node.ts","../../src/service/transformer/declaration-bundler/util/is-statement.ts","../../src/service/transformer/declaration-bundler/transformers/module-merger/util/is-root-level-node.ts","../../src/service/transformer/declaration-bundler/util/get-node-placement-queue.ts","../../src/service/transformer/declaration-bundler/util/find-matching-imported-symbol.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-export-modifier-transformer/visitor/visit-class-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-export-modifier-transformer/visitor/visit-class-expression.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-export-modifier-transformer/visitor/visit-function-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-export-modifier-transformer/visitor/visit-function-expression.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-export-modifier-transformer/visitor/visit-enum-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-export-modifier-transformer/visitor/visit-variable-statement.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-export-modifier-transformer/visitor/visit-interface-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-export-modifier-transformer/visitor/visit-module-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-export-modifier-transformer/visitor/visit-type-alias-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-export-modifier-transformer/visitor/visit-node.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-no-export-modifier-transformer/ensure-no-export-modifier-transformer.ts","../../src/service/transformer/declaration-bundler/transformers/no-export-declaration-transformer/visitor/visit-export-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/no-export-declaration-transformer/visitor/visit-export-assignment.ts","../../src/service/transformer/declaration-bundler/transformers/no-export-declaration-transformer/visitor/visit-node.ts","../../src/service/transformer/declaration-bundler/transformers/no-export-declaration-transformer/no-export-declaration-transformer.ts","../../src/service/transformer/declaration-bundler/transformers/module-merger/module-merger.ts","../../src/service/transformer/declaration-bundler/util/add-binding-to-lexical-environment.ts","../../src/service/transformer/declaration-bundler/util/is-identifier-free.ts","../../src/service/transformer/declaration-bundler/util/get-original-source-file.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-binding-element.ts","../../src/service/transformer/declaration-bundler/util/node-arrays-are-equal.ts","../../src/service/transformer/declaration-bundler/util/get-id-for-node.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-class-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-class-expression.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-enum-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-enum-member.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-export-specifier.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-function-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-function-expression.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-get-accessor-declaration.ts","../../src/service/transformer/declaration-bundler/util/get-binding-from-lexical-environment.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-identifier.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-import-clause.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-import-specifier.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-interface-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-mapped-type-node.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-method-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-index-signature-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-method-signature.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-module-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-namespace-import.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-parameter-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-property-assignment.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-property-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-property-signature.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-set-accessor-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-type-alias-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-type-parameter-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-variable-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-function-type.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/visitor/deconflict-import-type-node.ts","../../src/service/transformer/declaration-bundler/transformers/deconflicter/deconflicter.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-declare-modifier-transformer/visitor/visit-class-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-declare-modifier-transformer/visitor/visit-class-expression.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-declare-modifier-transformer/visitor/visit-function-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-declare-modifier-transformer/visitor/visit-function-expression.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-declare-modifier-transformer/visitor/visit-enum-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-declare-modifier-transformer/visitor/visit-variable-statement.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-declare-modifier-transformer/visitor/visit-interface-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-declare-modifier-transformer/visitor/visit-module-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-declare-modifier-transformer/visitor/visit-type-alias-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-declare-modifier-transformer/visitor/visit-node.ts","../../src/service/transformer/declaration-bundler/transformers/ensure-declare-modifier-transformer/ensure-declare-modifier-transformer.ts","../../src/service/transformer/declaration-bundler/transformers/module-block-extractor/visitor/visit-module-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/module-block-extractor/visitor/visit-node.ts","../../src/service/transformer/declaration-bundler/transformers/module-block-extractor/module-block-extractor.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-import-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-variable-statement.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-variable-declaration-list.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-variable-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-import-specifier.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-import-clause.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-named-imports.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-namespace-import.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-class-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-class-expression.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-function-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-function-expression.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-enum-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-interface-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-type-alias-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-module-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-export-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-array-binding-pattern.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-binding-element.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-object-binding-pattern.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-identifier.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-class-declaration.ts","../../src/service/transformer/declaration-bundler/util/is-symbol-identifier.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-identifier.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-class-expression.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-interface-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-enum-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-type-alias-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-function-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-function-expression.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-variable-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-export-specifier.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-array-binding-pattern.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-object-binding-pattern.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-binding-element.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-method-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-method-signature.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-property-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-property-signature.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-get-accessor-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-set-accessor-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-parameter-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-variable-declaration-list.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-variable-statement.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-export-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-export-assignment.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-module-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-indexed-access-type-node.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-property-access-expression.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/visitor/check-qualified-name.ts","../../src/service/transformer/declaration-bundler/util/node-contains-child.ts","../../src/service/transformer/declaration-bundler/transformers/reference/is-referenced/is-referenced.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-export-assignment.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/visitor/visit-import-equals-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/tree-shaker/tree-shaker.ts","../../src/service/transformer/declaration-bundler/transformers/to-export-declaration-transformer/visitor/visit-class-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/to-export-declaration-transformer/visitor/visit-class-expression.ts","../../src/service/transformer/declaration-bundler/transformers/to-export-declaration-transformer/visitor/visit-function-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/to-export-declaration-transformer/visitor/visit-function-expression.ts","../../src/service/transformer/declaration-bundler/transformers/to-export-declaration-transformer/visitor/visit-enum-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/to-export-declaration-transformer/visitor/visit-variable-statement.ts","../../src/service/transformer/declaration-bundler/transformers/to-export-declaration-transformer/visitor/visit-interface-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/to-export-declaration-transformer/visitor/visit-module-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/to-export-declaration-transformer/visitor/visit-type-alias-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/to-export-declaration-transformer/visitor/visit-node.ts","../../src/service/transformer/declaration-bundler/transformers/to-export-declaration-transformer/to-export-declaration-transformer.ts","../../src/service/transformer/declaration-bundler/util/type-module-reference-is-allowed.ts","../../src/service/transformer/declaration-bundler/util/get-type-reference-module-from-file-name.ts","../../src/service/transformer/declaration-bundler/util/get-type-reference-module-from-node.ts","../../src/service/transformer/declaration-bundler/transformers/type-reference-collector/visitor/visit-identifier.ts","../../src/service/transformer/declaration-bundler/transformers/type-reference-collector/visitor/visit-node.ts","../../src/service/transformer/declaration-bundler/transformers/type-reference-collector/type-reference-collector.ts","../../src/service/transformer/declaration-bundler/declaration-bundler.ts","../../src/service/emit/declaration/bundle-declarations-for-chunk.ts","../../src/service/transformer/declaration-bundler/util/prepare-paths/prepare-paths.ts","../../src/util/chunk/normalize-chunk.ts","../../src/util/chunk/merge-chunks-with-ambient-dependencies.ts","../../src/util/logging/log-emit.ts","../../src/service/emit/declaration/emit-declarations.ts","../../src/util/replace-babel-esm-helpers/replace-babel-esm-helpers.ts","../../src/service/module-resolution-host/module-resolution-host.ts","../../src/util/get-new-line-character/get-new-line-character.ts","../../src/util/resolve-id/resolve-id.ts","../../src/util/get-script-kind-from-path/get-script-kind-from-path.ts","../../src/service/transformer/ensure-module/ensure-module-transformer.ts","../../src/service/transformer/declaration-bundler/transformers/track-dependencies-transformer/visitor/visit-import-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/track-dependencies-transformer/visitor/visit-import-type-node.ts","../../src/service/transformer/declaration-bundler/transformers/track-dependencies-transformer/visitor/visit-module-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/track-dependencies-transformer/visitor/visit-export-declaration.ts","../../src/service/transformer/declaration-bundler/transformers/track-dependencies-transformer/visitor/visit-node.ts","../../src/service/transformer/declaration-bundler/transformers/track-dependencies-transformer/track-dependencies-transformer.ts","../../src/util/get-module-dependencies/get-module-dependencies.ts","../../src/service/compiler-host/compiler-host.ts","../../src/util/is-build-info-output-file/is-build-info-output-file.ts","../../src/service/emit/tsbuildinfo/emit-build-info.ts","../../src/util/is-json-like/is-json-like.ts","../../src/plugin/typescript-plugin.ts"],"sourcesContent":["export const SOURCE_MAP_EXTENSION = \".map\";\nexport const TS_EXTENSION = \".ts\";\nexport const TSX_EXTENSION = \".tsx\";\nexport const JS_EXTENSION = \".js\";\nexport const JS_MAP_EXTENSION = `${JS_EXTENSION}${SOURCE_MAP_EXTENSION}`;\nexport const JSX_EXTENSION = \".jsx\";\nexport const JSON_EXTENSION = \".json\";\nexport const MJS_EXTENSION = \".mjs\";\nexport const MJSX_EXTENSION = \".mjsx\";\nexport const D_TS_EXTENSION = `.d${TS_EXTENSION}`;\nexport const D_TS_MAP_EXTENSION = `.d${TS_EXTENSION}${SOURCE_MAP_EXTENSION}`;\nexport const TSBUILDINFO_EXTENSION = `.tsbuildinfo`;\n\nexport const KNOWN_EXTENSIONS = new Set([\n\tD_TS_EXTENSION,\n\tD_TS_MAP_EXTENSION,\n\tJS_MAP_EXTENSION,\n\tTS_EXTENSION,\n\tTSX_EXTENSION,\n\tJS_EXTENSION,\n\tJSX_EXTENSION,\n\tJSON_EXTENSION,\n\tMJS_EXTENSION,\n\tMJSX_EXTENSION,\n\tTSBUILDINFO_EXTENSION\n] as const);\n\nexport const DEFAULT_TSCONFIG_FILE_NAME = \"tsconfig.json\";\nexport const NODE_MODULES = \"node_modules\";\nexport const NODE_MODULES_MATCH_PATH = `/${NODE_MODULES}/`;\nexport const SOURCE_MAP_COMMENT = \"//# sourceMappingURL\";\nexport const SOURCE_MAP_COMMENT_REGEXP = /\\/\\/# sourceMappingURL=(\\S*)/;\nexport const TSLIB_NAME = `tslib${D_TS_EXTENSION}`;\nexport const BABEL_RUNTIME_PREFIX_1 = \"@babel/runtime/\";\nexport const BABEL_RUNTIME_PREFIX_2 = \"babel-runtime/\";\n\nexport const BABEL_CONFIG_JS_FILENAME = \"babel.config.js\";\nexport const BABEL_CONFIG_JSON_FILENAME = \"babel.config.json\";\nexport const BABELRC_FILENAME = \".babelrc\";\n\nexport const REGENERATOR_RUNTIME_NAME_1 = `${BABEL_RUNTIME_PREFIX_1}regenerator/index.js`;\nexport const REGENERATOR_RUNTIME_NAME_2 = `${BABEL_RUNTIME_PREFIX_2}regenerator/index.js`;\nexport const BABEL_REQUIRE_RUNTIME_HELPER_REGEXP_1 = new RegExp(`(require\\\\([\"'\\`])(${BABEL_RUNTIME_PREFIX_1}helpers/esm/[^\"'\\`]*)[\"'\\`]\\\\)`);\nexport const BABEL_REQUIRE_RUNTIME_HELPER_REGEXP_2 = new RegExp(`(require\\\\([\"'\\`])(${BABEL_RUNTIME_PREFIX_2}helpers/esm/[^\"'\\`]*)[\"'\\`]\\\\)`);\n\nexport const BABEL_MINIFICATION_BLACKLIST_PRESET_NAMES = [];\n\nexport const BABEL_MINIFICATION_BLACKLIST_PLUGIN_NAMES = [\"@babel/plugin-transform-runtime\", \"babel-plugin-transform-runtime\"];\n\nexport const BABEL_MINIFY_PRESET_NAMES = [\"babel-preset-minify\"];\n\nexport const BABEL_MINIFY_PLUGIN_NAMES = [\n\t\"babel-plugin-transform-minify-booleans\",\n\t\"babel-plugin-minify-builtins\",\n\t\"babel-plugin-transform-inline-consecutive-adds\",\n\t\"babel-plugin-minify-dead-code-elimination\",\n\t\"babel-plugin-minify-constant-folding\",\n\t\"babel-plugin-minify-flip-comparisons\",\n\t\"babel-plugin-minify-guarded-expressions\",\n\t\"babel-plugin-minify-infinity\",\n\t\"babel-plugin-minify-mangle-names\",\n\t\"babel-plugin-transform-member-expression-literals\",\n\t\"babel-plugin-transform-merge-sibling-variables\",\n\t\"babel-plugin-minify-numeric-literals\",\n\t\"babel-plugin-transform-property-literals\",\n\t\"babel-plugin-transform-regexp-constructors\",\n\t\"babel-plugin-transform-remove-console\",\n\t\"babel-plugin-transform-remove-debugger\",\n\t\"babel-plugin-transform-remove-undefined\",\n\t\"babel-plugin-minify-replace\",\n\t\"babel-plugin-minify-simplify\",\n\t\"babel-plugin-transform-simplify-comparison-operators\",\n\t\"babel-plugin-minify-type-constructors\",\n\t\"babel-plugin-transform-undefined-to-void\"\n];\n\nexport const FORCED_BABEL_PRESET_ENV_OPTIONS = {\n\tmodules: false\n};\n\nexport const FORCED_BABEL_YEARLY_PRESET_OPTIONS = {\n\t...FORCED_BABEL_PRESET_ENV_OPTIONS\n};\n\nexport const FORCED_BABEL_PLUGIN_TRANSFORM_RUNTIME_OPTIONS = {\n\thelpers: true,\n\tregenerator: true,\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tuseESModules: true\n};\n\nexport const ROLLUP_PLUGIN_MULTI_ENTRY = \"\\0rollup-plugin-multi-entry:entry-point\";\n","import path, {ParsedPath} from \"path\";\nimport {platform} from \"os\";\nimport {\n\tBABEL_RUNTIME_PREFIX_1,\n\tBABEL_RUNTIME_PREFIX_2,\n\tD_TS_EXTENSION,\n\tD_TS_MAP_EXTENSION,\n\tKNOWN_EXTENSIONS,\n\tNODE_MODULES,\n\tNODE_MODULES_MATCH_PATH,\n\tROLLUP_PLUGIN_MULTI_ENTRY,\n\tTSLIB_NAME\n} from \"../../constant/constant\";\nimport slash from \"slash\";\n\nexport const ROOT_DIRECTORY = path.parse(process.cwd()).root;\nexport const PLATFORM = platform();\nexport const DRIVE_LETTER_REGEXP = /^\\w:/;\n\nexport function relative(from: string, to: string): string {\n\treturn ensurePosix(path.relative(from, to));\n}\n\nexport function join(...paths: string[]): string {\n\treturn ensurePosix(path.join(...paths));\n}\n\nexport function normalize(p: string): string {\n\treturn ensurePosix(p);\n}\n\nexport function resolve(p: string): string {\n\treturn ensurePosix(path.resolve(p));\n}\n\nexport function dirname(p: string): string {\n\treturn ensurePosix(path.dirname(p));\n}\n\nexport function basename(p: string): string {\n\treturn ensurePosix(path.basename(p));\n}\n\nexport function extname(p: string): string {\n\treturn path.extname(p);\n}\n\nexport function parse(p: string): ParsedPath {\n\tconst parsedPath = path.parse(p);\n\treturn {\n\t\text: parsedPath.ext,\n\t\tname: normalize(parsedPath.name),\n\t\tbase: normalize(parsedPath.base),\n\t\tdir: normalize(parsedPath.dir),\n\t\troot: normalize(parsedPath.root)\n\t};\n}\n\nexport function isTypeScriptLib(p: string): boolean {\n\treturn p.startsWith(`lib.`) && p.endsWith(D_TS_EXTENSION);\n}\n\n/**\n * On Windows, it is important that all absolute paths are absolute, including the drive letter, because TypeScript assumes this\n */\nexport function ensureHasDriveLetter(p: string): string {\n\tif (PLATFORM !== \"win32\") return p;\n\tif (DRIVE_LETTER_REGEXP.test(p)) return p;\n\tif (p.startsWith(ROOT_DIRECTORY)) return p;\n\tif (!isAbsolute(p)) return p;\n\treturn nativeJoin(ROOT_DIRECTORY, p);\n}\n\n/**\n * Ensures that the given path follows posix file names\n */\nexport function ensurePosix(p: string): string {\n\treturn slash(p);\n}\n\nexport function nativeNormalize(p: string): string {\n\t// Converts to either POSIX or native Windows file paths\n\treturn path.normalize(p);\n}\n\nexport function nativeDirname(p: string): string {\n\treturn path.dirname(p);\n}\n\nexport function nativeJoin(...paths: string[]): string {\n\treturn path.join(...paths);\n}\n\nexport function isAbsolute(p: string): boolean {\n\treturn path.isAbsolute(p);\n}\n\n/**\n * Gets the extension of the given file\n */\nexport function getExtension(file: string): string {\n\tif (file.endsWith(D_TS_EXTENSION)) return D_TS_EXTENSION;\n\telse if (file.endsWith(D_TS_MAP_EXTENSION)) return D_TS_MAP_EXTENSION;\n\treturn extname(file);\n}\n\n/**\n * Returns true if the given path represents an external library\n */\nexport function isExternalLibrary(p: string): boolean {\n\treturn (!p.startsWith(\".\") && !p.startsWith(\"/\")) || p.includes(NODE_MODULES_MATCH_PATH);\n}\n\n/**\n * Returns true if the given id represents tslib\n */\nexport function isTslib(p: string): boolean {\n\treturn p === \"tslib\" || normalize(p).endsWith(`/tslib/${TSLIB_NAME}`) || normalize(p).endsWith(\"/tslib/tslib.es6.js\") || normalize(p).endsWith(\"/tslib/tslib.js\");\n}\n\n/**\n * Returns true if the given path represents a Babel helper\n */\nexport function isBabelHelper(p: string): boolean {\n\treturn includesBabelEsmHelper(p) || isBabelCjsHelper(p);\n}\n\n/**\n * Returns true if the given path represents an internal core-js file.\n * This is relevant when combining Babel's preset-env with 'useBuiltIns' with values other than false.\n */\nexport function isCoreJsInternals(p: string): boolean {\n\tconst normalizedPath = normalize(p);\n\treturn normalizedPath.includes(NODE_MODULES) && normalizedPath.includes(\"core-js/\");\n}\n\n/**\n * Returns true if the given path represents a Babel ESM helper\n */\nexport function includesBabelEsmHelper(p: string): boolean {\n\treturn normalize(p).includes(`${BABEL_RUNTIME_PREFIX_1}helpers/esm`) || normalize(p).includes(`${BABEL_RUNTIME_PREFIX_2}helpers/esm`);\n}\n\n/**\n * Returns true if the given path represents a Babel CJS helper\n */\nexport function isBabelCjsHelper(p: string): boolean {\n\treturn !includesBabelEsmHelper(p) && (normalize(p).includes(`${BABEL_RUNTIME_PREFIX_1}helpers`) || normalize(p).includes(`${BABEL_RUNTIME_PREFIX_2}helpers`));\n}\n\n/**\n * Returns true if the given path represents @babel/preset-env\n */\nexport function isBabelPresetEnv(p: string): boolean {\n\treturn normalize(p).includes(\"@babel/preset-env\") || normalize(p).includes(\"babel-preset-env\");\n}\n\n/**\n * Returns true if the given path represents the entry point for rollup-plugin-multi-entry\n */\nexport function isRollupPluginMultiEntry(p: string): boolean {\n\treturn normalize(p) === ROLLUP_PLUGIN_MULTI_ENTRY;\n}\n\n/**\n * Returns true if the given path represents @babel/preset-es[2015|2016|2017]\n */\nexport function isYearlyBabelPreset(p: string): boolean {\n\treturn normalize(p).includes(\"@babel/preset-es\") || normalize(p).includes(\"babel-preset-es\");\n}\n\n/**\n * Returns true if the given path represents @babel/plugin-transform-runtime\n */\nexport function isBabelPluginTransformRuntime(p: string): boolean {\n\treturn normalize(p).includes(\"@babel/plugin-transform-runtime\") || normalize(p).includes(\"babel-plugin-transform-runtime\");\n}\n\nexport function somePathsAreRelated(paths: Iterable<string>, matchPath: string): boolean {\n\tfor (const p of paths) {\n\t\tif (pathsAreRelated(p, matchPath)) return true;\n\t}\n\treturn false;\n}\n\nexport function pathsAreRelated(a: string, b: string): boolean {\n\tif (a === b) return true;\n\n\t// A node_modules folder may contain one or more nested node_modules\n\tif (a.includes(NODE_MODULES) || b.includes(NODE_MODULES)) {\n\t\tconst firstPathFromNodeModules = a.includes(NODE_MODULES) ? a.slice(a.indexOf(NODE_MODULES)) : a;\n\t\tconst secondPathFromNodeModules = b.includes(NODE_MODULES) ? b.slice(b.indexOf(NODE_MODULES)) : b;\n\n\t\tif (firstPathFromNodeModules.includes(secondPathFromNodeModules)) return true;\n\t\tif (secondPathFromNodeModules.includes(firstPathFromNodeModules)) return true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Strips the extension from a file\n */\nexport function stripKnownExtension(file: string): string {\n\tlet currentExtname: string | undefined;\n\n\tfor (const extName of KNOWN_EXTENSIONS) {\n\t\tif (file.endsWith(extName)) {\n\t\t\tcurrentExtname = extName;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (currentExtname == null) return file;\n\n\treturn file.slice(0, file.lastIndexOf(currentExtname));\n}\n\n/**\n * Sets the given extension for the given file\n */\nexport function setExtension(file: string, extension: string): string {\n\treturn normalize(`${stripKnownExtension(file)}${extension}`);\n}\n\n/**\n * Ensure that the given path has a leading \".\"\n */\nexport function ensureHasLeadingDotAndPosix(p: string, externalGuard = true): string {\n\tif (externalGuard && isExternalLibrary(p)) return p;\n\n\tconst posixPath = ensurePosix(p);\n\tif (posixPath.startsWith(\".\")) return posixPath;\n\tif (posixPath.startsWith(\"/\")) return `.${posixPath}`;\n\treturn `./${posixPath}`;\n}\n\n/**\n * Ensures that the given path is relative\n */\nexport function ensureRelative(root: string, p: string): string {\n\t// If the path is already relative, simply return it\n\tif (!isAbsolute(p)) {\n\t\treturn normalize(p);\n\t}\n\n\t// Otherwise, construct a relative path from the root\n\treturn relative(root, p);\n}\n\n/**\n * Ensures that the given path is absolute\n */\nexport function ensureAbsolute(root: string, p: string): string {\n\t// If the path is already absolute, simply return it\n\tif (isAbsolute(p)) {\n\t\treturn normalize(p);\n\t}\n\n\t// Otherwise, construct an absolute path from the root\n\treturn join(root, p);\n}\n","import {TS} from \"../../type/ts\";\nimport {ensureAbsolute, join, parse, setExtension} from \"../path/path-util\";\nimport {TSBUILDINFO_EXTENSION} from \"../../constant/constant\";\nimport {ParsedCommandLineResult} from \"../get-parsed-command-line/parsed-command-line-result\";\n\nexport interface FinalizeParsedCommandLineOptions {\n\tcwd: string;\n\tparsedCommandLineResult: ParsedCommandLineResult;\n}\n\nexport function finalizeParsedCommandLine({\n\tcwd,\n\tparsedCommandLineResult: {originalCompilerOptions, parsedCommandLine, tsconfigPath}\n}: FinalizeParsedCommandLineOptions): TS.ParsedCommandLine {\n\t// Declarations may be generated, but not as part of the Builder/Incremental program which is used during the transform, renderChunk, and generateBundle phases, so a nice optimization can be to instruct TypeScript not to generate them.\n\t// The raw CompilerOptions will be preserved and used in the last compilation phase to generate declarations if needed.\n\t// However, when 'composite' is true or when incremental compilation is active, declarations must be emitted for buildInfo to work, so under such circumstances this optimization must be skipped.\n\tconst canApplySkipDeclarationsOptimization =\n\t\t!Boolean(parsedCommandLine.options.incremental) &&\n\t\t!Boolean(parsedCommandLine.options.composite) &&\n\t\tparsedCommandLine.options.tsBuildInfoFile == null &&\n\t\t(parsedCommandLine.projectReferences == null || parsedCommandLine.projectReferences.length < 1);\n\tif (canApplySkipDeclarationsOptimization) {\n\t\tparsedCommandLine.options.declaration = false;\n\t\tparsedCommandLine.options.declarationMap = false;\n\t\tparsedCommandLine.options.declarationDir = undefined;\n\t}\n\n\t// Ensure that at tsBuildInfoFile exists if 'composite' or 'incremental' is true\n\tif (parsedCommandLine.options.incremental === true || parsedCommandLine.options.composite === true) {\n\t\tif (parsedCommandLine.options.tsBuildInfoFile != null) {\n\t\t\tparsedCommandLine.options.tsBuildInfoFile = ensureAbsolute(cwd, parsedCommandLine.options.tsBuildInfoFile);\n\t\t}\n\n\t\t// Otherwise, use the _actual_ outDir/outFile from the resolved tsconfig to build the path to the .tsbuildinfo file since TypeScript should be able to actually\n\t\t// resolve the file from the path pointed to by the user\n\t\telse {\n\t\t\tlet tsBuildInfoAbsolutePath: string;\n\t\t\t// Use outDir as the base directory\n\t\t\tif (originalCompilerOptions.outDir != null) {\n\t\t\t\ttsBuildInfoAbsolutePath = join(ensureAbsolute(cwd, originalCompilerOptions.outDir), `${parse(tsconfigPath).name}${TSBUILDINFO_EXTENSION}`);\n\t\t\t}\n\n\t\t\t// Otherwise, use outFile but replace the extension\n\t\t\telse if (originalCompilerOptions.outFile != null) {\n\t\t\t\ttsBuildInfoAbsolutePath = ensureAbsolute(cwd, setExtension(originalCompilerOptions.outFile, TSBUILDINFO_EXTENSION));\n\t\t\t}\n\n\t\t\t// Otherwise, use 'cwd' as the directory for the .tsbuildinfo file\n\t\t\telse {\n\t\t\t\ttsBuildInfoAbsolutePath = join(ensureAbsolute(cwd, `${parse(tsconfigPath).name}${TSBUILDINFO_EXTENSION}`));\n\t\t\t}\n\n\t\t\tparsedCommandLine.options.tsBuildInfoFile = tsBuildInfoAbsolutePath;\n\t\t}\n\t}\n\n\treturn parsedCommandLine;\n}\n","import {ensureAbsolute, nativeDirname} from \"../path/path-util\";\nimport {D_TS_EXTENSION, DEFAULT_TSCONFIG_FILE_NAME} from \"../../constant/constant\";\nimport {ParsedCommandLineResult} from \"./parsed-command-line-result\";\nimport {InputCompilerOptions, TsConfigResolver, TsConfigResolverWithFileName, TypescriptPluginOptions} from \"../../plugin/i-typescript-plugin-options\";\nimport {TS} from \"../../type/ts\";\nimport {finalizeParsedCommandLine} from \"../finalize-parsed-command-line/finalize-parsed-command-line\";\nimport {FileSystem} from \"../file-system/file-system\";\n\nexport interface GetParsedCommandLineOptions {\n\tcwd: string;\n\ttsconfig?: TypescriptPluginOptions[\"tsconfig\"];\n\tforcedCompilerOptions?: TS.CompilerOptions;\n\tfileSystem: FileSystem;\n\ttypescript: typeof TS;\n}\n\n/**\n * Returns true if the given tsconfig is a ParsedCommandLine\n */\nexport function isParsedCommandLine(tsconfig?: GetParsedCommandLineOptions[\"tsconfig\"]): tsconfig is TS.ParsedCommandLine {\n\treturn tsconfig != null && typeof tsconfig !== \"string\" && typeof tsconfig !== \"function\" && \"options\" in tsconfig && !(\"hook\" in tsconfig);\n}\n\n/**\n * Returns true if the given tsconfig are raw, JSON-serializable CompilerOptions\n */\nexport function isRawCompilerOptions(tsconfig?: GetParsedCommandLineOptions[\"tsconfig\"]): tsconfig is Partial<InputCompilerOptions> {\n\treturn tsconfig != null && typeof tsconfig !== \"string\" && typeof tsconfig !== \"function\" && !(\"options\" in tsconfig) && !(\"hook\" in tsconfig);\n}\n\n/**\n * Returns true if the given tsconfig is in fact a function that receives resolved CompilerOptions that can be extended\n */\nexport function isTsConfigResolver(tsconfig?: GetParsedCommandLineOptions[\"tsconfig\"]): tsconfig is TsConfigResolver {\n\treturn tsconfig != null && typeof tsconfig === \"function\";\n}\n\n/**\n * Returns true if the given tsconfig is in fact an object that provides a filename for a tsconfig,\n * as well as a 'hook' function that receives resolved CompilerOptions that can be extended\n */\nexport function isTsConfigResolverWithFileName(tsconfig?: GetParsedCommandLineOptions[\"tsconfig\"]): tsconfig is TsConfigResolverWithFileName {\n\treturn tsconfig != null && typeof tsconfig !== \"string\" && typeof tsconfig !== \"function\" && !(\"options\" in tsconfig) && \"hook\" in tsconfig;\n}\n\n/**\n * Returns true if the given tsconfig are CompilerOptions\n */\nexport function isCompilerOptions(tsconfig?: GetParsedCommandLineOptions[\"tsconfig\"]): tsconfig is Partial<TS.CompilerOptions> {\n\treturn (\n\t\ttsconfig != null &&\n\t\ttypeof tsconfig !== \"string\" &&\n\t\ttypeof tsconfig !== \"function\" &&\n\t\t!(\"options\" in tsconfig) &&\n\t\t!(\"hook\" in tsconfig) &&\n\t\t((\"module\" in tsconfig && typeof tsconfig.module === \"number\") ||\n\t\t\t(\"target\" in tsconfig && typeof tsconfig.target === \"number\") ||\n\t\t\t(\"jsx\" in tsconfig && typeof tsconfig.jsx === \"number\") ||\n\t\t\t(\"moduleResolution\" in tsconfig && typeof tsconfig.moduleResolution === \"number\") ||\n\t\t\t(\"newLine\" in tsconfig && typeof tsconfig.newLine === \"number\"))\n\t);\n}\n\n/**\n * Gets a ParsedCommandLine based on the given options\n */\nexport function getParsedCommandLine(options: GetParsedCommandLineOptions): ParsedCommandLineResult {\n\tconst {cwd, tsconfig, fileSystem, forcedCompilerOptions = {}, typescript} = options;\n\tconst hasProvidedTsconfig = tsconfig != null;\n\tlet originalCompilerOptions: TS.CompilerOptions | undefined;\n\tlet parsedCommandLine: TS.ParsedCommandLine;\n\tlet tsconfigPath: string = ensureAbsolute(cwd, DEFAULT_TSCONFIG_FILE_NAME);\n\n\t// If the given tsconfig is already a ParsedCommandLine, use that one, but apply the forced CompilerOptions\n\tif (isParsedCommandLine(tsconfig)) {\n\t\toriginalCompilerOptions = tsconfig.options;\n\t\ttsconfig.options = {...tsconfig.options, ...forcedCompilerOptions};\n\t\tparsedCommandLine = tsconfig;\n\t}\n\n\t// If the user provided CompilerOptions directly, use those to build a ParsedCommandLine\n\telse if (isCompilerOptions(tsconfig)) {\n\t\toriginalCompilerOptions = typescript.parseJsonConfigFileContent({}, fileSystem, cwd, tsconfig).options;\n\t\tparsedCommandLine = typescript.parseJsonConfigFileContent({}, fileSystem, cwd, {\n\t\t\t...tsconfig,\n\t\t\t...forcedCompilerOptions\n\t\t});\n\t}\n\n\t// If the user provided JSON-serializable (\"raw\") CompilerOptions directly, use those to build a ParsedCommandLine\n\telse if (isRawCompilerOptions(tsconfig)) {\n\t\toriginalCompilerOptions = typescript.parseJsonConfigFileContent({compilerOptions: tsconfig}, fileSystem, cwd).options;\n\t\tparsedCommandLine = typescript.parseJsonConfigFileContent({compilerOptions: tsconfig}, fileSystem, cwd, forcedCompilerOptions);\n\t}\n\n\t// Otherwise, attempt to resolve it and parse it\n\telse {\n\t\ttsconfigPath = ensureAbsolute(\n\t\t\tcwd,\n\t\t\tisTsConfigResolverWithFileName(tsconfig) ? tsconfig.fileName : tsconfig != null && !isTsConfigResolver(tsconfig) ? tsconfig : DEFAULT_TSCONFIG_FILE_NAME\n\t\t);\n\n\t\t// If the file exists, read the tsconfig on that location\n\t\tlet tsconfigContent = fileSystem.readFile(tsconfigPath);\n\n\t\t// Otherwise, if the user hasn't provided any tsconfig at all, start from an empty one (and only use the forced options)\n\t\tif (tsconfigContent == null && !hasProvidedTsconfig) {\n\t\t\ttsconfigContent = \"\";\n\t\t}\n\n\t\t// Finally, if the user has provided a file that doesn't exist, throw\n\t\telse if (tsconfigContent == null) {\n\t\t\tthrow new ReferenceError(`The given tsconfig: '${tsconfigPath}' doesn't exist!`);\n\t\t}\n\n\t\tconst tsconfigJson = typescript.parseConfigFileTextToJson(tsconfigPath, tsconfigContent).config;\n\t\tconst basePath = nativeDirname(tsconfigPath);\n\n\t\toriginalCompilerOptions = typescript.parseJsonConfigFileContent(tsconfigJson, fileSystem, basePath, {}, tsconfigPath).options;\n\t\tparsedCommandLine = typescript.parseJsonConfigFileContent(tsconfigJson, fileSystem, basePath, forcedCompilerOptions, tsconfigPath);\n\n\t\t// If an extension hook has been provided. Make sure to still apply the forced CompilerOptions\n\t\tif (isTsConfigResolver(tsconfig)) {\n\t\t\toriginalCompilerOptions = {...tsconfig(originalCompilerOptions)};\n\t\t\tparsedCommandLine.options = {...tsconfig(parsedCommandLine.options), ...forcedCompilerOptions};\n\t\t} else if (isTsConfigResolverWithFileName(tsconfig)) {\n\t\t\t// If an extension hook has been provided through the 'hook' property. Make sure to still apply the forced CompilerOptions\n\t\t\toriginalCompilerOptions = {...tsconfig.hook(originalCompilerOptions)};\n\t\t\tparsedCommandLine.options = {...tsconfig.hook(parsedCommandLine.options), ...forcedCompilerOptions};\n\t\t}\n\t}\n\n\t// Remove all non-declaration files from the default file names since these will be handled separately by Rollup\n\tparsedCommandLine.fileNames = parsedCommandLine.fileNames.filter(file => file.endsWith(D_TS_EXTENSION));\n\n\tconst parsedCommandLineResult: ParsedCommandLineResult = {\n\t\tparsedCommandLine,\n\t\toriginalCompilerOptions,\n\t\ttsconfigPath\n\t};\n\n\t// On some TypeScript versions such as 3.0.0, the 'composite' feature\n\t// require that a specific configFilePath exists on the CompilerOptions,\n\t// so make sure a path is always set.\n\tif (parsedCommandLine.options.configFilePath == null) {\n\t\tparsedCommandLine.options.configFilePath = tsconfigPath;\n\t}\n\n\t// Finalize the parsed command line\n\tfinalizeParsedCommandLine({...options, parsedCommandLineResult});\n\n\treturn parsedCommandLineResult;\n}\n","import {getAppropriateEcmaVersionForBrowserslist} from \"@wessberg/browserslist-generator\";\nimport {TS} from \"../../type/ts\";\n\n/**\n * Gets the ScriptTarget to use from the given Browserslist\n */\nexport function getScriptTargetFromBrowserslist(browserslist: string[], typescript: typeof TS): TS.ScriptTarget {\n\tswitch (getAppropriateEcmaVersionForBrowserslist(browserslist)) {\n\t\tcase \"es3\":\n\t\t\treturn typescript.ScriptTarget.ES3;\n\t\tcase \"es5\":\n\t\t\treturn typescript.ScriptTarget.ES5;\n\t\tcase \"es2015\":\n\t\t\treturn typescript.ScriptTarget.ES2015;\n\t\t// Support older TypeScript versions that may not supported ES2016 as a ScriptTarget with nullish coalescing\n\t\tcase \"es2016\":\n\t\t\treturn typescript.ScriptTarget.ES2016 ?? typescript.ScriptTarget.ES2015;\n\t\t// Support older TypeScript versions that may not supported ES2016 as a ScriptTarget with nullish coalescing\n\t\tcase \"es2017\":\n\t\t\treturn typescript.ScriptTarget.ES2017 ?? typescript.ScriptTarget.ES2016 ?? typescript.ScriptTarget.ES2015;\n\t\t// Support older TypeScript versions that may not supported ES2016 as a ScriptTarget with nullish coalescing\n\t\tcase \"es2018\":\n\t\t\treturn typescript.ScriptTarget.ES2018 ?? typescript.ScriptTarget.ES2017 ?? typescript.ScriptTarget.ES2016 ?? typescript.ScriptTarget.ES2015;\n\t\t// Support older TypeScript versions that may not supported ES2016 as a ScriptTarget with nullish coalescing\n\t\tcase \"es2019\":\n\t\t\treturn typescript.ScriptTarget.ES2019 ?? typescript.ScriptTarget.ES2018 ?? typescript.ScriptTarget.ES2017 ?? typescript.ScriptTarget.ES2016 ?? typescript.ScriptTarget.ES2015;\n\t\t// Support older TypeScript versions that may not supported ES2016 as a ScriptTarget with nullish coalescing\n\t\tcase \"es2020\":\n\t\t\treturn (\n\t\t\t\ttypescript.ScriptTarget.ES2020 ??\n\t\t\t\ttypescript.ScriptTarget.ES2019 ??\n\t\t\t\ttypescript.ScriptTarget.ES2018 ??\n\t\t\t\ttypescript.ScriptTarget.ES2017 ??\n\t\t\t\ttypescript.ScriptTarget.ES2016 ??\n\t\t\t\ttypescript.ScriptTarget.ES2015\n\t\t\t);\n\t}\n}\n\n/**\n * Gets the EcmaVersion that represents the given ScriptTarget\n */\nexport function getEcmaVersionForScriptTarget(\n\tscriptTarget: TS.ScriptTarget,\n\ttypescript: typeof TS\n): \"es3\" | \"es5\" | \"es2015\" | \"es2016\" | \"es2017\" | \"es2018\" | \"es2019\" | \"es2020\" {\n\tswitch (scriptTarget) {\n\t\tcase typescript.ScriptTarget.ES3:\n\t\t\treturn \"es3\";\n\t\tcase typescript.ScriptTarget.ES5:\n\t\t\treturn \"es5\";\n\t\tcase typescript.ScriptTarget.ES2015:\n\t\t\treturn \"es2015\";\n\t\tcase typescript.ScriptTarget.ES2016:\n\t\t\treturn \"es2016\";\n\t\tcase typescript.ScriptTarget.ES2017:\n\t\t\treturn \"es2017\";\n\t\tcase typescript.ScriptTarget.ES2018:\n\t\t\treturn \"es2018\";\n\t\tcase typescript.ScriptTarget.ES2019:\n\t\t\treturn \"es2019\";\n\t\tcase typescript.ScriptTarget.ES2020:\n\t\tcase typescript.ScriptTarget.ESNext:\n\t\tcase typescript.ScriptTarget.JSON:\n\t\t\treturn \"es2020\";\n\t}\n}\n","import {ModuleFormat} from \"rollup\";\nimport {TS} from \"../../type/ts\";\n\n/**\n * Gets a proper ModuleKind for Typescript based on the format given from the Rollup options\n */\nexport function getModuleKindFromRollupFormat(format: ModuleFormat, typescript: typeof TS): TS.ModuleKind {\n\tswitch (format) {\n\t\tcase \"amd\":\n\t\t\treturn typescript.ModuleKind.AMD;\n\t\tcase \"cjs\":\n\t\tcase \"commonjs\":\n\t\t\treturn typescript.ModuleKind.CommonJS;\n\t\tcase \"system\":\n\t\tcase \"systemjs\":\n\t\t\treturn typescript.ModuleKind.System;\n\t\tcase \"es\":\n\t\tcase \"esm\":\n\t\tcase \"module\":\n\t\t\treturn typescript.ModuleKind.ESNext;\n\t\tcase \"umd\":\n\t\t\treturn typescript.ModuleKind.UMD;\n\t\tcase \"iife\":\n\t\t\treturn typescript.ModuleKind.None;\n\t}\n}\n","import {createHash, createHmac} from \"crypto\";\n\nexport interface GenerateRandomHashOptions {\n\tkey: string;\n\tlength: number;\n}\n\n/**\n * Generates a random hash\n */\nexport function generateRandomHash({length = 8, key}: Partial<GenerateRandomHashOptions> = {}): string {\n\treturn key == null ? createHash(\"sha1\").digest(\"hex\").slice(0, length) : createHmac(\"sha1\", key).digest(\"hex\").slice(0, length);\n}\n\nexport function generateRandomIntegerHash(options?: Partial<GenerateRandomHashOptions>, offset = 1000000): number {\n\tconst str = generateRandomHash(options);\n\n\tlet result = 0;\n\tfor (let i = 0; i < str.length; i++) {\n\t\tresult = result + str.charCodeAt(i);\n\t}\n\n\treturn result + offset;\n}\n","import {OutputOptions} from \"rollup\";\nimport {dirname, ensureRelative, join} from \"../path/path-util\";\nimport {generateRandomHash} from \"../hash/generate-random-hash\";\n\n/**\n * Gets the destination directory to use based on the given Rollup output options\n */\nexport function getOutDir(cwd: string, options?: Partial<OutputOptions>): string {\n\tlet outDir: string | undefined;\n\tif (options == null) {\n\t\t// Generate a random output directory. The idea is that this will never match any existing files on disk.\n\t\t// The reason being that Typescript may erroneously think that input files may be overwritten if 'allowJs' is true\n\t\t// and 'outDir' is '.'\n\t\toutDir = join(cwd, generateRandomHash());\n\t} else if (options.dir != null) {\n\t\toutDir = options.dir;\n\t} else if (options.file != null) {\n\t\toutDir = dirname(options.file);\n\t} else {\n\t\toutDir = cwd;\n\t}\n\n\t// Return the relative output directory. Default to \".\" if it should be equal to cwd\n\tconst relativeToCwd = ensureRelative(cwd, outDir);\n\treturn relativeToCwd === \"\" ? \".\" : relativeToCwd;\n}\n","import {GetForcedCompilerOptionsOptions} from \"./get-forced-compiler-options-options\";\nimport {getScriptTargetFromBrowserslist} from \"../get-script-target-from-browserslist/get-script-target-from-browserslist\";\nimport {getModuleKindFromRollupFormat} from \"../get-module-kind-from-rollup-format/get-module-kind-from-rollup-format\";\nimport {getOutDir} from \"../get-out-dir/get-out-dir\";\nimport {TS} from \"../../type/ts\";\n\n/**\n * Gets the ModuleKind to force\n */\nfunction getForcedModuleKindOption({rollupOutputOptions, pluginOptions}: GetForcedCompilerOptionsOptions): {module: TS.ModuleKind} {\n\t// If no OutputOptions is given, or if no format is given in the OutputOptions, use ESNext. Otherwise, convert the\n\t// Rollup option into one that Typescript can understand\n\tif (rollupOutputOptions == null || rollupOutputOptions.format == null) {\n\t\treturn {module: pluginOptions.typescript.ModuleKind.ESNext};\n\t}\n\n\treturn {module: getModuleKindFromRollupFormat(rollupOutputOptions.format, pluginOptions.typescript)};\n}\n\n/**\n * Gets the ScriptTarget to force\n */\nfunction getForcedScriptTargetOption({pluginOptions, browserslist}: GetForcedCompilerOptionsOptions): {target?: TS.ScriptTarget} {\n\t// If Babel should perform the transpilation, always target the latest ECMAScript version and let Babel take care of the rest\n\tif (pluginOptions.transpiler === \"babel\") {\n\t\treturn {target: pluginOptions.typescript.ScriptTarget.ESNext};\n\t}\n\n\t// If a Browserslist is provided, and if Typescript should perform the transpilation, decide the appropriate ECMAScript version based on the Browserslist.\n\telse if (browserslist != null && browserslist !== false) {\n\t\treturn {target: getScriptTargetFromBrowserslist(browserslist, pluginOptions.typescript)};\n\t}\n\n\t// Otherwise, don't force the 'target' option\n\treturn {};\n}\n\n/**\n * Retrieves the CompilerOptions that will be forced\n */\nexport function getForcedCompilerOptions(options: GetForcedCompilerOptionsOptions): Partial<TS.CompilerOptions> {\n\treturn {\n\t\t...getForcedModuleKindOption(options),\n\t\t...getForcedScriptTargetOption(options),\n\t\toutDir: getOutDir(options.pluginOptions.cwd, options.rollupOutputOptions),\n\t\tbaseUrl: \".\",\n\t\t// Rollup, not Typescript, is the decider of where to put files\n\t\toutFile: undefined,\n\t\t// Always generate SourceMaps. Rollup will then decide if it wants to use them or not\n\t\tsourceMap: true,\n\t\t// Never use inline source maps. Let Rollup inline the returned SourceMap if it can and if sourcemaps should be emitted in the OutputOptions,\n\t\tinlineSourceMap: false,\n\t\t// Since we never use inline source maps, inline sources aren't supported\n\t\tinlineSources: false,\n\t\t// Helpers should *always* be imported. We don't want them to be duplicated multiple times within generated chunks\n\t\timportHelpers: true,\n\t\t// Node resolution is required when 'importHelpers' are true\n\t\tmoduleResolution: options.pluginOptions.typescript.ModuleResolutionKind.NodeJs,\n\t\t// Typescript should always be able to emit - otherwise we cannot transform source files\n\t\tnoEmit: false,\n\t\t// Typescript should always be able to emit - otherwise we cannot transform source files\n\t\tnoEmitOnError: false,\n\t\t// Typescript should always be able to emit other things than declarations - otherwise we cannot transform source files\n\t\temitDeclarationOnly: false,\n\t\t// Typescript should always be able to emit helpers - since we force 'importHelpers'\n\t\tnoEmitHelpers: false,\n\t\t// Typescript should always be able to resolve things - otherwise compilation will break\n\t\tnoResolve: false,\n\t\t// Typescript should never watch files. That is the job of Rollup\n\t\twatch: false,\n\t\t// Typescript should never watch files. That is the job of Rollup\n\t\tpreserveWatchOutput: false,\n\t\tskipLibCheck: true\n\t};\n}\n","import {D_TS_EXTENSION, D_TS_MAP_EXTENSION, SOURCE_MAP_EXTENSION} from \"../../constant/constant\";\nimport {getExtension} from \"../path/path-util\";\nimport {TS} from \"../../type/ts\";\n\n/**\n * Returns true if the given OutputFile represents code\n */\nexport function isCodeOutputFile({name}: TS.OutputFile): boolean {\n\tconst extension = getExtension(name);\n\treturn [SOURCE_MAP_EXTENSION, D_TS_EXTENSION, D_TS_MAP_EXTENSION].every(otherExtension => extension !== otherExtension);\n}\n","import {D_TS_MAP_EXTENSION, SOURCE_MAP_EXTENSION} from \"../../constant/constant\";\nimport {getExtension} from \"../path/path-util\";\nimport {TS} from \"../../type/ts\";\n\n/**\n * Returns true if the given OutputFile represents a SourceMap\n */\nexport function isMapOutputFile({name}: TS.OutputFile): boolean {\n\tconst extension = getExtension(name);\n\treturn [SOURCE_MAP_EXTENSION, D_TS_MAP_EXTENSION].some(otherExtension => extension === otherExtension);\n}\n","import {SourceDescription} from \"rollup\";\nimport {SOURCE_MAP_COMMENT} from \"../../constant/constant\";\nimport {isCodeOutputFile} from \"../is-code-output-file/is-code-output-file\";\nimport {isMapOutputFile} from \"../is-map-output-file/is-map-output-file\";\nimport {TS} from \"../../type/ts\";\n\n/**\n * Gets a SourceDescription from the given EmitOutput\n */\nexport function getSourceDescriptionFromEmitOutput(output: TS.EmitOutput): SourceDescription | undefined {\n\tconst code = output.outputFiles.find(isCodeOutputFile);\n\tif (code == null) return undefined;\n\n\tconst map = output.outputFiles.find(isMapOutputFile);\n\n\t// Remove the SourceMap comment from the code if it is given. Rollup is the decider of whether or not to emit SourceMaps and if they should be inlined\n\tconst inlinedSourcemapIndex = code.text.indexOf(`\\n${SOURCE_MAP_COMMENT}`);\n\n\tif (inlinedSourcemapIndex >= 0) {\n\t\tcode.text = code.text.slice(0, inlinedSourcemapIndex);\n\t}\n\n\treturn {\n\t\tcode: code.text,\n\t\t...(map == null ? {} : {map: map.text})\n\t};\n}\n","import {RollupError, RollupWarning, PluginContext} from \"rollup\";\nimport {ExtendedDiagnostic} from \"../../../diagnostic/extended-diagnostic\";\nimport {TS} from \"../../../type/ts\";\nimport {CompilerHost} from \"../../compiler-host/compiler-host\";\nimport {TypescriptPluginOptions} from \"../../../plugin/i-typescript-plugin-options\";\n\nexport interface EmitDiagnosticsOptions {\n\thost: CompilerHost;\n\tcontext: PluginContext;\n\tpluginOptions: TypescriptPluginOptions;\n}\n\n/**\n * Gets diagnostics for the given fileName\n */\nexport function emitDiagnostics({host, context, pluginOptions}: EmitDiagnosticsOptions): void {\n\tconst typescript = host.getTypescript();\n\tlet diagnostics: readonly TS.Diagnostic[] | undefined = host.getDiagnostics();\n\n\t// If there is a hook for diagnostics, call it assign the result of calling it to the local variable 'diagnostics'\n\tif (pluginOptions.hook.diagnostics != null) {\n\t\tdiagnostics = pluginOptions.hook.diagnostics(diagnostics);\n\t}\n\n\t// Don't proceed if the hook returned null or undefined\n\tif (diagnostics == null) return;\n\n\tdiagnostics.forEach((diagnostic: ExtendedDiagnostic) => {\n\t\tconst message = typescript.flattenDiagnosticMessageText(diagnostic.messageText, \"\\n\");\n\t\tconst position = diagnostic.start == null || diagnostic.file == null ? undefined : diagnostic.file.getLineAndCharacterOfPosition(diagnostic.start);\n\n\t\t// Color-format the diagnostics\n\t\tconst colorFormatted = typescript.formatDiagnosticsWithColorAndContext([diagnostic], host);\n\n\t\t// Provide a normalized error code\n\t\tconst code = `${diagnostic.scope == null ? \"TS\" : diagnostic.scope}${diagnostic.code}`;\n\n\t\t// Provide an empty Stack. There's nothing useful in seeing the internals of this Plugin in the reported error\n\t\tconst stack = \"\";\n\n\t\t// Isolate the frame\n\t\tconst newLine = host.getNewLine();\n\t\tlet frame = colorFormatted.slice(colorFormatted.indexOf(message) + message.length);\n\n\t\t// Remove the trailing newline from the frame if it has one\n\t\tif (frame.startsWith(newLine)) {\n\t\t\tframe = frame.slice(frame.indexOf(newLine) + newLine.length);\n\t\t}\n\n\t\tswitch (diagnostic.category) {\n\t\t\tcase typescript.DiagnosticCategory.Error:\n\t\t\t\tcontext.error(\n\t\t\t\t\t{\n\t\t\t\t\t\tframe,\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tname: code,\n\t\t\t\t\t\tstack,\n\t\t\t\t\t\t...(diagnostic.length == null ? {} : {length: diagnostic.length}),\n\t\t\t\t\t\t...(diagnostic.file == null && position == null\n\t\t\t\t\t\t\t? {}\n\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\tloc: {\n\t\t\t\t\t\t\t\t\t\t...(diagnostic.file == null ? {} : {file: diagnostic.file.fileName}),\n\t\t\t\t\t\t\t\t\t\t...(position == null ? {} : {line: position.line + 1}),\n\t\t\t\t\t\t\t\t\t\t...(position == null ? {} : {column: position.character + 1})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t  }),\n\t\t\t\t\t\t...(diagnostic.file == null ? {} : {pos: diagnostic.file.pos}),\n\t\t\t\t\t\tmessage\n\t\t\t\t\t} as RollupError,\n\t\t\t\t\tposition == null ? undefined : {line: position.line + 1, column: position.character + 1}\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase typescript.DiagnosticCategory.Warning:\n\t\t\tcase typescript.DiagnosticCategory.Message:\n\t\t\tcase typescript.DiagnosticCategory.Suggestion:\n\t\t\t\tcontext.warn(\n\t\t\t\t\t{\n\t\t\t\t\t\tframe,\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tname: code,\n\t\t\t\t\t\t...(diagnostic.length == null ? {} : {length: diagnostic.length}),\n\t\t\t\t\t\tloc: {\n\t\t\t\t\t\t\t...(diagnostic.file == null ? {} : {file: diagnostic.file.fileName}),\n\t\t\t\t\t\t\t...(position == null ? {} : {line: position.line + 1}),\n\t\t\t\t\t\t\t...(position == null ? {} : {column: position.character + 1})\n\t\t\t\t\t\t},\n\t\t\t\t\t\t...(diagnostic.file == null ? {} : {pos: diagnostic.file.pos}),\n\t\t\t\t\t\tmessage\n\t\t\t\t\t} as RollupWarning,\n\t\t\t\t\tposition == null ? undefined : {line: position.line + 1, column: position.character + 1}\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t});\n}\n","import {D_TS_EXTENSION, JS_EXTENSION, JSON_EXTENSION, JSX_EXTENSION, MJS_EXTENSION, MJSX_EXTENSION, TS_EXTENSION, TSX_EXTENSION} from \"../../constant/constant\";\n\nexport type SupportedExtensions = Set<string>;\n\n/**\n * Gets the extensions that are supported by Typescript, depending on whether or not to allow JS and JSON\n */\nexport function getSupportedExtensions(allowJs: boolean, allowJson: boolean): SupportedExtensions {\n\treturn new Set([\n\t\tTS_EXTENSION,\n\t\tTSX_EXTENSION,\n\t\tD_TS_EXTENSION,\n\t\t...(allowJs ? [JS_EXTENSION, JSX_EXTENSION, MJS_EXTENSION, MJSX_EXTENSION] : []),\n\t\t...(allowJson ? [JSON_EXTENSION] : [])\n\t]);\n}\n","import {OutputChunk, OutputAsset} from \"rollup\";\n\n/**\n * Returns true if the given asset is an OutputChunk\n */\nexport function isOutputChunk(thing: OutputChunk | OutputAsset): thing is OutputChunk {\n\treturn !(\"isAsset\" in thing);\n}\n","import {OutputBundle} from \"rollup\";\nimport {isOutputChunk} from \"../is-output-chunk/is-output-chunk\";\nimport {normalize} from \"../path/path-util\";\n\n/**\n * Takes all filenames that has been included in the given bundle\n */\nexport function takeBundledFilesNames(bundle: OutputBundle): Set<string> {\n\tconst bundledFilenames: Set<string> = new Set();\n\tObject.values(bundle).forEach(value => {\n\t\tif (isOutputChunk(value)) {\n\t\t\tObject.keys(value.modules).forEach(fileName => bundledFilenames.add(normalize(fileName)));\n\t\t} else {\n\t\t\tbundledFilenames.add(normalize(value.fileName));\n\t\t}\n\t});\n\treturn bundledFilenames;\n}\n","import {statSync} from \"fs\";\nimport {TS} from \"../../type/ts\";\nimport {nativeDirname} from \"../path/path-util\";\n\nexport interface FileSystem {\n\tnewLine: string;\n\tuseCaseSensitiveFileNames: boolean;\n\tfileExists(path: string): boolean;\n\treadFile(path: string, encoding?: string): string | undefined;\n\twriteFile(path: string, data: string, writeByteOrderMark?: boolean): void;\n\treadDirectory(rootDir: string, extensions: readonly string[], excludes: readonly string[] | undefined, includes: readonly string[], depth?: number): readonly string[];\n\tensureDirectory(path: string): string;\n\trealpath(path: string): string;\n\tgetDirectories(path: string): string[];\n\tdirectoryExists(path: string): boolean;\n}\n\nexport function getRealFileSystem(typescript: typeof TS): FileSystem {\n\treturn {\n\t\t...typescript.sys,\n\t\trealpath(path: string): string {\n\t\t\treturn typescript.sys.realpath == null ? path : typescript.sys.realpath(path);\n\t\t},\n\t\tensureDirectory(path: string): string {\n\t\t\treturn statSync(path).isDirectory() ? path : nativeDirname(path);\n\t\t}\n\t};\n}\n","import * as TSModule from \"typescript\";\nimport {TypescriptPluginOptions} from \"../../plugin/i-typescript-plugin-options\";\nimport {getRealFileSystem} from \"../file-system/file-system\";\nimport {normalize} from \"../path/path-util\";\n\n/**\n * Gets normalized PluginOptions based on the given ones\n */\nexport function getPluginOptions(options: Partial<TypescriptPluginOptions>): TypescriptPluginOptions {\n\t// Destructure the options and provide defaults\n\tconst {\n\t\tbrowserslist,\n\t\ttranspiler = \"typescript\",\n\t\ttypescript = TSModule,\n\t\tcwd = normalize(process.cwd()),\n\t\ttsconfig,\n\t\ttransformers,\n\t\tinclude = [],\n\t\texclude = [],\n\t\ttranspileOnly = false,\n\t\tdebug = false,\n\t\tfileSystem = getRealFileSystem(typescript),\n\t\thook = {}\n\t} = options;\n\n\t// These options will be used no matter what\n\tconst baseOptions = {\n\t\ttypescript,\n\t\tbrowserslist,\n\t\tcwd: normalize(cwd),\n\t\texclude,\n\t\tinclude,\n\t\ttransformers,\n\t\ttsconfig,\n\t\ttranspileOnly,\n\t\tdebug,\n\t\tfileSystem,\n\t\thook\n\t};\n\n\t// If we're to use Typescript, return the Typescript-options\n\tif (transpiler === \"typescript\") {\n\t\treturn {\n\t\t\t...baseOptions,\n\t\t\ttranspiler: \"typescript\"\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\t...baseOptions,\n\t\t\t...(\"babelConfig\" in options ? {babelConfig: options.babelConfig} : {}),\n\t\t\ttranspiler: \"babel\"\n\t\t};\n\t}\n}\n","export function isDefined<T>(item: T | undefined): item is T {\n\treturn item != null;\n}\n","import {isBabelPluginTransformRuntime, isBabelPresetEnv, isYearlyBabelPreset, somePathsAreRelated} from \"../path/path-util\";\nimport {\n\tBABEL_MINIFICATION_BLACKLIST_PLUGIN_NAMES,\n\tBABEL_MINIFICATION_BLACKLIST_PRESET_NAMES,\n\tBABEL_MINIFY_PLUGIN_NAMES,\n\tBABEL_MINIFY_PRESET_NAMES,\n\tFORCED_BABEL_PLUGIN_TRANSFORM_RUNTIME_OPTIONS,\n\tFORCED_BABEL_PRESET_ENV_OPTIONS,\n\tFORCED_BABEL_YEARLY_PRESET_OPTIONS\n} from \"../../constant/constant\";\nimport {ConfigItem, createConfigItem, loadOptions, loadPartialConfig, TransformOptions} from \"@babel/core\";\nimport {GetBabelConfigOptions} from \"./get-babel-config-options\";\nimport {BabelConfigFactory, FullConfig} from \"./get-babel-config-result\";\nimport {TypescriptPluginBabelOptions} from \"../../plugin/i-typescript-plugin-options\";\nimport {isDefined} from \"../is-defined/is-defined\";\n\n/**\n * Returns true if the given babelConfig is IBabelInputOptions\n */\nfunction isBabelInputOptions(babelConfig?: TypescriptPluginBabelOptions[\"babelConfig\"]): babelConfig is Partial<TransformOptions> {\n\treturn babelConfig != null && typeof babelConfig !== \"string\";\n}\n\n/**\n * Combines the given two sets of presets\n */\nfunction combineConfigItems(userItems: ConfigItem[], defaultItems: ConfigItem[] = [], forcedItems: ConfigItem[] = [], inChunkPhase: boolean): ConfigItem[] {\n\tconst namesInUserItems = new Set(userItems.map(item => item.file?.resolved).filter(isDefined));\n\tconst namesInForcedItems = new Set(forcedItems.map(item => item.file?.resolved).filter(isDefined));\n\tconst userItemsHasYearlyPreset = [...namesInUserItems].some(isYearlyBabelPreset);\n\n\treturn (\n\t\t[\n\t\t\t// Only use those default items that doesn't appear within the forced items or the user-provided items.\n\t\t\t// If the options contains a yearly preset such as \"preset-es2015\", filter out preset-env from the default items if it is given\n\t\t\t...defaultItems.filter(\n\t\t\t\titem =>\n\t\t\t\t\titem.file == null ||\n\t\t\t\t\t(!somePathsAreRelated(namesInUserItems, item.file.resolved) &&\n\t\t\t\t\t\t!somePathsAreRelated(namesInForcedItems, item.file.resolved) &&\n\t\t\t\t\t\t(!userItemsHasYearlyPreset || !isBabelPresetEnv(item.file.resolved)))\n\t\t\t),\n\n\t\t\t// Only use those user items that doesn't appear within the forced items\n\t\t\t...userItems.filter(item => item.file == null || !namesInForcedItems.has(item.file.resolved)),\n\n\t\t\t// Apply the forced items at all times\n\t\t\t...forcedItems\n\t\t]\n\t\t\t// Filter out those options that do not apply depending on whether or not to apply minification\n\t\t\t.filter(configItem => (inChunkPhase ? configItemIsAllowedDuringChunkPhase(configItem) : configItemIsAllowedDuringFilePhase(configItem)))\n\t);\n}\n\n/**\n * Returns true if the given configItem is related to minification\n */\nfunction configItemIsRelevantForChunkPhase(configItem: ConfigItem): boolean {\n\treturn (\n\t\tBABEL_MINIFY_PRESET_NAMES.some(preset => configItem.file?.resolved.includes(preset)) || BABEL_MINIFY_PLUGIN_NAMES.some(plugin => configItem.file?.resolved.includes(plugin))\n\t);\n}\n\n/**\n * Returns true if the given configItem is allowed per chunk transformation\n */\nfunction configItemIsAllowedDuringChunkPhase(configItem: ConfigItem): boolean {\n\treturn (\n\t\tBABEL_MINIFICATION_BLACKLIST_PRESET_NAMES.every(preset => configItem.file == null || !configItem.file.resolved.includes(preset)) &&\n\t\tBABEL_MINIFICATION_BLACKLIST_PLUGIN_NAMES.every(plugin => configItem.file == null || !configItem.file.resolved.includes(plugin))\n\t);\n}\n\n/**\n * Returns true if the given configItem is allowed per file transformations\n */\nfunction configItemIsAllowedDuringFilePhase(configItem: ConfigItem): boolean {\n\treturn (\n\t\tBABEL_MINIFY_PRESET_NAMES.every(preset => configItem.file == null || !configItem.file.resolved.includes(preset)) &&\n\t\tBABEL_MINIFY_PLUGIN_NAMES.every(plugin => configItem.file == null || !configItem.file.resolved.includes(plugin))\n\t);\n}\n\n/**\n * Gets a Babel Config based on the given options\n */\nexport function getBabelConfig({babelConfig, cwd, forcedOptions = {}, defaultOptions = {}, browserslist, phase, hook}: GetBabelConfigOptions): BabelConfigFactory {\n\treturn (filename: string) => {\n\t\t// Load a partial Babel config based on the input options\n\t\tconst partialConfig = loadPartialConfig(\n\t\t\t// If babel options are provided directly\n\t\t\tisBabelInputOptions(babelConfig)\n\t\t\t\t? // If the given babelConfig is an object of input options, use that as the basis for the full config\n\t\t\t\t  {...babelConfig, cwd, root: cwd, configFile: false, babelrc: false}\n\t\t\t\t: // Load the path to a babel config provided to the plugin if any, otherwise try to resolve it\n\t\t\t\t  {\n\t\t\t\t\t\tcwd,\n\t\t\t\t\t\troot: cwd,\n\t\t\t\t\t\tfilename\n\t\t\t\t  }\n\t\t);\n\n\t\tif (partialConfig == null) {\n\t\t\treturn {\n\t\t\t\tconfig: undefined\n\t\t\t};\n\t\t}\n\n\t\tconst {options} = partialConfig;\n\t\tconst {presets: forcedPresets, plugins: forcedPlugins, ...otherForcedOptions} = forcedOptions;\n\t\tconst {presets: defaultPresets, plugins: defaultPlugins, ...otherDefaultOptions} = defaultOptions;\n\t\tconst configFileOption: TransformOptions = {configFile: false, babelrc: false};\n\n\t\t// If users have provided presets of their own, ensure that they are using respecting the forced options\n\t\tif (options.presets != null) {\n\t\t\toptions.presets = options.presets.map((preset: ConfigItem) => {\n\t\t\t\tif (preset.file == null) return preset;\n\n\t\t\t\t// Apply the forced @babel/preset-env options here\n\t\t\t\tif (isBabelPresetEnv(preset.file.resolved)) {\n\t\t\t\t\treturn createConfigItem(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tpreset.file.request,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...(preset.options == null ? {} : preset.options),\n\t\t\t\t\t\t\t\t...FORCED_BABEL_PRESET_ENV_OPTIONS,\n\t\t\t\t\t\t\t\t// If targets have already been provided by the user options, accept them.\n\t\t\t\t\t\t\t\t// Otherwise, apply the browserslist as the preset-env target\n\t\t\t\t\t\t\t\t...(preset.options != null && (preset.options as {targets?: unknown}).targets != null\n\t\t\t\t\t\t\t\t\t? {}\n\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\ttargets: {\n\t\t\t\t\t\t\t\t\t\t\t\tbrowsers: browserslist\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t{type: \"preset\", dirname: cwd}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Apply the forced @babel/preset-es[2015|2016|2017...] options here\n\t\t\t\telse if (isYearlyBabelPreset(preset.file.resolved)) {\n\t\t\t\t\treturn createConfigItem(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tpreset.file.request,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...(preset.options == null ? {} : preset.options),\n\t\t\t\t\t\t\t\t...FORCED_BABEL_YEARLY_PRESET_OPTIONS\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t{type: \"preset\", dirname: cwd}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn preset;\n\t\t\t});\n\t\t}\n\n\t\t// If users have provided plugins of their own, ensure that they are using respecting the forced options\n\t\tif (options.plugins != null) {\n\t\t\toptions.plugins = options.plugins.map((plugin: ConfigItem) => {\n\t\t\t\tif (plugin.file == null) return plugin;\n\n\t\t\t\t// Apply the forced @babel/preset-env options here\n\t\t\t\tif (isBabelPluginTransformRuntime(plugin.file.resolved)) {\n\t\t\t\t\treturn createConfigItem(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tplugin.file.request,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...(plugin.options == null ? {} : plugin.options),\n\t\t\t\t\t\t\t\t...FORCED_BABEL_PLUGIN_TRANSFORM_RUNTIME_OPTIONS\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t{type: \"plugin\", dirname: cwd}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn plugin;\n\t\t\t});\n\t\t}\n\n\t\t// Combine the partial config with the default and forced options\n\t\tconst combined: TransformOptions = {\n\t\t\t...otherDefaultOptions,\n\t\t\t...options,\n\t\t\t...otherForcedOptions,\n\t\t\tpresets: combineConfigItems(\n\t\t\t\t(options.presets ?? []) as ConfigItem[],\n\t\t\t\tdefaultPresets == null ? undefined : (loadPartialConfig({presets: defaultPresets, ...configFileOption})?.options.presets as ConfigItem[] | null) ?? undefined,\n\t\t\t\tforcedPresets == null ? undefined : (loadPartialConfig({presets: forcedPresets, ...configFileOption})?.options.presets as ConfigItem[] | null | undefined) ?? undefined,\n\t\t\t\tphase === \"chunk\"\n\t\t\t),\n\t\t\tplugins: combineConfigItems(\n\t\t\t\t(options.plugins ?? []) as ConfigItem[],\n\t\t\t\tdefaultPlugins == null ? undefined : (loadPartialConfig({plugins: defaultPlugins, ...configFileOption})?.options.plugins as ConfigItem[] | null) ?? undefined,\n\t\t\t\tforcedPlugins == null ? undefined : (loadPartialConfig({plugins: forcedPlugins, ...configFileOption})?.options.plugins as ConfigItem[] | null | undefined) ?? undefined,\n\t\t\t\tphase === \"chunk\"\n\t\t\t)\n\t\t};\n\n\t\t// sourceMap is an alias for 'sourceMaps'. If the user provided it, make sure it is undefined. Otherwise, Babel will fail during validation\n\t\tif (\"sourceMap\" in (combined as {sourceMap?: unknown})) {\n\t\t\tdelete (combined as {sourceMap?: unknown}).sourceMap;\n\t\t}\n\n\t\tconst combinedOptionsAfterHook = hook != null ? hook(combined, partialConfig.config ?? partialConfig.babelrc ?? undefined, phase) : combined;\n\n\t\tconst loadedOptions = (loadOptions({...combinedOptionsAfterHook, filename, ...configFileOption}) as FullConfig | null) ?? undefined;\n\n\t\t// Only return a config in the chunk phase if it includes at least one plugin or preset that is relevant to it\n\t\tif (phase === \"chunk\") {\n\t\t\tconst hasRelevantConfigItems =\n\t\t\t\tloadedOptions != null &&\n\t\t\t\t[...(combined.plugins ?? []).filter(configItemIsRelevantForChunkPhase), ...(combined.presets ?? []).filter(configItemIsRelevantForChunkPhase)].length > 0;\n\t\t\treturn {\n\t\t\t\tconfig: hasRelevantConfigItems ? loadedOptions : undefined\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tconfig: loadedOptions\n\t\t\t};\n\t\t}\n\t};\n}\n","import {GetForcedBabelOptionsOptions} from \"./get-forced-babel-options-options\";\nimport {TransformOptions} from \"@babel/core\";\n\n/**\n * Retrieves the Babel config options that will be forced\n */\nexport function getForcedBabelOptions({cwd}: GetForcedBabelOptionsOptions): TransformOptions {\n\treturn {\n\t\t// Always produce sourcemaps. Rollup will be the decider of what to do with them.\n\t\tsourceMaps: true,\n\t\t// Always use the cwd provided to the plugin\n\t\tcwd,\n\t\t// Never let Babel be the decider of which files to ignore. Rather let Rollup decide that\n\t\tignore: undefined,\n\t\t// Never let Babel be the decider of which files to include. Rather let Rollup decide that\n\t\tonly: undefined,\n\t\t// Always parse things like modules. Rollup will then decide what to do based on the output format\n\t\tsourceType: \"module\",\n\t\tplugins: [\n\t\t\t// Needed to make babel understand dynamic imports\n\t\t\trequire.resolve(\"@babel/plugin-syntax-dynamic-import\")\n\t\t]\n\t};\n}\n","/**\n * Ensures that the given item is in fact an array\n */\nexport function ensureArray<T>(item: T | T[]): T[] {\n\treturn Array.isArray(item) ? item : [item];\n}\n","import {GetBrowserslistOptions} from \"./get-browserslist-options\";\nimport {normalizeBrowserslist} from \"@wessberg/browserslist-generator\";\nimport {ensureAbsolute, nativeNormalize} from \"../path/path-util\";\nimport {findConfig, readConfig} from \"browserslist\";\nimport {BrowserslistPathConfig, BrowserslistQueryConfig} from \"../../plugin/i-typescript-plugin-options\";\nimport {ensureArray} from \"../ensure-array/ensure-array\";\n\n/**\n * Returns true if the given browserslist is raw input for a Browserslist\n */\nfunction isBrowserslistInput(browserslist: GetBrowserslistOptions[\"browserslist\"]): browserslist is string[] | string {\n\treturn typeof browserslist === \"string\" || Array.isArray(browserslist);\n}\n\n/**\n * Returns true if the given browserslist is an IBrowserslistQueryConfig\n */\nfunction isBrowserslistQueryConfig(browserslist: GetBrowserslistOptions[\"browserslist\"]): browserslist is BrowserslistQueryConfig {\n\treturn browserslist != null && !isBrowserslistInput(browserslist) && browserslist !== false && \"query\" in browserslist && browserslist.query != null;\n}\n\n/**\n * Returns true if the given browserslist is an IBrowserslistPathConfig\n */\nfunction isBrowserslistPathConfig(browserslist: GetBrowserslistOptions[\"browserslist\"]): browserslist is BrowserslistPathConfig {\n\treturn browserslist != null && !isBrowserslistInput(browserslist) && browserslist !== false && \"path\" in browserslist && browserslist.path != null;\n}\n\n/**\n * Gets a Browserslist based on the given options\n */\nexport function getBrowserslist({browserslist, cwd, fileSystem}: GetBrowserslistOptions): string[] | false | undefined {\n\t// If a Browserslist is provided directly from the options, use that\n\tif (browserslist != null) {\n\t\t// If the Browserslist is equal to false, it should never be used. Return undefined\n\t\tif (browserslist === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the Browserslist is some raw input queries, use them directly\n\t\telse if (isBrowserslistInput(browserslist)) {\n\t\t\treturn normalizeBrowserslist(ensureArray(browserslist));\n\t\t}\n\n\t\t// If the Browserslist is a config with raw query options, use them directly\n\t\telse if (isBrowserslistQueryConfig(browserslist)) {\n\t\t\treturn normalizeBrowserslist(ensureArray(browserslist.query));\n\t\t}\n\n\t\t// If the Browserslist is a config with a path, attempt to resolve the Browserslist from that property\n\t\telse if (isBrowserslistPathConfig(browserslist)) {\n\t\t\tconst browserslistPath = ensureAbsolute(cwd, browserslist.path);\n\t\t\tconst errorMessage = `The given path for a Browserslist: '${browserslistPath}' could not be resolved from '${cwd}'`;\n\t\t\tif (!fileSystem.fileExists(nativeNormalize(browserslistPath))) {\n\t\t\t\tthrow new ReferenceError(errorMessage);\n\t\t\t} else {\n\t\t\t\t// Read the config\n\t\t\t\tconst match = readConfig(browserslistPath);\n\t\t\t\tif (match == null) {\n\t\t\t\t\tthrow new ReferenceError(errorMessage);\n\t\t\t\t} else {\n\t\t\t\t\treturn match.defaults;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The config object could not be validated. Return undefined\n\t\telse {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t// Otherwise, try to locate a Browserslist\n\telse {\n\t\tconst config = findConfig(cwd);\n\t\treturn config == null ? undefined : config.defaults;\n\t}\n}\n","import {GetResolvedIdWithCachingOptions} from \"./get-resolved-id-with-caching-options\";\nimport {ExtendedResolvedModule} from \"./extended-resolved-module\";\nimport {ensureAbsolute, isTslib, nativeNormalize, normalize, setExtension} from \"../../../util/path/path-util\";\n\nimport {D_TS_EXTENSION, JS_EXTENSION} from \"../../../constant/constant\";\nimport {FileSystem} from \"../../../util/file-system/file-system\";\nimport {TS} from \"../../../type/ts\";\n\nexport interface ResolveCacheOptions {\n\tfileSystem: FileSystem;\n}\n\n/**\n * A Cache over resolved modules\n */\nexport class ResolveCache {\n\t/**\n\t * A memory-persistent cache of resolved modules for files over time\n\t */\n\tprivate readonly RESOLVE_CACHE: Map<string, Map<string, ExtendedResolvedModule | null>> = new Map();\n\n\tconstructor(private readonly options: ResolveCacheOptions) {}\n\n\t/**\n\t * Gets the resolved path for an id from a parent\n\t */\n\tgetFromCache(id: string, parent: string): ExtendedResolvedModule | null | undefined {\n\t\tconst parentMap = this.RESOLVE_CACHE.get(parent);\n\t\tif (parentMap == null) return undefined;\n\t\treturn parentMap.get(id);\n\t}\n\n\t/**\n\t * Deletes the entry matching the given parent\n\t */\n\tdelete(parent: string): boolean {\n\t\treturn this.RESOLVE_CACHE.delete(parent);\n\t}\n\n\tclear(): void {\n\t\tthis.RESOLVE_CACHE.clear();\n\t}\n\n\t/**\n\t * Sets the given resolved module in the resolve cache\n\t */\n\tsetInCache(result: ExtendedResolvedModule | null, id: string, parent: string): ExtendedResolvedModule | null {\n\t\tlet parentMap = this.RESOLVE_CACHE.get(parent);\n\t\tif (parentMap == null) {\n\t\t\tparentMap = new Map();\n\t\t\tthis.RESOLVE_CACHE.set(parent, parentMap);\n\t\t}\n\t\tparentMap.set(id, result);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Resolves a module name, including internal helpers such as tslib, even if they aren't included in the language service\n\t */\n\tresolveModuleName(\n\t\ttypescript: typeof TS,\n\t\tmoduleName: string,\n\t\tcontainingFile: string,\n\t\tcompilerOptions: TS.CompilerOptions,\n\t\thost: TS.ModuleResolutionHost,\n\t\tcache?: TS.ModuleResolutionCache,\n\t\tredirectedReference?: TS.ResolvedProjectReference\n\t): TS.ResolvedModuleWithFailedLookupLocations {\n\t\t// Default to using Typescript's resolver directly\n\t\treturn typescript.resolveModuleName(moduleName, containingFile, compilerOptions, host, cache, redirectedReference);\n\t}\n\n\t/**\n\t * Gets a cached module result for the given file from the given parent and returns it if it exists already.\n\t * If not, it will compute it, update the cache, and then return it\n\t */\n\tget(options: GetResolvedIdWithCachingOptions): ExtendedResolvedModule | null {\n\t\tconst {id, parent, moduleResolutionHost} = options;\n\t\tlet cacheResult = this.getFromCache(id, parent);\n\t\tconst typescript = moduleResolutionHost.getTypescript();\n\t\tconst compilerOptions = moduleResolutionHost.getCompilationSettings();\n\t\tconst cwd = moduleResolutionHost.getCwd();\n\t\tconst nonAmbientSupportedExtensions = moduleResolutionHost.getSupportedNonAmbientExtensions();\n\n\t\tif (cacheResult != null) {\n\t\t\treturn cacheResult;\n\t\t}\n\n\t\t// Resolve the file via Typescript, either through classic or node module resolution\n\t\tconst {resolvedModule} = this.resolveModuleName(typescript, id, parent, compilerOptions, moduleResolutionHost) as {\n\t\t\tresolvedModule: ExtendedResolvedModule | undefined;\n\t\t};\n\n\t\t// If it could not be resolved, the cache result will be equal to null\n\t\tif (resolvedModule == null) {\n\t\t\tcacheResult = null;\n\t\t}\n\n\t\t// Otherwise, proceed\n\t\telse {\n\t\t\t// Make sure that the path is absolute from the cwd\n\t\t\tresolvedModule.resolvedFileName = normalize(ensureAbsolute(cwd, resolvedModule.resolvedFileName!));\n\n\t\t\tif (resolvedModule.resolvedFileName.endsWith(D_TS_EXTENSION)) {\n\t\t\t\tresolvedModule.resolvedAmbientFileName = resolvedModule.resolvedFileName;\n\t\t\t\tresolvedModule.resolvedFileName = undefined;\n\t\t\t\tresolvedModule.extension = D_TS_EXTENSION as TS.Extension;\n\n\t\t\t\tif (isTslib(id)) {\n\t\t\t\t\tconst candidate = normalize(setExtension(resolvedModule.resolvedAmbientFileName, `.es6${JS_EXTENSION}`));\n\n\t\t\t\t\tif (this.options.fileSystem.fileExists(nativeNormalize(candidate))) {\n\t\t\t\t\t\tresolvedModule.resolvedFileName = candidate;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Don't go and attempt to resolve sources for external libraries\n\t\t\t\telse if (resolvedModule.isExternalLibraryImport == null || !resolvedModule.isExternalLibraryImport) {\n\t\t\t\t\t// Try to determine the resolved file name.\n\t\t\t\t\tfor (const extension of nonAmbientSupportedExtensions) {\n\t\t\t\t\t\tconst candidate = normalize(setExtension(resolvedModule.resolvedAmbientFileName, extension));\n\n\t\t\t\t\t\tif (this.options.fileSystem.fileExists(nativeNormalize(candidate))) {\n\t\t\t\t\t\t\tresolvedModule.resolvedFileName = candidate;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedModule.resolvedAmbientFileName = undefined;\n\t\t\t\tconst candidate = normalize(setExtension(resolvedModule.resolvedFileName, D_TS_EXTENSION));\n\n\t\t\t\tif (this.options.fileSystem.fileExists(nativeNormalize(candidate))) {\n\t\t\t\t\tresolvedModule.resolvedAmbientFileName = candidate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcacheResult = resolvedModule;\n\t\t}\n\n\t\t// Store the new result in the cache\n\t\treturn this.setInCache(cacheResult, id, parent);\n\t}\n}\n","export const REGENERATOR_SOURCE = `\\\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar Op = Object.prototype;\nvar hasOwn = Op.hasOwnProperty;\nvar undefined; // More compressible than void 0.\nvar $Symbol = typeof Symbol === \"function\" ? Symbol : {};\nvar iteratorSymbol = $Symbol.iterator || \"@@iterator\";\nvar asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\nvar toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\nfunction wrap(innerFn, outerFn, self, tryLocsList) {\n  // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n  var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n  var generator = Object.create(protoGenerator.prototype);\n  var context = new Context(tryLocsList || []);\n\n  // The ._invoke method unifies the implementations of the .next,\n  // .throw, and .return methods.\n  generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n  return generator;\n}\n\n// Try/catch helper to minimize deoptimizations. Returns a completion\n// record like context.tryEntries[i].completion. This interface could\n// have been (and was previously) designed to take a closure to be\n// invoked without arguments, but in all the cases we care about we\n// already have an existing method we want to call, so there's no need\n// to create a new function object. We can even get away with assuming\n// the method takes exactly one argument, since that happens to be true\n// in every case, so we don't have to touch the arguments object. The\n// only additional allocation required is the completion record, which\n// has a stable shape and so hopefully should be cheap to allocate.\nfunction tryCatch(fn, obj, arg) {\n  try {\n    return { type: \"normal\", arg: fn.call(obj, arg) };\n  } catch (err) {\n    return { type: \"throw\", arg: err };\n  }\n}\n\nvar GenStateSuspendedStart = \"suspendedStart\";\nvar GenStateSuspendedYield = \"suspendedYield\";\nvar GenStateExecuting = \"executing\";\nvar GenStateCompleted = \"completed\";\n\n// Returning this object from the innerFn has the same effect as\n// breaking out of the dispatch switch statement.\nvar ContinueSentinel = {};\n\n// Dummy constructor functions that we use as the .constructor and\n// .constructor.prototype properties for functions that return Generator\n// objects. For full spec compliance, you may wish to configure your\n// minifier not to mangle the names of these two functions.\nfunction Generator() {}\nfunction GeneratorFunction() {}\nfunction GeneratorFunctionPrototype() {}\n\n// This is a polyfill for %IteratorPrototype% for environments that\n// don't natively support it.\nvar IteratorPrototype = {};\nIteratorPrototype[iteratorSymbol] = function () {\n  return this;\n};\n\nvar getProto = Object.getPrototypeOf;\nvar NativeIteratorPrototype = getProto && getProto(getProto(values([])));\nif (NativeIteratorPrototype &&\n  NativeIteratorPrototype !== Op &&\n  hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n  // This environment has a native %IteratorPrototype%; use it instead\n  // of the polyfill.\n  IteratorPrototype = NativeIteratorPrototype;\n}\n\nvar Gp = GeneratorFunctionPrototype.prototype =\n  Generator.prototype = Object.create(IteratorPrototype);\nGeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\nGeneratorFunctionPrototype.constructor = GeneratorFunction;\nGeneratorFunctionPrototype[toStringTagSymbol] =\n  GeneratorFunction.displayName = \"GeneratorFunction\";\n\n// Helper for defining the .next, .throw, and .return methods of the\n// Iterator interface in terms of a single ._invoke method.\nfunction defineIteratorMethods(prototype) {\n  [\"next\", \"throw\", \"return\"].forEach(function(method) {\n    prototype[method] = function(arg) {\n      return this._invoke(method, arg);\n    };\n  });\n}\n\nfunction isGeneratorFunction (genFun) {\n  var ctor = typeof genFun === \"function\" && genFun.constructor;\n  return ctor\n    ? ctor === GeneratorFunction ||\n    // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n    : false;\n};\n\nfunction mark (genFun) {\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n  } else {\n    genFun.__proto__ = GeneratorFunctionPrototype;\n    if (!(toStringTagSymbol in genFun)) {\n      genFun[toStringTagSymbol] = \"GeneratorFunction\";\n    }\n  }\n  genFun.prototype = Object.create(Gp);\n  return genFun;\n};\n\n// Within the body of any async function, \\`await x\\` is transformed to\n// \\`yield regeneratorRuntime.awrap(x)\\`, so that the runtime can test\n// \\`hasOwn.call(value, \"__await\")\\` to determine if the yielded value is\n// meant to be awaited.\nfunction awrap (arg) {\n  return { __await: arg };\n};\n\nfunction AsyncIterator(generator, PromiseImpl) {\n  function invoke(method, arg, resolve, reject) {\n    var record = tryCatch(generator[method], generator, arg);\n    if (record.type === \"throw\") {\n      reject(record.arg);\n    } else {\n      var result = record.arg;\n      var value = result.value;\n      if (value &&\n        typeof value === \"object\" &&\n        hasOwn.call(value, \"__await\")) {\n        return PromiseImpl.resolve(value.__await).then(function(value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function(err) {\n          invoke(\"throw\", err, resolve, reject);\n        });\n      }\n\n      return PromiseImpl.resolve(value).then(function(unwrapped) {\n        // When a yielded Promise is resolved, its final value becomes\n        // the .value of the Promise<{value,done}> result for the\n        // current iteration.\n        result.value = unwrapped;\n        resolve(result);\n      }, function(error) {\n        // If a rejected Promise was yielded, throw the rejection back\n        // into the async generator function so it can be handled there.\n        return invoke(\"throw\", error, resolve, reject);\n      });\n    }\n  }\n\n  var previousPromise;\n\n  function enqueue(method, arg) {\n    function callInvokeWithMethodAndArg() {\n      return new PromiseImpl(function(resolve, reject) {\n        invoke(method, arg, resolve, reject);\n      });\n    }\n\n    return previousPromise =\n      // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(\n        callInvokeWithMethodAndArg,\n        // Avoid propagating failures to Promises returned by later\n        // invocations of the iterator.\n        callInvokeWithMethodAndArg\n      ) : callInvokeWithMethodAndArg();\n  }\n\n  // Define the unified helper method that is used to implement .next,\n  // .throw, and .return (see defineIteratorMethods).\n  this._invoke = enqueue;\n}\n\ndefineIteratorMethods(AsyncIterator.prototype);\nAsyncIterator.prototype[asyncIteratorSymbol] = function () {\n  return this;\n};\n\n// Note that simple async functions are implemented on top of\n// AsyncIterator objects; they just return a Promise for the value of\n// the final result produced by the iterator.\n function async (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n  if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n  var iter = new AsyncIterator(\n    wrap(innerFn, outerFn, self, tryLocsList),\n    PromiseImpl\n  );\n\n  return isGeneratorFunction(outerFn)\n    ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function(result) {\n      return result.done ? result.value : iter.next();\n    });\n};\n\nfunction makeInvokeMethod(innerFn, self, context) {\n  var state = GenStateSuspendedStart;\n\n  return function invoke(method, arg) {\n    if (state === GenStateExecuting) {\n      throw new Error(\"Generator is already running\");\n    }\n\n    if (state === GenStateCompleted) {\n      if (method === \"throw\") {\n        throw arg;\n      }\n\n      // Be forgiving, per 25.3.3.3.3 of the spec:\n      // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n      return doneResult();\n    }\n\n    context.method = method;\n    context.arg = arg;\n\n    while (true) {\n      var delegate = context.delegate;\n      if (delegate) {\n        var delegateResult = maybeInvokeDelegate(delegate, context);\n        if (delegateResult) {\n          if (delegateResult === ContinueSentinel) continue;\n          return delegateResult;\n        }\n      }\n\n      if (context.method === \"next\") {\n        // Setting context._sent for legacy support of Babel's\n        // function.sent implementation.\n        context.sent = context._sent = context.arg;\n\n      } else if (context.method === \"throw\") {\n        if (state === GenStateSuspendedStart) {\n          state = GenStateCompleted;\n          throw context.arg;\n        }\n\n        context.dispatchException(context.arg);\n\n      } else if (context.method === \"return\") {\n        context.abrupt(\"return\", context.arg);\n      }\n\n      state = GenStateExecuting;\n\n      var record = tryCatch(innerFn, self, context);\n      if (record.type === \"normal\") {\n        // If an exception is thrown from innerFn, we leave state ===\n        // GenStateExecuting and loop back for another invocation.\n        state = context.done\n          ? GenStateCompleted\n          : GenStateSuspendedYield;\n\n        if (record.arg === ContinueSentinel) {\n          continue;\n        }\n\n        return {\n          value: record.arg,\n          done: context.done\n        };\n\n      } else if (record.type === \"throw\") {\n        state = GenStateCompleted;\n        // Dispatch the exception by looping back around to the\n        // context.dispatchException(context.arg) call above.\n        context.method = \"throw\";\n        context.arg = record.arg;\n      }\n    }\n  };\n}\n\n// Call delegate.iterator[context.method](context.arg) and handle the\n// result, either by returning a { value, done } result from the\n// delegate iterator, or by modifying context.method and context.arg,\n// setting context.delegate to null, and returning the ContinueSentinel.\nfunction maybeInvokeDelegate(delegate, context) {\n  var method = delegate.iterator[context.method];\n  if (method === undefined) {\n    // A .throw or .return when the delegate iterator has no .throw\n    // method always terminates the yield* loop.\n    context.delegate = null;\n\n    if (context.method === \"throw\") {\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n\n      context.method = \"throw\";\n      context.arg = new TypeError(\n        \"The iterator does not provide a 'throw' method\");\n    }\n\n    return ContinueSentinel;\n  }\n\n  var record = tryCatch(method, delegate.iterator, context.arg);\n\n  if (record.type === \"throw\") {\n    context.method = \"throw\";\n    context.arg = record.arg;\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  var info = record.arg;\n\n  if (! info) {\n    context.method = \"throw\";\n    context.arg = new TypeError(\"iterator result is not an object\");\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  if (info.done) {\n    // Assign the result of the finished delegate to the temporary\n    // variable specified by delegate.resultName (see delegateYield).\n    context[delegate.resultName] = info.value;\n\n    // Resume execution at the desired location (see delegateYield).\n    context.next = delegate.nextLoc;\n\n    // If context.method was \"throw\" but the delegate handled the\n    // exception, let the outer generator proceed normally. If\n    // context.method was \"next\", forget context.arg since it has been\n    // \"consumed\" by the delegate iterator. If context.method was\n    // \"return\", allow the original .return call to continue in the\n    // outer generator.\n    if (context.method !== \"return\") {\n      context.method = \"next\";\n      context.arg = undefined;\n    }\n\n  } else {\n    // Re-yield the result returned by the delegate method.\n    return info;\n  }\n\n  // The delegate iterator is finished, so forget it and continue with\n  // the outer generator.\n  context.delegate = null;\n  return ContinueSentinel;\n}\n\n// Define Generator.prototype.{next,throw,return} in terms of the\n// unified ._invoke helper method.\ndefineIteratorMethods(Gp);\n\nGp[toStringTagSymbol] = \"Generator\";\n\n// A Generator should always return itself as the iterator object when the\n// @@iterator function is called on it. Some browsers' implementations of the\n// iterator prototype chain incorrectly implement this, causing the Generator\n// object to not be returned from this call. This ensures that doesn't happen.\n// See https://github.com/facebook/regenerator/issues/274 for more details.\nGp[iteratorSymbol] = function() {\n  return this;\n};\n\nGp.toString = function() {\n  return \"[object Generator]\";\n};\n\nfunction pushTryEntry(locs) {\n  var entry = { tryLoc: locs[0] };\n\n  if (1 in locs) {\n    entry.catchLoc = locs[1];\n  }\n\n  if (2 in locs) {\n    entry.finallyLoc = locs[2];\n    entry.afterLoc = locs[3];\n  }\n\n  this.tryEntries.push(entry);\n}\n\nfunction resetTryEntry(entry) {\n  var record = entry.completion || {};\n  record.type = \"normal\";\n  delete record.arg;\n  entry.completion = record;\n}\n\nfunction Context(tryLocsList) {\n  // The root entry object (effectively a try statement without a catch\n  // or a finally block) gives us a place to store values thrown from\n  // locations where there is no enclosing try statement.\n  this.tryEntries = [{ tryLoc: \"root\" }];\n  tryLocsList.forEach(pushTryEntry, this);\n  this.reset(true);\n}\n\nfunction keys (object) {\n  var keys = [];\n  for (var key in object) {\n    keys.push(key);\n  }\n  keys.reverse();\n\n  // Rather than returning an object with a next method, we keep\n  // things simple and return the next function itself.\n  return function next() {\n    while (keys.length) {\n      var key = keys.pop();\n      if (key in object) {\n        next.value = key;\n        next.done = false;\n        return next;\n      }\n    }\n\n    // To avoid creating an additional object, we just hang the .value\n    // and .done properties off the next function object itself. This\n    // also ensures that the minifier will not anonymize the function.\n    next.done = true;\n    return next;\n  };\n};\n\nfunction values(iterable) {\n  if (iterable) {\n    var iteratorMethod = iterable[iteratorSymbol];\n    if (iteratorMethod) {\n      return iteratorMethod.call(iterable);\n    }\n\n    if (typeof iterable.next === \"function\") {\n      return iterable;\n    }\n\n    if (!isNaN(iterable.length)) {\n      var i = -1, next = function next() {\n        while (++i < iterable.length) {\n          if (hasOwn.call(iterable, i)) {\n            next.value = iterable[i];\n            next.done = false;\n            return next;\n          }\n        }\n\n        next.value = undefined;\n        next.done = true;\n\n        return next;\n      };\n\n      return next.next = next;\n    }\n  }\n\n  // Return an iterator with no values.\n  return { next: doneResult };\n}\n\nfunction doneResult() {\n  return { value: undefined, done: true };\n}\n\nContext.prototype = {\n  constructor: Context,\n\n  reset: function(skipTempReset) {\n    this.prev = 0;\n    this.next = 0;\n    // Resetting context._sent for legacy support of Babel's\n    // function.sent implementation.\n    this.sent = this._sent = undefined;\n    this.done = false;\n    this.delegate = null;\n\n    this.method = \"next\";\n    this.arg = undefined;\n\n    this.tryEntries.forEach(resetTryEntry);\n\n    if (!skipTempReset) {\n      for (var name in this) {\n        // Not sure about the optimal order of these conditions:\n        if (name.charAt(0) === \"t\" &&\n          hasOwn.call(this, name) &&\n          !isNaN(+name.slice(1))) {\n          this[name] = undefined;\n        }\n      }\n    }\n  },\n\n  stop: function() {\n    this.done = true;\n\n    var rootEntry = this.tryEntries[0];\n    var rootRecord = rootEntry.completion;\n    if (rootRecord.type === \"throw\") {\n      throw rootRecord.arg;\n    }\n\n    return this.rval;\n  },\n\n  dispatchException: function(exception) {\n    if (this.done) {\n      throw exception;\n    }\n\n    var context = this;\n    function handle(loc, caught) {\n      record.type = \"throw\";\n      record.arg = exception;\n      context.next = loc;\n\n      if (caught) {\n        // If the dispatched exception was caught by a catch block,\n        // then let that catch block handle the exception normally.\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n      return !! caught;\n    }\n\n    for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n      var entry = this.tryEntries[i];\n      var record = entry.completion;\n\n      if (entry.tryLoc === \"root\") {\n        // Exception thrown outside of any try block that could handle\n        // it, so set the completion value of the entire function to\n        // throw the exception.\n        return handle(\"end\");\n      }\n\n      if (entry.tryLoc <= this.prev) {\n        var hasCatch = hasOwn.call(entry, \"catchLoc\");\n        var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n        if (hasCatch && hasFinally) {\n          if (this.prev < entry.catchLoc) {\n            return handle(entry.catchLoc, true);\n          } else if (this.prev < entry.finallyLoc) {\n            return handle(entry.finallyLoc);\n          }\n\n        } else if (hasCatch) {\n          if (this.prev < entry.catchLoc) {\n            return handle(entry.catchLoc, true);\n          }\n\n        } else if (hasFinally) {\n          if (this.prev < entry.finallyLoc) {\n            return handle(entry.finallyLoc);\n          }\n\n        } else {\n          throw new Error(\"try statement without catch or finally\");\n        }\n      }\n    }\n  },\n\n  abrupt: function(type, arg) {\n    for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n      var entry = this.tryEntries[i];\n      if (entry.tryLoc <= this.prev &&\n        hasOwn.call(entry, \"finallyLoc\") &&\n        this.prev < entry.finallyLoc) {\n        var finallyEntry = entry;\n        break;\n      }\n    }\n\n    if (finallyEntry &&\n      (type === \"break\" ||\n        type === \"continue\") &&\n      finallyEntry.tryLoc <= arg &&\n      arg <= finallyEntry.finallyLoc) {\n      // Ignore the finally entry if control is not jumping to a\n      // location outside the try/catch block.\n      finallyEntry = null;\n    }\n\n    var record = finallyEntry ? finallyEntry.completion : {};\n    record.type = type;\n    record.arg = arg;\n\n    if (finallyEntry) {\n      this.method = \"next\";\n      this.next = finallyEntry.finallyLoc;\n      return ContinueSentinel;\n    }\n\n    return this.complete(record);\n  },\n\n  complete: function(record, afterLoc) {\n    if (record.type === \"throw\") {\n      throw record.arg;\n    }\n\n    if (record.type === \"break\" ||\n      record.type === \"continue\") {\n      this.next = record.arg;\n    } else if (record.type === \"return\") {\n      this.rval = this.arg = record.arg;\n      this.method = \"return\";\n      this.next = \"end\";\n    } else if (record.type === \"normal\" && afterLoc) {\n      this.next = afterLoc;\n    }\n\n    return ContinueSentinel;\n  },\n\n  finish: function(finallyLoc) {\n    for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n      var entry = this.tryEntries[i];\n      if (entry.finallyLoc === finallyLoc) {\n        this.complete(entry.completion, entry.afterLoc);\n        resetTryEntry(entry);\n        return ContinueSentinel;\n      }\n    }\n  },\n\n  \"catch\": function(tryLoc) {\n    for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n      var entry = this.tryEntries[i];\n      if (entry.tryLoc === tryLoc) {\n        var record = entry.completion;\n        if (record.type === \"throw\") {\n          var thrown = record.arg;\n          resetTryEntry(entry);\n        }\n        return thrown;\n      }\n    }\n\n    // The context.catch method must only be called with a location\n    // argument that corresponds to a known catch block.\n    throw new Error(\"illegal catch attempt\");\n  },\n\n  delegateYield: function(iterable, resultName, nextLoc) {\n    this.delegate = {\n      iterator: values(iterable),\n      resultName: resultName,\n      nextLoc: nextLoc\n    };\n\n    if (this.method === \"next\") {\n      // Deliberately forget the last sent value so that we don't\n      // accidentally pass it on to the delegate.\n      this.arg = undefined;\n    }\n\n    return ContinueSentinel;\n  }\n};\n\n// Export a default namespace that plays well with Rollup\nexport default {\n  wrap,\n  isGeneratorFunction,\n  AsyncIterator,\n  mark,\n  awrap,\n  async,\n  keys,\n  values\n};\n`;\n","import {GetDefaultBabelOptionsOptions} from \"./get-default-babel-options-options\";\nimport {FORCED_BABEL_PLUGIN_TRANSFORM_RUNTIME_OPTIONS, FORCED_BABEL_PRESET_ENV_OPTIONS} from \"../../constant/constant\";\nimport {TransformOptions} from \"@babel/core\";\n\n/**\n * Retrieves the Babel config options that will be used by default. If the user provides the same keys/presets/plugins, *they*\n * will take precedence\n */\nexport function getDefaultBabelOptions({browserslist}: GetDefaultBabelOptionsOptions): TransformOptions {\n\tconst includePresetEnv = browserslist != null;\n\n\treturn {\n\t\tpresets: [\n\t\t\t// Use @babel/preset-env when a Browserslist has been given\n\t\t\t...(!includePresetEnv\n\t\t\t\t? []\n\t\t\t\t: [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\trequire.resolve(\"@babel/preset-env\"),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...FORCED_BABEL_PRESET_ENV_OPTIONS,\n\t\t\t\t\t\t\t\t// Loose breaks things such as spreading an iterable that isn't an array\n\t\t\t\t\t\t\t\tloose: false,\n\t\t\t\t\t\t\t\tspec: false,\n\t\t\t\t\t\t\t\tdebug: false,\n\t\t\t\t\t\t\t\tignoreBrowserslistConfig: false,\n\t\t\t\t\t\t\t\tshippedProposals: true,\n\t\t\t\t\t\t\t\ttargets: {\n\t\t\t\t\t\t\t\t\tbrowsers: browserslist\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t  ])\n\t\t],\n\t\tplugins: [\n\t\t\t// If preset-env will be included, shipped proposals will be included already. If not, apply them here\n\t\t\t...(includePresetEnv\n\t\t\t\t? []\n\t\t\t\t: [\n\t\t\t\t\t\trequire.resolve(\"@babel/plugin-proposal-object-rest-spread\"),\n\t\t\t\t\t\trequire.resolve(\"@babel/plugin-proposal-async-generator-functions\"),\n\t\t\t\t\t\trequire.resolve(\"@babel/plugin-proposal-optional-catch-binding\"),\n\t\t\t\t\t\trequire.resolve(\"@babel/plugin-proposal-unicode-property-regex\"),\n\t\t\t\t\t\trequire.resolve(\"@babel/plugin-proposal-json-strings\")\n\t\t\t\t  ]),\n\t\t\t// Force the use of helpers (e.g. the runtime). But *don't* apply polyfills.\n\t\t\t[\n\t\t\t\trequire.resolve(\"@babel/plugin-transform-runtime\"),\n\t\t\t\t{\n\t\t\t\t\t...FORCED_BABEL_PLUGIN_TRANSFORM_RUNTIME_OPTIONS,\n\t\t\t\t\tcorejs: false\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\t};\n}\n","import {CustomTransformersFunction} from \"./custom-transformer-options\";\nimport {TS} from \"../../type/ts\";\n\n/**\n * Merges all of the given transformers\n */\nexport function mergeTransformers(...transformers: (TS.CustomTransformers | CustomTransformersFunction | undefined)[]): CustomTransformersFunction {\n\treturn options => {\n\t\tconst instantiatedTransformers = transformers\n\t\t\t.filter(transformer => transformer != null)\n\t\t\t.map((transformer: TS.CustomTransformers | CustomTransformersFunction) => (typeof transformer === \"function\" ? transformer(options) : transformer));\n\n\t\tconst beforeTransformers = ([] as (TS.TransformerFactory<TS.SourceFile> | TS.CustomTransformerFactory)[]).concat.apply(\n\t\t\t[],\n\t\t\tinstantiatedTransformers.map(transformer => transformer.before!).filter(beforeTransformer => beforeTransformer != null)\n\t\t);\n\n\t\tconst afterTransformers = ([] as (TS.TransformerFactory<TS.SourceFile> | TS.CustomTransformerFactory)[]).concat.apply(\n\t\t\t[],\n\t\t\tinstantiatedTransformers.map(transformer => transformer.after!).filter(afterTransformer => afterTransformer != null)\n\t\t);\n\n\t\tconst afterDeclarationsTransformers = ([] as (TS.TransformerFactory<TS.Bundle | TS.SourceFile> | TS.CustomTransformerFactory)[]).concat.apply(\n\t\t\t[],\n\t\t\tinstantiatedTransformers.map(transformer => transformer.afterDeclarations!).filter(afterDeclarationTransformer => afterDeclarationTransformer != null)\n\t\t);\n\n\t\treturn {\n\t\t\tbefore: beforeTransformers.length === 0 ? undefined : beforeTransformers,\n\t\t\tafter: afterTransformers.length === 0 ? undefined : afterTransformers,\n\t\t\tafterDeclarations: afterDeclarationsTransformers.length === 0 ? undefined : afterDeclarationsTransformers\n\t\t};\n\t};\n}\n","import {browsersWithSupportForEcmaVersion} from \"@wessberg/browserslist-generator\";\nimport {getEcmaVersionForScriptTarget} from \"../get-script-target-from-browserslist/get-script-target-from-browserslist\";\nimport {TS} from \"../../type/ts\";\n\n/**\n * If a browserslist is given, that one will be used. Otherwise, if the given CompilerOptions has a 'target' property, a Browserslist\n * will be computed based on the targeted Ecma version\n */\nexport function takeBrowserslistOrComputeBasedOnCompilerOptions(\n\tbrowserslist: string[] | undefined | false,\n\tcompilerOptions: TS.CompilerOptions,\n\ttypescript: typeof TS\n): string[] | undefined {\n\tif (browserslist != null && browserslist !== false) {\n\t\t// If a browserslist is given, use it\n\t\treturn browserslist;\n\t} else if (browserslist === false) {\n\t\treturn undefined;\n\t} else {\n\t\t// Otherwise, generate a browserslist based on the tsconfig target if given\n\t\treturn compilerOptions.target == null ? undefined : browsersWithSupportForEcmaVersion(getEcmaVersionForScriptTarget(compilerOptions.target, typescript));\n\t}\n}\n","import {OutputOptions} from \"rollup\";\nimport {ensureRelative} from \"../path/path-util\";\nimport {getOutDir} from \"../get-out-dir/get-out-dir\";\nimport {TS} from \"../../type/ts\";\n\n/**\n * Gets the destination directory to use for declarations based on the given CompilerOptions and Rollup output options\n */\nexport function getDeclarationOutDir(cwd: string, compilerOptions: TS.CompilerOptions, options?: Partial<OutputOptions>): string {\n\tconst outDir = compilerOptions.declarationDir != null ? ensureRelative(cwd, compilerOptions.declarationDir) : getOutDir(cwd, options);\n\n\t// Default to \".\" if it should be equal to cwd\n\treturn outDir === \"\" ? \".\" : outDir;\n}\n","import {TS} from \"../../../../type/ts\";\nimport {SourceFileBundlerVisitorOptions} from \"../transformers/source-file-bundler/source-file-bundler-visitor-options\";\nimport {DeclarationTransformer} from \"../declaration-bundler-options\";\n\nexport interface ApplyTransformersOptions {\n\ttransformers: DeclarationTransformer[];\n\tvisitorOptions: SourceFileBundlerVisitorOptions;\n}\n\nexport function applyTransformers({transformers, visitorOptions}: ApplyTransformersOptions): TS.SourceFile {\n\tfor (const transformer of transformers) {\n\t\tvisitorOptions.sourceFile = transformer(visitorOptions);\n\t}\n\treturn visitorOptions.sourceFile;\n}\n","import {NormalizedChunk, PreNormalizedChunk} from \"../../../../util/chunk/normalize-chunk\";\n\n/**\n * Gets the chunk filename that matches the given filename. It may be the same.\n */\nexport function getChunkFilename(module: string, chunks: NormalizedChunk[]): string | undefined {\n\treturn getChunkForModule(module, chunks)?.paths.absolute;\n}\n\nexport function getChunkForModule(module: string, chunks: NormalizedChunk[]): NormalizedChunk | undefined;\nexport function getChunkForModule(module: string, chunks: PreNormalizedChunk[]): PreNormalizedChunk | undefined;\nexport function getChunkForModule(module: string, chunks: PreNormalizedChunk[] | NormalizedChunk[]): NormalizedChunk | PreNormalizedChunk | undefined {\n\tfor (const chunk of chunks) {\n\t\tif (\"has\" in chunk.modules && chunk.modules.has(module)) {\n\t\t\treturn chunk;\n\t\t} else if (\"includes\" in chunk.modules && chunk.modules.includes(module)) {\n\t\t\treturn chunk;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n","export function formatLibReferenceDirective(libName: string): string {\n\treturn `/// <reference lib=\"${libName}\" />`;\n}\n","export function formatTypeReferenceDirective(fileName: string): string {\n\treturn `/// <reference types=\"${fileName}\" />`;\n}\n","import {ExtendedResolvedModule} from \"../service/cache/resolve-cache/extended-resolved-module\";\n\nexport function pickResolvedModule(resolvedModule: ExtendedResolvedModule, preferAmbient: true): string;\nexport function pickResolvedModule(resolvedModule: ExtendedResolvedModule, preferAmbient: false): string | undefined;\nexport function pickResolvedModule(resolvedModule: ExtendedResolvedModule, preferAmbient: boolean): string | undefined;\nexport function pickResolvedModule(resolvedModule: ExtendedResolvedModule, preferAmbient: boolean): string | undefined {\n\tif (preferAmbient) {\n\t\treturn resolvedModule.resolvedAmbientFileName ?? resolvedModule.resolvedFileName!;\n\t} else {\n\t\treturn resolvedModule.resolvedFileName;\n\t}\n}\n","import {TS} from \"../../../../type/ts\";\n\nexport type Modifiers = TS.ModifiersArray | TS.Modifier[];\n\n/**\n * Returns true if the given node has an Export keyword in front of it\n */\nexport function hasExportModifier(node: TS.Node, typescript: typeof TS): boolean {\n\treturn node.modifiers != null && node.modifiers.some(modifier => isExportModifier(modifier, typescript));\n}\n\n/**\n * Returns true if the given node has an Declare keyword in front of it\n */\nexport function hasDeclareModifier(node: TS.Node, typescript: typeof TS): boolean {\n\treturn node.modifiers != null && node.modifiers.some(modifier => isDeclareModifier(modifier, typescript));\n}\n\n/**\n * Returns true if the given modifier has an Export keyword in front of it\n */\nexport function isExportModifier(node: TS.Modifier, typescript: typeof TS): boolean {\n\treturn node.kind === typescript.SyntaxKind.ExportKeyword;\n}\n\n/**\n * Returns true if the given modifier has a Const keyword in front of it\n */\nexport function isConstModifier(node: TS.Modifier, typescript: typeof TS): boolean {\n\treturn node.kind === typescript.SyntaxKind.ConstKeyword;\n}\n\n/**\n * Returns true if the given modifier has an Default keyword in front of it\n */\nexport function isDefaultModifier(node: TS.Modifier, typescript: typeof TS): boolean {\n\treturn node.kind === typescript.SyntaxKind.DefaultKeyword;\n}\n\n/**\n * Returns true if the given modifier has an declare keyword in front of it\n */\nexport function isDeclareModifier(node: TS.Modifier, typescript: typeof TS): boolean {\n\treturn node.kind === typescript.SyntaxKind.DeclareKeyword;\n}\n\n/**\n * Removes an export modifier from the given ModifiersArray\n */\nexport function removeExportModifier(modifiers: Modifiers | undefined, typescript: typeof TS): TS.Modifier[] | undefined {\n\tif (modifiers == null) return modifiers;\n\treturn modifiers.filter(modifier => !isExportModifier(modifier, typescript) && !isDefaultModifier(modifier, typescript));\n}\n\n/**\n * Removes a declare modifier from the given ModifiersArray\n */\nexport function removeDeclareModifier(modifiers: Modifiers | undefined, typescript: typeof TS): TS.Modifier[] | undefined {\n\tif (modifiers == null) return modifiers;\n\treturn modifiers.filter(modifier => !isDeclareModifier(modifier, typescript));\n}\n\n/**\n * Removes an export modifier from the given ModifiersArray\n */\nexport function ensureHasDeclareModifier(modifiers: Modifiers | undefined, typescript: typeof TS): TS.Modifier[] | TS.ModifiersArray | undefined {\n\tif (modifiers == null) return [typescript.createModifier(typescript.SyntaxKind.DeclareKeyword)];\n\tif (modifiers.some(m => m.kind === typescript.SyntaxKind.DeclareKeyword)) return modifiers;\n\treturn [typescript.createModifier(typescript.SyntaxKind.DeclareKeyword), ...modifiers];\n}\n\n/**\n * Returns true if the given modifiers contain the keywords 'export' and 'default'\n */\nexport function hasDefaultExportModifier(modifiers: TS.ModifiersArray | undefined, typescript: typeof TS): boolean {\n\tif (modifiers == null) return false;\n\treturn modifiers.some(modifier => isExportModifier(modifier, typescript)) && modifiers.some(modifier => isDefaultModifier(modifier, typescript));\n}\n","import {TS} from \"../../../../type/ts\";\nimport {hasDefaultExportModifier} from \"./modifier-util\";\nimport {ExportedSymbol} from \"../transformers/track-exports-transformer/track-exports-transformer-visitor-options\";\nimport {ImportedSymbol} from \"../transformers/track-imports-transformer/track-imports-transformer-visitor-options\";\n\nexport interface CreateExportSpecifierFromNameAndModifiersOptions {\n\tname: string;\n\tmodifiers: TS.ModifiersArray | undefined;\n\ttypescript: typeof TS;\n}\n\nexport interface CreateExportSpecifierFromNameAndModifiersResult {\n\texportSpecifier: TS.ExportSpecifier;\n\texportedSymbol: ExportedSymbol;\n}\n\nexport function getImportedSymbolFromImportSpecifier(specifier: TS.ImportSpecifier, moduleSpecifier: string): ImportedSymbol {\n\treturn {\n\t\tmoduleSpecifier,\n\t\tisDefaultImport: specifier.name.text === \"default\",\n\t\tpropertyName: specifier.propertyName ?? specifier.name,\n\t\tname: specifier.name\n\t};\n}\n\nexport function getImportedSymbolFromImportClauseName(clauseName: TS.Identifier, moduleSpecifier: string): ImportedSymbol {\n\treturn {\n\t\tmoduleSpecifier,\n\t\tisDefaultImport: true,\n\t\tpropertyName: clauseName,\n\t\tname: clauseName\n\t};\n}\n\nexport function getImportedSymbolFromNamespaceImport(namespaceImport: TS.NamespaceImport, moduleSpecifier: string): ImportedSymbol {\n\treturn {\n\t\tmoduleSpecifier,\n\t\tisDefaultImport: true,\n\t\tpropertyName: namespaceImport.name,\n\t\tname: namespaceImport.name\n\t};\n}\n\nexport function getExportedSymbolFromExportSpecifier(specifier: TS.ExportSpecifier, moduleSpecifier: string | undefined): ExportedSymbol {\n\treturn {\n\t\tmoduleSpecifier,\n\t\tisDefaultExport: specifier.name.text === \"default\",\n\t\tpropertyName: specifier.propertyName ?? specifier.name,\n\t\tname: specifier.name\n\t};\n}\n\nexport function createExportSpecifierFromNameAndModifiers({\n\tname,\n\tmodifiers,\n\ttypescript\n}: CreateExportSpecifierFromNameAndModifiersOptions): CreateExportSpecifierFromNameAndModifiersResult {\n\tif (hasDefaultExportModifier(modifiers, typescript)) {\n\t\tconst propertyNameText = name;\n\t\tconst nameText = \"default\";\n\t\tconst exportSpecifier = typescript.createExportSpecifier(\n\t\t\tpropertyNameText === nameText ? undefined : typescript.createIdentifier(propertyNameText),\n\t\t\ttypescript.createIdentifier(nameText)\n\t\t);\n\n\t\treturn {\n\t\t\texportSpecifier,\n\t\t\texportedSymbol: getExportedSymbolFromExportSpecifier(exportSpecifier, undefined)\n\t\t};\n\t} else {\n\t\tconst propertyNameText = name;\n\t\tconst nameText = propertyNameText;\n\t\tconst exportSpecifier = typescript.createExportSpecifier(\n\t\t\tpropertyNameText === nameText ? undefined : typescript.createIdentifier(propertyNameText),\n\t\t\ttypescript.createIdentifier(nameText)\n\t\t);\n\n\t\treturn {\n\t\t\texportSpecifier,\n\t\t\texportedSymbol: getExportedSymbolFromExportSpecifier(exportSpecifier, undefined)\n\t\t};\n\t}\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackImportsTransformerVisitorOptions} from \"../track-imports-transformer-visitor-options\";\nimport {\n\tgetImportedSymbolFromImportClauseName,\n\tgetImportedSymbolFromImportSpecifier,\n\tgetImportedSymbolFromNamespaceImport\n} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\n\nexport function visitImportDeclaration({node, typescript, markAsImported}: TrackImportsTransformerVisitorOptions<TS.ImportDeclaration>): void {\n\tif (!typescript.isStringLiteralLike(node.moduleSpecifier)) return;\n\n\tif (node.importClause != null) {\n\t\tif (node.importClause.name != null) {\n\t\t\tmarkAsImported(getImportedSymbolFromImportClauseName(node.importClause.name, node.moduleSpecifier.text));\n\t\t}\n\n\t\tif (node.importClause.namedBindings != null) {\n\t\t\tif (typescript.isNamespaceImport(node.importClause.namedBindings)) {\n\t\t\t\tmarkAsImported(getImportedSymbolFromNamespaceImport(node.importClause.namedBindings, node.moduleSpecifier.text));\n\t\t\t} else {\n\t\t\t\t// Otherwise, check all ExportSpecifiers\n\t\t\t\tfor (const importSpecifier of node.importClause.namedBindings.elements) {\n\t\t\t\t\tmarkAsImported(getImportedSymbolFromImportSpecifier(importSpecifier, node.moduleSpecifier.text));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tmarkAsImported({\n\t\t\tmoduleSpecifier: node.moduleSpecifier.text,\n\t\t\tisClauseLessImport: true\n\t\t});\n\t}\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackImportsTransformerVisitorOptions} from \"../track-imports-transformer-visitor-options\";\n\nexport function visitImportTypeNode({node, typescript, markAsImported, continuation}: TrackImportsTransformerVisitorOptions<TS.ImportTypeNode>): void {\n\tif (!typescript.isLiteralTypeNode(node.argument) || !typescript.isStringLiteralLike(node.argument.literal) || node.qualifier == null) return;\n\tconst moduleSpecifier = node.argument.literal.text;\n\n\tconst name = typescript.isIdentifier(node.qualifier) ? node.qualifier : typescript.isIdentifier(node.qualifier.left) ? node.qualifier.left : undefined;\n\tif (name != null) {\n\t\tmarkAsImported({\n\t\t\tname,\n\t\t\tmoduleSpecifier,\n\t\t\tisDefaultImport: false,\n\t\t\tpropertyName: name\n\t\t});\n\t}\n\n\tif (node.typeArguments != null) {\n\t\tfor (const typeArgument of node.typeArguments) {\n\t\t\tcontinuation(typeArgument);\n\t\t}\n\t}\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackImportsTransformerVisitorOptions} from \"../track-imports-transformer-visitor-options\";\n\nexport function visitModuleDeclaration({node, ...options}: TrackImportsTransformerVisitorOptions<TS.ModuleDeclaration>): void {\n\tif (node.body == null) return;\n\treturn options.childContinuation(node.body);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackImportsTransformerVisitorOptions} from \"../track-imports-transformer-visitor-options\";\nimport {visitImportDeclaration} from \"./visit-import-declaration\";\nimport {visitImportTypeNode} from \"./visit-import-type-node\";\nimport {visitModuleDeclaration} from \"./visit-module-declaration\";\n\nexport function visitNode({node, ...options}: TrackImportsTransformerVisitorOptions<TS.Node>): void {\n\tif (options.typescript.isImportDeclaration(node)) {\n\t\treturn visitImportDeclaration({...options, node});\n\t} else if (options.typescript.isImportTypeNode(node)) {\n\t\treturn visitImportTypeNode({...options, node});\n\t} else if (options.typescript.isModuleDeclaration(node)) {\n\t\treturn visitModuleDeclaration({...options, node});\n\t} else if (options.shouldDeepTraverse) {\n\t\treturn options.childContinuation(node);\n\t}\n}\n","import {TS} from \"../../../../../type/ts\";\nimport {visitNode} from \"./visitor/visit-node\";\nimport {ImportedSymbol, ImportedSymbolSet, TrackImportsOptions, TrackImportsTransformerVisitorOptions} from \"./track-imports-transformer-visitor-options\";\n\nexport function trackImportsTransformer(options: TrackImportsOptions): ImportedSymbolSet {\n\tconst {typescript} = options;\n\tconst importedSymbolSet: ImportedSymbolSet = new Set();\n\n\t// Prepare some VisitorOptions\n\tconst visitorOptions: Omit<TrackImportsTransformerVisitorOptions<TS.Node>, \"node\"> = {\n\t\t...options,\n\t\t// Optimization: We only need to traverse nested nodes inside of the SourceFile if it contains at least one ImportTypeNode (or at least what appears to be one)\n\t\tshouldDeepTraverse: options.sourceFile.text.includes(\"import(\"),\n\n\t\tmarkAsImported(symbol: ImportedSymbol): void {\n\t\t\timportedSymbolSet.add(symbol);\n\t\t},\n\n\t\tchildContinuation: <U extends TS.Node>(node: U): void =>\n\t\t\ttypescript.forEachChild(node, nextNode => {\n\t\t\t\tvisitNode({\n\t\t\t\t\t...visitorOptions,\n\t\t\t\t\tnode: nextNode\n\t\t\t\t});\n\t\t\t}),\n\n\t\tcontinuation: <U extends TS.Node>(node: U): void => {\n\t\t\tvisitNode({\n\t\t\t\t...visitorOptions,\n\t\t\t\tnode\n\t\t\t});\n\t\t}\n\t};\n\n\ttypescript.forEachChild(options.sourceFile, nextNode => {\n\t\tvisitorOptions.continuation(nextNode);\n\t});\n\treturn importedSymbolSet;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackExportsTransformerVisitorOptions} from \"../track-exports-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitClassDeclaration({node, typescript, markAsExported, ...options}: TrackExportsTransformerVisitorOptions<TS.ClassDeclaration>): void {\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript) || node.name == null) return;\n\n\tconst {exportedSymbol} = createExportSpecifierFromNameAndModifiers({\n\t\t...options,\n\t\tname: node.name.text,\n\t\tmodifiers: node.modifiers,\n\t\ttypescript\n\t});\n\n\t// Also mark the node as exported so that we can track it later\n\tmarkAsExported(exportedSymbol);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackExportsTransformerVisitorOptions} from \"../track-exports-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitClassExpression({node, typescript, markAsExported, ...options}: TrackExportsTransformerVisitorOptions<TS.ClassExpression>): void {\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript) || node.name == null) return;\n\n\tconst {exportedSymbol} = createExportSpecifierFromNameAndModifiers({\n\t\t...options,\n\t\tname: node.name.text,\n\t\tmodifiers: node.modifiers,\n\t\ttypescript\n\t});\n\n\t// Also mark the node as exported so that we can track it later\n\tmarkAsExported(exportedSymbol);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackExportsTransformerVisitorOptions} from \"../track-exports-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitFunctionDeclaration({node, typescript, markAsExported, ...options}: TrackExportsTransformerVisitorOptions<TS.FunctionDeclaration>): void {\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript) || node.name == null) return;\n\n\tconst {exportedSymbol} = createExportSpecifierFromNameAndModifiers({\n\t\t...options,\n\t\tname: node.name.text,\n\t\tmodifiers: node.modifiers,\n\t\ttypescript\n\t});\n\n\t// Also mark the node as exported so that we can track it later\n\tmarkAsExported(exportedSymbol);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackExportsTransformerVisitorOptions} from \"../track-exports-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitFunctionExpression({node, typescript, markAsExported, ...options}: TrackExportsTransformerVisitorOptions<TS.FunctionExpression>): void {\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript) || node.name == null) return;\n\n\tconst {exportedSymbol} = createExportSpecifierFromNameAndModifiers({\n\t\t...options,\n\t\tname: node.name.text,\n\t\tmodifiers: node.modifiers,\n\t\ttypescript\n\t});\n\n\t// Also mark the node as exported so that we can track it later\n\tmarkAsExported(exportedSymbol);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackExportsTransformerVisitorOptions} from \"../track-exports-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitEnumDeclaration({node, typescript, markAsExported, ...options}: TrackExportsTransformerVisitorOptions<TS.EnumDeclaration>): void {\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return;\n\n\tconst {exportedSymbol} = createExportSpecifierFromNameAndModifiers({\n\t\t...options,\n\t\tname: node.name.text,\n\t\tmodifiers: node.modifiers,\n\t\ttypescript\n\t});\n\n\t// Also mark the node as exported so that we can track it later\n\tmarkAsExported(exportedSymbol);\n}\n","import {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\n/**\n * Deconflicts the given BindingElement.\n */\nexport function traceIdentifiersForBindingElement({node, continuation}: TraceIdentifiersVisitorOptions<TS.BindingElement>): void {\n\treturn continuation(node.name);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Traces identifiers for the given ClassDeclaration.\n */\nexport function traceIdentifiersForClassDeclaration({node, addIdentifier}: TraceIdentifiersVisitorOptions<TS.ClassDeclaration>): void {\n\tif (node.name == null) return;\n\taddIdentifier(node.name.text);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Traces identifiers for the given EnumDeclaration.\n */\nexport function traceIdentifiersForEnumDeclaration({node, addIdentifier}: TraceIdentifiersVisitorOptions<TS.EnumDeclaration>): void {\n\taddIdentifier(node.name.text);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Traces identifiers for the given FunctionDeclaration.\n */\nexport function traceIdentifiersForFunctionDeclaration({node, addIdentifier}: TraceIdentifiersVisitorOptions<TS.FunctionDeclaration>): void {\n\tif (node.name == null) return;\n\taddIdentifier(node.name.text);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Traces identifiers for the given ImportClause.\n */\nexport function traceIdentifiersForImportClause({node, addIdentifier, continuation}: TraceIdentifiersVisitorOptions<TS.ImportClause>): void {\n\tif (node.name != null) {\n\t\taddIdentifier(node.name.text);\n\t}\n\n\tif (node.namedBindings != null) {\n\t\treturn continuation(node.namedBindings);\n\t}\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Traces identifiers for the given NamespaceImport.\n */\nexport function traceIdentifiersForNamespaceImport({node, addIdentifier}: TraceIdentifiersVisitorOptions<TS.NamespaceImport>): void {\n\tif (node.name != null) {\n\t\taddIdentifier(node.name.text);\n\t}\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Traces identifiers for the given ImportSpecifier.\n */\nexport function traceIdentifiersForImportSpecifier({node, addIdentifier}: TraceIdentifiersVisitorOptions<TS.ImportSpecifier>): void {\n\taddIdentifier(node.name.text);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Traces identifiers for the given ExportSpecifier.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/naming-convention\nexport function traceIdentifiersForExportSpecifier(_options: TraceIdentifiersVisitorOptions<TS.ExportSpecifier>): void {\n\t// An ExportSpecifier doesn't produce any local module bindings\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Deconflicts the given Identifier.\n */\nexport function traceIdentifiersForIdentifier({node, addIdentifier}: TraceIdentifiersVisitorOptions<TS.Identifier>): void {\n\taddIdentifier(node.text);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Traces identifiers for the given InterfaceDeclaration.\n */\nexport function traceIdentifiersForInterfaceDeclaration({node, addIdentifier}: TraceIdentifiersVisitorOptions<TS.InterfaceDeclaration>): void {\n\taddIdentifier(node.name.text);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Traces identifiers for the given TypeAliasDeclaration.\n */\nexport function traceIdentifiersForTypeAliasDeclaration({node, addIdentifier}: TraceIdentifiersVisitorOptions<TS.TypeAliasDeclaration>): void {\n\tif (node.name == null) return;\n\n\taddIdentifier(node.name.text);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Deconflicts the given VariableDeclaration.\n */\nexport function traceIdentifiersForVariableDeclaration({node, continuation}: TraceIdentifiersVisitorOptions<TS.VariableDeclaration>): void {\n\tcontinuation(node.name);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Traces identifiers for the given ExportAssignment.\n */\nexport function traceIdentifiersForExportAssignment({node, continuation}: TraceIdentifiersVisitorOptions<TS.ExportAssignment>): void {\n\tcontinuation(node.expression);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Traces identifiers for the given CallExpression.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/naming-convention\nexport function traceIdentifiersForCallExpression(_options: TraceIdentifiersVisitorOptions<TS.CallExpression>): void {\n\t// Do nothing\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\n\n/**\n * Traces identifiers for the given NewExpression.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/naming-convention\nexport function traceIdentifiersForNewExpression(_options: TraceIdentifiersVisitorOptions<TS.NewExpression>): void {\n\t// Do nothing\n}\n","import {traceIdentifiersForBindingElement} from \"./trace-identifiers-for-binding-element\";\nimport {traceIdentifiersForClassDeclaration} from \"./trace-identifiers-for-class-declaration\";\nimport {traceIdentifiersForEnumDeclaration} from \"./trace-identifiers-for-enum-declaration\";\nimport {traceIdentifiersForFunctionDeclaration} from \"./trace-identifiers-for-function-declaration\";\nimport {traceIdentifiersForImportClause} from \"./trace-identifiers-for-import-clause\";\nimport {traceIdentifiersForNamespaceImport} from \"./trace-identifiers-for-namespace-import\";\nimport {traceIdentifiersForImportSpecifier} from \"./trace-identifiers-for-import-specifier\";\nimport {traceIdentifiersForExportSpecifier} from \"./trace-identifiers-for-export-specifier\";\nimport {traceIdentifiersForIdentifier} from \"./trace-identifiers-for-identifier\";\nimport {traceIdentifiersForInterfaceDeclaration} from \"./trace-identifiers-for-interface-declaration\";\nimport {traceIdentifiersForTypeAliasDeclaration} from \"./trace-identifiers-for-type-alias-declaration\";\nimport {traceIdentifiersForVariableDeclaration} from \"./trace-identifiers-for-variable-declaration\";\nimport {TraceIdentifiersVisitorOptions} from \"../trace-identifiers-visitor-options\";\nimport {traceIdentifiersForExportAssignment} from \"./trace-identifiers-for-export-assignment\";\nimport {traceIdentifiersForCallExpression} from \"./trace-identifiers-for-call-expression\";\nimport {traceIdentifiersForNewExpression} from \"./trace-identifiers-for-new-expression\";\n\n/**\n * Traces identifiers for the given Node, potentially generating new unique variable names for them\n */\nexport function traceIdentifiersForNode({node, ...options}: TraceIdentifiersVisitorOptions): void {\n\tif (options.typescript.isBindingElement(node)) traceIdentifiersForBindingElement({...options, node});\n\telse if (options.typescript.isClassDeclaration(node)) traceIdentifiersForClassDeclaration({...options, node});\n\telse if (options.typescript.isEnumDeclaration(node)) traceIdentifiersForEnumDeclaration({...options, node});\n\telse if (options.typescript.isFunctionDeclaration(node)) traceIdentifiersForFunctionDeclaration({...options, node});\n\telse if (options.typescript.isImportClause(node)) traceIdentifiersForImportClause({...options, node});\n\telse if (options.typescript.isNamespaceImport(node)) traceIdentifiersForNamespaceImport({...options, node});\n\telse if (options.typescript.isImportSpecifier(node)) traceIdentifiersForImportSpecifier({...options, node});\n\telse if (options.typescript.isExportSpecifier(node)) traceIdentifiersForExportSpecifier({...options, node});\n\telse if (options.typescript.isIdentifier(node)) traceIdentifiersForIdentifier({...options, node});\n\telse if (options.typescript.isInterfaceDeclaration(node)) traceIdentifiersForInterfaceDeclaration({...options, node});\n\telse if (options.typescript.isTypeAliasDeclaration(node)) traceIdentifiersForTypeAliasDeclaration({...options, node});\n\telse if (options.typescript.isVariableDeclaration(node)) traceIdentifiersForVariableDeclaration({...options, node});\n\telse if (options.typescript.isExportAssignment(node)) traceIdentifiersForExportAssignment({...options, node});\n\telse if (options.typescript.isCallExpression(node)) traceIdentifiersForCallExpression({...options, node});\n\telse if (options.typescript.isNewExpression(node)) traceIdentifiersForNewExpression({...options, node});\n\telse options.childContinuation(node);\n}\n","import {TS} from \"../../../../../type/ts\";\nimport {traceIdentifiersForNode} from \"./visitor/trace-identifiers-for-node\";\n\nexport interface GetIdentifiersWithCacheOptions {\n\ttypescript: typeof TS;\n\tnode: TS.Node;\n\tsourceFile: TS.SourceFile;\n}\n\nexport function traceIdentifiers({node, ...rest}: GetIdentifiersWithCacheOptions, identifiers: Set<string> = new Set()): Set<string> {\n\treturn getIdentifiers({...rest, node}, identifiers);\n}\n\nfunction getIdentifiers({node, ...rest}: GetIdentifiersWithCacheOptions, identifiers: Set<string>): Set<string> {\n\ttraceIdentifiersForNode({\n\t\t...rest,\n\t\tnode,\n\t\tcontinuation: nextNode => getIdentifiers({...rest, node: nextNode}, identifiers),\n\t\tchildContinuation: nextNode =>\n\t\t\trest.typescript.forEachChild(nextNode, nextNextNode => {\n\t\t\t\tgetIdentifiers({...rest, node: nextNextNode}, identifiers);\n\t\t\t}),\n\t\taddIdentifier(name: string): void {\n\t\t\tidentifiers.add(name);\n\t\t}\n\t});\n\treturn identifiers;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackExportsTransformerVisitorOptions} from \"../track-exports-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\nimport {traceIdentifiers} from \"../../trace-identifiers/trace-identifiers\";\n\nexport function visitVariableStatement({node, typescript, sourceFile, markAsExported, ...options}: TrackExportsTransformerVisitorOptions<TS.VariableStatement>): void {\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return;\n\n\tconst identifiers = traceIdentifiers({node, sourceFile, typescript});\n\n\tfor (const identifier of identifiers) {\n\t\tconst {exportedSymbol} = createExportSpecifierFromNameAndModifiers({\n\t\t\t...options,\n\t\t\tname: identifier,\n\t\t\tmodifiers: node.modifiers,\n\t\t\ttypescript\n\t\t});\n\n\t\t// Also mark the node as exported so that we can track it later\n\t\tmarkAsExported(exportedSymbol);\n\t}\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackExportsTransformerVisitorOptions} from \"../track-exports-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitInterfaceDeclaration({node, typescript, markAsExported, ...options}: TrackExportsTransformerVisitorOptions<TS.InterfaceDeclaration>): void {\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return;\n\n\tconst {exportedSymbol} = createExportSpecifierFromNameAndModifiers({\n\t\t...options,\n\t\tname: node.name.text,\n\t\tmodifiers: node.modifiers,\n\t\ttypescript\n\t});\n\n\t// Also mark the node as exported so that we can track it later\n\tmarkAsExported(exportedSymbol);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackExportsTransformerVisitorOptions} from \"../track-exports-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitModuleDeclaration({node, typescript, markAsExported, ...options}: TrackExportsTransformerVisitorOptions<TS.ModuleDeclaration>): void {\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) {\n\t\tif (node.body != null) return options.childContinuation(node.body);\n\t\telse return;\n\t}\n\n\tconst {exportedSymbol} = createExportSpecifierFromNameAndModifiers({\n\t\t...options,\n\t\tname: node.name.text,\n\t\tmodifiers: node.modifiers,\n\t\ttypescript\n\t});\n\n\t// Also mark the node as exported so that we can track it later\n\tmarkAsExported(exportedSymbol);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackExportsTransformerVisitorOptions} from \"../track-exports-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitTypeAliasDeclaration({node, typescript, markAsExported, ...options}: TrackExportsTransformerVisitorOptions<TS.TypeAliasDeclaration>): void {\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return;\n\n\tconst {exportedSymbol} = createExportSpecifierFromNameAndModifiers({\n\t\t...options,\n\t\tname: node.name.text,\n\t\tmodifiers: node.modifiers,\n\t\ttypescript\n\t});\n\n\t// Also mark the node as exported so that we can track it later\n\tmarkAsExported(exportedSymbol);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackExportsTransformerVisitorOptions} from \"../track-exports-transformer-visitor-options\";\nimport {getExportedSymbolFromExportSpecifier} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\n\nexport function visitExportDeclaration({node, typescript, markAsExported}: TrackExportsTransformerVisitorOptions<TS.ExportDeclaration>): void {\n\tif (node.moduleSpecifier != null && !typescript.isStringLiteralLike(node.moduleSpecifier)) return;\n\n\t// If there is no ExportClause, it is a NamespaceExport such as 'export * from \"...\"'.\n\t// If there is, and it is a NamespaceExport, it will be something like 'export * as Foo from \"...\"'\n\tif (node.exportClause == null || typescript.isNamespaceExport?.(node.exportClause)) {\n\t\t// It will never make sense to have a NamespaceExport with no ModuleSpecifier, but nevertheless do the check\n\t\tif (node.moduleSpecifier != null) {\n\t\t\tmarkAsExported({\n\t\t\t\tisNamespaceExport: true,\n\t\t\t\tname: node.exportClause == null ? undefined : node.exportClause.name,\n\t\t\t\tmoduleSpecifier: node.moduleSpecifier.text\n\t\t\t});\n\t\t}\n\t\treturn;\n\t}\n\n\t// Otherwise, check all ExportSpecifiers\n\tfor (const exportSpecifier of (node.exportClause as TS.NamedExports).elements) {\n\t\tmarkAsExported(getExportedSymbolFromExportSpecifier(exportSpecifier, node.moduleSpecifier?.text));\n\t}\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackExportsTransformerVisitorOptions} from \"../track-exports-transformer-visitor-options\";\n\nexport function visitExportAssignment(options: TrackExportsTransformerVisitorOptions<TS.ExportAssignment>): void {\n\tconst {node, typescript, markAsExported} = options;\n\tconst identifier = typescript.isIdentifier(node.expression) ? node.expression : undefined;\n\n\tif (identifier != null) {\n\t\tmarkAsExported({\n\t\t\tisDefaultExport: true,\n\t\t\tmoduleSpecifier: undefined,\n\t\t\tname: identifier,\n\t\t\tpropertyName: identifier\n\t\t});\n\t}\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackExportsTransformerVisitorOptions} from \"../track-exports-transformer-visitor-options\";\nimport {visitClassDeclaration} from \"./visit-class-declaration\";\nimport {visitClassExpression} from \"./visit-class-expression\";\nimport {visitFunctionDeclaration} from \"./visit-function-declaration\";\nimport {visitFunctionExpression} from \"./visit-function-expression\";\nimport {visitEnumDeclaration} from \"./visit-enum-declaration\";\nimport {visitVariableStatement} from \"./visit-variable-statement\";\nimport {visitInterfaceDeclaration} from \"./visit-interface-declaration\";\nimport {visitModuleDeclaration} from \"./visit-module-declaration\";\nimport {visitTypeAliasDeclaration} from \"./visit-type-alias-declaration\";\nimport {visitExportDeclaration} from \"./visit-export-declaration\";\nimport {visitExportAssignment} from \"./visit-export-assignment\";\n\nexport function visitNode({node, ...options}: TrackExportsTransformerVisitorOptions<TS.Node>): void {\n\tif (options.typescript.isClassDeclaration(node)) {\n\t\treturn visitClassDeclaration({...options, node});\n\t} else if (options.typescript.isClassExpression(node)) {\n\t\treturn visitClassExpression({...options, node});\n\t} else if (options.typescript.isFunctionDeclaration(node)) {\n\t\treturn visitFunctionDeclaration({...options, node});\n\t} else if (options.typescript.isFunctionExpression(node)) {\n\t\treturn visitFunctionExpression({...options, node});\n\t} else if (options.typescript.isEnumDeclaration(node)) {\n\t\treturn visitEnumDeclaration({...options, node});\n\t} else if (options.typescript.isInterfaceDeclaration(node)) {\n\t\treturn visitInterfaceDeclaration({...options, node});\n\t} else if (options.typescript.isTypeAliasDeclaration(node)) {\n\t\treturn visitTypeAliasDeclaration({...options, node});\n\t} else if (options.typescript.isModuleDeclaration(node)) {\n\t\treturn visitModuleDeclaration({...options, node});\n\t} else if (options.typescript.isVariableStatement(node)) {\n\t\treturn visitVariableStatement({...options, node});\n\t} else if (options.typescript.isExportDeclaration(node)) {\n\t\treturn visitExportDeclaration({...options, node});\n\t} else if (options.typescript.isExportAssignment(node)) {\n\t\treturn visitExportAssignment({...options, node});\n\t}\n}\n","import {TS} from \"../../../../../type/ts\";\nimport {visitNode} from \"./visitor/visit-node\";\nimport {ExportedSymbol, ExportedSymbolSet, TrackExportsOptions, TrackExportsTransformerVisitorOptions} from \"./track-exports-transformer-visitor-options\";\n\nexport function trackExportsTransformer(options: TrackExportsOptions): ExportedSymbolSet {\n\tconst {typescript} = options;\n\tconst exportedSymbolSet: ExportedSymbolSet = new Set();\n\n\t// Prepare some VisitorOptions\n\tconst visitorOptions: Omit<TrackExportsTransformerVisitorOptions<TS.Node>, \"node\"> = {\n\t\t...options,\n\n\t\tmarkAsExported(symbol: ExportedSymbol): void {\n\t\t\texportedSymbolSet.add(symbol);\n\t\t},\n\n\t\tchildContinuation: <U extends TS.Node>(node: U): void =>\n\t\t\ttypescript.forEachChild(node, nextNode => {\n\t\t\t\tvisitNode({\n\t\t\t\t\t...visitorOptions,\n\t\t\t\t\tnode: nextNode\n\t\t\t\t});\n\t\t\t}),\n\n\t\tcontinuation: <U extends TS.Node>(node: U): void => {\n\t\t\tvisitNode({\n\t\t\t\t...visitorOptions,\n\t\t\t\tnode\n\t\t\t});\n\t\t}\n\t};\n\n\ttypescript.forEachChild(options.sourceFile, nextNode => {\n\t\tvisitorOptions.continuation(nextNode);\n\t});\n\treturn exportedSymbolSet;\n}\n","import {DeclarationBundlerOptions, DeclarationTransformer} from \"../../declaration-bundler-options\";\nimport {TS} from \"../../../../../type/ts\";\nimport {applyTransformers} from \"../../util/apply-transformers\";\nimport {getChunkFilename} from \"../../util/get-chunk-filename\";\nimport {SourceFileBundlerVisitorOptions} from \"./source-file-bundler-visitor-options\";\nimport {formatLibReferenceDirective} from \"../../util/format-lib-reference-directive\";\nimport {formatTypeReferenceDirective} from \"../../util/format-type-reference-directive\";\nimport {pickResolvedModule} from \"../../../../../util/pick-resolved-module\";\nimport {trackImportsTransformer} from \"../track-imports-transformer/track-imports-transformer\";\nimport {trackExportsTransformer} from \"../track-exports-transformer/track-exports-transformer\";\n\nfunction needsInitialize(options: DeclarationBundlerOptions): boolean {\n\treturn options.sourceFileToExportedSymbolSet.size === 0 || options.sourceFileToImportedSymbolSet.size === 0 || options.moduleSpecifierToSourceFileMap.size === 0;\n}\n\nexport function sourceFileBundler(options: DeclarationBundlerOptions, ...transformers: DeclarationTransformer[]): TS.TransformerFactory<TS.Bundle> {\n\treturn context => bundle => {\n\t\tconst updatedSourceFiles: TS.SourceFile[] = [];\n\t\tconst entryModulesArr = [...options.chunk.entryModules];\n\n\t\tconst sourceFileMap = new Map<string, TS.SourceFile>(bundle.sourceFiles.map(sourceFile => [sourceFile.fileName, sourceFile]));\n\t\t// Take file names for all SourceFiles\n\t\tconst sourceFileNames = new Set(sourceFileMap.keys());\n\t\tconst sourceFiles = [...sourceFileMap.values()];\n\n\t\tif (needsInitialize(options)) {\n\t\t\tsourceFiles.forEach(sourceFile => {\n\t\t\t\tfor (const statement of sourceFile.statements) {\n\t\t\t\t\tif (options.typescript.isModuleDeclaration(statement)) {\n\t\t\t\t\t\toptions.moduleSpecifierToSourceFileMap.set(statement.name.text, sourceFile);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toptions.sourceFileToImportedSymbolSet.set(\n\t\t\t\t\tsourceFile.fileName,\n\t\t\t\t\ttrackImportsTransformer({\n\t\t\t\t\t\ttypescript: options.typescript,\n\t\t\t\t\t\tsourceFile\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\toptions.sourceFileToExportedSymbolSet.set(\n\t\t\t\t\tsourceFile.fileName,\n\t\t\t\t\ttrackExportsTransformer({\n\t\t\t\t\t\ttypescript: options.typescript,\n\t\t\t\t\t\tsourceFile\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\t// Only consider those SourceFiles that are part of the current chunk to be emitted\n\t\tconst sourceFilesForChunk = sourceFiles.filter(sourceFile => getChunkFilename(sourceFile.fileName, options.chunks) === options.chunk.paths.absolute);\n\n\t\t// Visit only the entry SourceFile(s)\n\t\tconst entrySourceFiles = sourceFilesForChunk\n\t\t\t.filter(sourceFile => options.chunk.entryModules.has(sourceFile.fileName))\n\t\t\t.sort((a, b) => (entryModulesArr.indexOf(a.fileName) < entryModulesArr.indexOf(b.fileName) ? -1 : 1));\n\n\t\tconst nonEntrySourceFiles = sourceFilesForChunk.filter(sourceFile => !entrySourceFiles.includes(sourceFile));\n\n\t\tconst firstEntrySourceFile = entrySourceFiles[0] as TS.SourceFile | undefined;\n\t\tconst otherEntrySourceFilesForChunk = entrySourceFiles.filter(entrySourceFile => entrySourceFile !== firstEntrySourceFile);\n\n\t\tif (firstEntrySourceFile != null) {\n\t\t\t// Prepare some VisitorOptions\n\t\t\tconst visitorOptions: SourceFileBundlerVisitorOptions = {\n\t\t\t\t...options,\n\t\t\t\tcontext,\n\t\t\t\totherEntrySourceFilesForChunk,\n\t\t\t\tsourceFile: firstEntrySourceFile,\n\t\t\t\tlexicalEnvironment: {\n\t\t\t\t\tparent: undefined,\n\t\t\t\t\tbindings: new Map()\n\t\t\t\t},\n\t\t\t\tincludedSourceFiles: new Set<string>([firstEntrySourceFile.fileName]),\n\t\t\t\tdeclarationToDeconflictedBindingMap: new Map<number, string>(),\n\t\t\t\tpreservedImports: new Map(),\n\n\t\t\t\tresolveSourceFile: (fileName, from) => {\n\t\t\t\t\tfor (const file of [fileName, `${fileName}/index`]) {\n\t\t\t\t\t\tif (options.moduleSpecifierToSourceFileMap.has(file)) {\n\t\t\t\t\t\t\treturn options.moduleSpecifierToSourceFileMap.get(file)!;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst resolved = options.host.resolve(fileName, from);\n\n\t\t\t\t\tif (resolved == null) return undefined;\n\t\t\t\t\tconst pickedResolvedModule = pickResolvedModule(resolved, true);\n\n\t\t\t\t\tconst resolvedSourceFile = pickedResolvedModule == null ? undefined : sourceFileMap.get(pickedResolvedModule);\n\n\t\t\t\t\t// Never allow resolving SourceFiles representing content not part of the compilation unit,\n\t\t\t\t\t// since that would lead to module merging assuming that modules will be part of the emitted declarations\n\t\t\t\t\t// even though they want, leading to undefined symbols\n\t\t\t\t\tif (resolvedSourceFile == null || !sourceFileNames.has(resolvedSourceFile.fileName)) return undefined;\n\t\t\t\t\treturn resolvedSourceFile;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Run all transformers on the SourceFile\n\t\t\tlet transformedSourceFile = applyTransformers({\n\t\t\t\tvisitorOptions,\n\t\t\t\ttransformers\n\t\t\t});\n\n\t\t\t// There may be additional transformers that are wrapped by this one. Run them on the transformed SourceFile rather than the entire bundle.\n\t\t\tif (options.wrappedTransformers != null && options.wrappedTransformers.afterDeclarations != null) {\n\t\t\t\tfor (const transformerFactory of options.wrappedTransformers.afterDeclarations) {\n\t\t\t\t\tconst transformer = transformerFactory(context);\n\t\t\t\t\tif (\"transformSourceFile\" in transformer) {\n\t\t\t\t\t\ttransformedSourceFile = transformer.transformSourceFile(transformedSourceFile);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttransformedSourceFile = transformer(transformedSourceFile) as TS.SourceFile;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tupdatedSourceFiles.push(transformedSourceFile);\n\t\t}\n\n\t\tfor (const sourceFile of [...otherEntrySourceFilesForChunk, ...nonEntrySourceFiles]) {\n\t\t\tupdatedSourceFiles.push(options.typescript.updateSourceFileNode(sourceFile, [], true));\n\t\t}\n\n\t\t// Merge lib- and type reference directives.\n\t\tconst libReferenceDirectiveFileNames = new Set<string>();\n\t\tconst typeReferenceDirectiveFileNames = new Set<string>();\n\t\tconst prepends: TS.UnparsedSource[] = [];\n\t\tconst bundleWithSyntheticLibReferences = (bundle as unknown) as {syntheticLibReferences?: readonly TS.FileReference[]};\n\n\t\tif (bundleWithSyntheticLibReferences.syntheticLibReferences != null) {\n\t\t\tfor (const {fileName} of bundleWithSyntheticLibReferences.syntheticLibReferences) {\n\t\t\t\tlibReferenceDirectiveFileNames.add(fileName);\n\t\t\t}\n\t\t}\n\n\t\tfor (const updatedSourceFile of updatedSourceFiles) {\n\t\t\tfor (const {fileName} of updatedSourceFile.libReferenceDirectives) {\n\t\t\t\tlibReferenceDirectiveFileNames.add(fileName);\n\t\t\t}\n\n\t\t\tfor (const {fileName} of updatedSourceFile.typeReferenceDirectives) {\n\t\t\t\ttypeReferenceDirectiveFileNames.add(fileName);\n\t\t\t}\n\n\t\t\tfor (const typeReferenceModule of options.sourceFileToTypeReferencesSet.get(updatedSourceFile.fileName) ?? new Set<string>()) {\n\t\t\t\ttypeReferenceDirectiveFileNames.add(typeReferenceModule);\n\t\t\t}\n\t\t}\n\n\t\tfor (const fileName of libReferenceDirectiveFileNames) {\n\t\t\tprepends.push(options.typescript.createUnparsedSourceFile(formatLibReferenceDirective(fileName)));\n\t\t}\n\n\t\tfor (const fileName of typeReferenceDirectiveFileNames) {\n\t\t\tprepends.push(options.typescript.createUnparsedSourceFile(formatTypeReferenceDirective(fileName)));\n\t\t}\n\t\treturn options.typescript.updateBundle(bundle, updatedSourceFiles, prepends);\n\t};\n}\n","import {dirname, ensureHasLeadingDotAndPosix, relative, stripKnownExtension} from \"../../../../util/path/path-util\";\nimport {getChunkFilename} from \"./get-chunk-filename\";\nimport {NormalizedChunk} from \"../../../../util/chunk/normalize-chunk\";\nimport {SourceFileResolver} from \"../transformers/source-file-bundler/source-file-bundler-visitor-options\";\n\nexport interface GenerateModuleSpecifierOptions {\n\tmoduleSpecifier: string;\n\tfrom: string;\n\tresolveSourceFile: SourceFileResolver;\n\tchunk: NormalizedChunk;\n\tchunks: NormalizedChunk[];\n}\n\nexport function isSameChunk(options: GenerateModuleSpecifierOptions): boolean {\n\treturn generateModuleSpecifier(options) == null;\n}\n\nexport function generateModuleSpecifier(options: GenerateModuleSpecifierOptions): string | undefined {\n\tconst {chunk, moduleSpecifier, resolveSourceFile, from} = options;\n\tconst sourceFile = resolveSourceFile(moduleSpecifier, from);\n\n\tif (sourceFile == null) {\n\t\treturn moduleSpecifier;\n\t}\n\n\tconst chunkForModuleSpecifier = getChunkFilename(sourceFile.fileName, options.chunks);\n\n\tif (chunkForModuleSpecifier == null) {\n\t\treturn moduleSpecifier;\n\t}\n\n\t// Never allow self-referencing chunks\n\tif (chunkForModuleSpecifier === chunk.paths.absolute) {\n\t\treturn undefined;\n\t}\n\n\tconst relativePath = relative(dirname(chunk.paths.absolute), chunkForModuleSpecifier);\n\treturn ensureHasLeadingDotAndPosix(stripKnownExtension(relativePath), false);\n}\n","import {TS} from \"../../../../type/ts\";\n\nexport function getSymbolFlagsForNode(node: TS.Node, typescript: typeof TS): TS.SymbolFlags {\n\tif (typescript.isClassLike(node)) {\n\t\treturn typescript.SymbolFlags.Class;\n\t} else if (typescript.isVariableDeclaration(node)) {\n\t\treturn typescript.SymbolFlags.Variable;\n\t} else if (typescript.isEnumDeclaration(node)) {\n\t\treturn typescript.SymbolFlags.Enum;\n\t} else if (typescript.isEnumMember(node)) {\n\t\treturn typescript.SymbolFlags.EnumMember;\n\t} else if (typescript.isPropertyDeclaration(node)) {\n\t\treturn typescript.SymbolFlags.Property;\n\t} else if (typescript.isGetAccessor(node)) {\n\t\treturn typescript.SymbolFlags.GetAccessor;\n\t} else if (typescript.isSetAccessor(node)) {\n\t\treturn typescript.SymbolFlags.SetAccessor;\n\t} else if (typescript.isFunctionLike(node)) {\n\t\treturn typescript.SymbolFlags.Function;\n\t} else if (typescript.isInterfaceDeclaration(node)) {\n\t\treturn typescript.SymbolFlags.Interface;\n\t} else if (typescript.isModuleDeclaration(node)) {\n\t\treturn typescript.SymbolFlags.Module;\n\t} else if (typescript.isTypeLiteralNode(node)) {\n\t\treturn typescript.SymbolFlags.TypeLiteral;\n\t} else if (typescript.isObjectLiteralExpression(node)) {\n\t\treturn typescript.SymbolFlags.ObjectLiteral;\n\t} else if (typescript.isMethodDeclaration(node)) {\n\t\treturn typescript.SymbolFlags.Method;\n\t} else if (typescript.isConstructorDeclaration(node)) {\n\t\treturn typescript.SymbolFlags.Constructor;\n\t} else if (typescript.isMethodSignature(node) || typescript.isCallSignatureDeclaration(node) || typescript.isPropertySignature(node)) {\n\t\treturn typescript.SymbolFlags.Signature;\n\t} else if (typescript.isTypeParameterDeclaration(node)) {\n\t\treturn typescript.SymbolFlags.TypeParameter;\n\t} else if (typescript.isTypeAliasDeclaration(node)) {\n\t\treturn typescript.SymbolFlags.TypeAlias;\n\t}\n\n\treturn typescript.SymbolFlags.None;\n}\n","import {SafeNode} from \"../../../../type/safe-node\";\nimport {TS} from \"../../../../type/ts\";\n\nexport function getOriginalNode<T extends SafeNode>(node: T, typescript: typeof TS): T {\n\tif (node._original != null) {\n\t\treturn getOriginalNode(node._original as T, typescript);\n\t}\n\n\treturn (typescript.getOriginalNode(node) as T) ?? node;\n}\n","import {TS} from \"../../../../type/ts\";\nimport {getSymbolFlagsForNode} from \"./get-symbol-flags-for-node\";\nimport {SafeNode} from \"../../../../type/safe-node\";\nimport {getOriginalNode} from \"./get-original-node\";\n\nexport interface GetSymbolAtLocationOptions {\n\tnode: SafeNode;\n\ttypeChecker: TS.TypeChecker;\n\ttypescript: typeof TS;\n}\n\nexport function getSymbolAtLocation({node, typescript, typeChecker}: GetSymbolAtLocationOptions): TS.Symbol {\n\tconst originalNode = getOriginalNode(node, typescript);\n\n\treturn (\n\t\toriginalNode._symbol ??\n\t\toriginalNode.symbol ??\n\t\ttypeChecker.getSymbolAtLocation(originalNode) ??\n\t\ttypeChecker.getSymbolsInScope(originalNode, getSymbolFlagsForNode(originalNode, typescript))[0]\n\t);\n}\n","import {SourceFileBundlerVisitorOptions} from \"../transformers/source-file-bundler/source-file-bundler-visitor-options\";\nimport {TS} from \"../../../../type/ts\";\nimport {cloneNode, preserveNode, setParentNodes} from \"@wessberg/ts-clone-node\";\nimport {getSymbolAtLocation} from \"./get-symbol-at-location\";\nimport {SafeNode} from \"../../../../type/safe-node\";\n\nexport interface PreserveMetaOptions extends SourceFileBundlerVisitorOptions {}\n\nexport function preserveSymbols<T extends TS.Node>(node: T, otherNode: TS.Node, options: PreserveMetaOptions): T {\n\tif (node === otherNode) return node;\n\n\t(node as SafeNode)._symbol = getSymbolAtLocation({...options, node: otherNode});\n\treturn node;\n}\n\nexport function preserveMeta<T extends TS.Node>(newNode: T, oldNode: T, options: PreserveMetaOptions): T {\n\treturn preserveNode(newNode, oldNode, options);\n}\n\nexport function preserveParents<T extends TS.Node>(node: T, options: Pick<SourceFileBundlerVisitorOptions, \"typescript\">): T {\n\treturn setParentNodes(node, {typescript: options.typescript, propertyName: \"_parent\", deep: true});\n}\n\nexport function cloneNodeWithMeta<T extends TS.Node>(node: T, options: PreserveMetaOptions): T {\n\treturn cloneNode<T>(node, options);\n}\n","import {LexicalEnvironment, LexicalEnvironmentBinding} from \"../transformers/deconflicter/deconflicter-options\";\n\nexport function cloneLexicalEnvironment(lexicalEnvironment?: LexicalEnvironment | undefined, ...entries: [string, LexicalEnvironmentBinding][]): LexicalEnvironment {\n\treturn {\n\t\tparent: lexicalEnvironment,\n\t\tbindings: new Map(entries)\n\t};\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoDeclareModifierTransformerVisitorOptions} from \"../ensure-no-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasDeclareModifier, removeDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitClassDeclaration(options: EnsureNoDeclareModifierTransformerVisitorOptions<TS.ClassDeclaration>): TS.ClassDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateClassDeclaration(node, node.decorators, removeDeclareModifier(node.modifiers, typescript), node.name, node.typeParameters, node.heritageClauses, node.members),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoDeclareModifierTransformerVisitorOptions} from \"../ensure-no-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasDeclareModifier, removeDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitClassExpression(options: EnsureNoDeclareModifierTransformerVisitorOptions<TS.ClassExpression>): TS.ClassExpression {\n\tconst {node, typescript} = options;\n\tif (!hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateClassExpression(node, removeDeclareModifier(node.modifiers, typescript), node.name, node.typeParameters, node.heritageClauses, node.members),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoDeclareModifierTransformerVisitorOptions} from \"../ensure-no-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasDeclareModifier, removeDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitFunctionDeclaration(options: EnsureNoDeclareModifierTransformerVisitorOptions<TS.FunctionDeclaration>): TS.FunctionDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateFunctionDeclaration(\n\t\t\tnode,\n\t\t\tnode.decorators,\n\t\t\tremoveDeclareModifier(node.modifiers, typescript),\n\t\t\tnode.asteriskToken,\n\t\t\tnode.name,\n\t\t\tnode.typeParameters,\n\t\t\tnode.parameters,\n\t\t\tnode.type,\n\t\t\tnode.body\n\t\t),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoDeclareModifierTransformerVisitorOptions} from \"../ensure-no-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasDeclareModifier, removeDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitFunctionExpression(options: EnsureNoDeclareModifierTransformerVisitorOptions<TS.FunctionExpression>): TS.FunctionExpression {\n\tconst {node, typescript} = options;\n\tif (!hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateFunctionExpression(\n\t\t\tnode,\n\t\t\tremoveDeclareModifier(node.modifiers, typescript),\n\t\t\tnode.asteriskToken,\n\t\t\tnode.name,\n\t\t\tnode.typeParameters,\n\t\t\tnode.parameters,\n\t\t\tnode.type,\n\t\t\tnode.body\n\t\t),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoDeclareModifierTransformerVisitorOptions} from \"../ensure-no-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasDeclareModifier, removeDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitEnumDeclaration(options: EnsureNoDeclareModifierTransformerVisitorOptions<TS.EnumDeclaration>): TS.EnumDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(typescript.updateEnumDeclaration(node, node.decorators, removeDeclareModifier(node.modifiers, typescript), node.name, node.members), node, options);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoDeclareModifierTransformerVisitorOptions} from \"../ensure-no-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasDeclareModifier, removeDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitVariableStatement(options: EnsureNoDeclareModifierTransformerVisitorOptions<TS.VariableStatement>): TS.VariableStatement {\n\tconst {node, typescript} = options;\n\tif (!hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(typescript.updateVariableStatement(node, removeDeclareModifier(node.modifiers, typescript), node.declarationList), node, options);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoDeclareModifierTransformerVisitorOptions} from \"../ensure-no-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasDeclareModifier, removeDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitInterfaceDeclaration(options: EnsureNoDeclareModifierTransformerVisitorOptions<TS.InterfaceDeclaration>): TS.InterfaceDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateInterfaceDeclaration(\n\t\t\tnode,\n\t\t\tnode.decorators,\n\t\t\tremoveDeclareModifier(node.modifiers, typescript),\n\t\t\tnode.name,\n\t\t\tnode.typeParameters,\n\t\t\tnode.heritageClauses,\n\t\t\tnode.members\n\t\t),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoDeclareModifierTransformerVisitorOptions} from \"../ensure-no-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasDeclareModifier, removeDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitModuleDeclaration(options: EnsureNoDeclareModifierTransformerVisitorOptions<TS.ModuleDeclaration>): TS.ModuleDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(typescript.updateModuleDeclaration(node, node.decorators, removeDeclareModifier(node.modifiers, typescript), node.name, node.body), node, options);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoDeclareModifierTransformerVisitorOptions} from \"../ensure-no-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasDeclareModifier, removeDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitTypeAliasDeclaration(options: EnsureNoDeclareModifierTransformerVisitorOptions<TS.TypeAliasDeclaration>): TS.TypeAliasDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateTypeAliasDeclaration(node, node.decorators, removeDeclareModifier(node.modifiers, typescript), node.name, node.typeParameters, node.type),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoDeclareModifierTransformerVisitorOptions} from \"../ensure-no-declare-modifier-transformer-visitor-options\";\nimport {visitClassDeclaration} from \"./visit-class-declaration\";\nimport {visitClassExpression} from \"./visit-class-expression\";\nimport {visitFunctionDeclaration} from \"./visit-function-declaration\";\nimport {visitFunctionExpression} from \"./visit-function-expression\";\nimport {visitEnumDeclaration} from \"./visit-enum-declaration\";\nimport {visitVariableStatement} from \"./visit-variable-statement\";\nimport {visitInterfaceDeclaration} from \"./visit-interface-declaration\";\nimport {visitModuleDeclaration} from \"./visit-module-declaration\";\nimport {visitTypeAliasDeclaration} from \"./visit-type-alias-declaration\";\n\nexport function visitNode({node, ...options}: EnsureNoDeclareModifierTransformerVisitorOptions<TS.Node>): TS.Node {\n\tif (options.typescript.isClassDeclaration(node)) {\n\t\treturn visitClassDeclaration({...options, node});\n\t} else if (options.typescript.isClassExpression(node)) {\n\t\treturn visitClassExpression({...options, node});\n\t} else if (options.typescript.isFunctionDeclaration(node)) {\n\t\treturn visitFunctionDeclaration({...options, node});\n\t} else if (options.typescript.isFunctionExpression(node)) {\n\t\treturn visitFunctionExpression({...options, node});\n\t} else if (options.typescript.isEnumDeclaration(node)) {\n\t\treturn visitEnumDeclaration({...options, node});\n\t} else if (options.typescript.isInterfaceDeclaration(node)) {\n\t\treturn visitInterfaceDeclaration({...options, node});\n\t} else if (options.typescript.isTypeAliasDeclaration(node)) {\n\t\treturn visitTypeAliasDeclaration({...options, node});\n\t} else if (options.typescript.isModuleDeclaration(node)) {\n\t\treturn visitModuleDeclaration({...options, node});\n\t} else if (options.typescript.isVariableStatement(node)) {\n\t\treturn visitVariableStatement({...options, node});\n\t} else {\n\t\t// Only consider root-level statements here\n\t\treturn node;\n\t}\n}\n","import {DebugData, EmitPathKind, TypescriptPluginOptions} from \"../../plugin/i-typescript-plugin-options\";\nimport {TS} from \"../../type/ts\";\n\nexport function shouldDebug(debug: TypescriptPluginOptions[\"debug\"], data: DebugData): boolean {\n\tif (typeof debug === \"boolean\") return debug;\n\treturn Boolean(debug(data));\n}\n\nexport function shouldDebugSourceFile(debug: TypescriptPluginOptions[\"debug\"], {fileName, text}: TS.SourceFile): boolean {\n\tif (typeof debug === \"boolean\") return debug;\n\treturn Boolean(\n\t\tdebug({\n\t\t\tkind: \"transformer\",\n\t\t\tfileName,\n\t\t\ttext\n\t\t})\n\t);\n}\n\nexport function shouldDebugMetrics(debug: TypescriptPluginOptions[\"debug\"], sourceFile?: TS.SourceFile): boolean {\n\tif (typeof debug === \"boolean\") return debug;\n\treturn Boolean(\n\t\tdebug({\n\t\t\tkind: \"metrics\",\n\t\t\t...(sourceFile == null ? {} : {fileName: sourceFile.fileName})\n\t\t})\n\t);\n}\n\nexport function shouldDebugEmit(debug: TypescriptPluginOptions[\"debug\"], fileName: string, text: string, outputPathKind: EmitPathKind): boolean {\n\tif (typeof debug === \"boolean\") return debug;\n\treturn Boolean(\n\t\tdebug({\n\t\t\tkind: \"emit\",\n\t\t\tfileKind: outputPathKind,\n\t\t\tfileName,\n\t\t\ttext\n\t\t})\n\t);\n}\n","import chalk from \"chalk\";\n\nexport function getFormattedDateTimePrefix(): string {\n\tconst currentDate = new Date();\n\tconst currentDateTime = `(${currentDate.getHours().toString().padStart(2, \"0\")}:${currentDate\n\t\t.getMinutes()\n\t\t.toString()\n\t\t.padStart(2, \"0\")}:${currentDate.getSeconds().toString().padStart(2, \"0\")})`;\n\treturn `${chalk.gray(currentDateTime)}   `;\n}\n","import chalk from \"chalk\";\nimport {getFormattedDateTimePrefix} from \"./get-formatted-date-time-prefix\";\n\nexport interface LogMetrics {\n\tfinish(): void;\n}\nexport function logMetrics(message: string, fileName?: string): LogMetrics {\n\tconst uniqueMessage = `${getFormattedDateTimePrefix()}${chalk.green(`metrics: ${message}`)}${fileName == null ? \"\" : ` ${chalk.gray(`(${fileName})`)}`}`;\n\tconsole.time(uniqueMessage);\n\n\treturn {\n\t\tfinish: () => console.timeEnd(uniqueMessage)\n\t};\n}\n","import {TS} from \"../../type/ts\";\nimport chalk from \"chalk\";\nimport {getFormattedDateTimePrefix} from \"./get-formatted-date-time-prefix\";\n\nexport interface LogTransformationResult {\n\tfinish(sourceFile: TS.SourceFile): void;\n}\n\nfunction logTransformationStep(leadingText: string, name: string, sourceFile: TS.SourceFile, printer: TS.Printer): void {\n\tconsole.log(`${getFormattedDateTimePrefix()}${chalk.magenta(`transformer: ${leadingText} ${name}`)} ${chalk.gray(`(${sourceFile.fileName})`)}`);\n\tconsole.log(chalk.white(printer.printFile(sourceFile)));\n}\n\nexport function logTransformer(name: string, sourceFile: TS.SourceFile, printer: TS.Printer): LogTransformationResult {\n\tlogTransformationStep(\"Before\", name, sourceFile, printer);\n\treturn {\n\t\tfinish: nextSourceFile => logTransformationStep(\"After\", name, nextSourceFile, printer)\n\t};\n}\n","import {TS} from \"../../../../../type/ts\";\nimport {SourceFileBundlerVisitorOptions} from \"../source-file-bundler/source-file-bundler-visitor-options\";\nimport {visitNode} from \"./visitor/visit-node\";\nimport {shouldDebugMetrics, shouldDebugSourceFile} from \"../../../../../util/is-debug/should-debug\";\nimport {logMetrics} from \"../../../../../util/logging/log-metrics\";\nimport {logTransformer} from \"../../../../../util/logging/log-transformer\";\nimport {preserveMeta} from \"../../util/clone-node-with-meta\";\n\nexport function ensureNoDeclareModifierTransformer(options: SourceFileBundlerVisitorOptions): TS.SourceFile {\n\tconst {typescript, context, sourceFile, pluginOptions, printer} = options;\n\n\tconst fullBenchmark = shouldDebugMetrics(pluginOptions.debug, sourceFile) ? logMetrics(`Ensuring no declare modifiers`, sourceFile.fileName) : undefined;\n\n\tconst transformationLog = shouldDebugSourceFile(pluginOptions.debug, sourceFile) ? logTransformer(\"Ensuring no declare modifiers\", sourceFile, printer) : undefined;\n\n\t// Prepare some VisitorOptions\n\tconst visitorOptions = {\n\t\t...options,\n\n\t\tchildContinuation: <U extends TS.Node>(node: U): U =>\n\t\t\ttypescript.visitEachChild(\n\t\t\t\tnode,\n\t\t\t\tnextNode =>\n\t\t\t\t\tvisitNode({\n\t\t\t\t\t\t...visitorOptions,\n\t\t\t\t\t\tnode: nextNode\n\t\t\t\t\t}),\n\t\t\t\tcontext\n\t\t\t),\n\n\t\tcontinuation: <U extends TS.Node>(node: U): U =>\n\t\t\tvisitNode({\n\t\t\t\t...visitorOptions,\n\t\t\t\tnode\n\t\t\t}) as U\n\t};\n\n\tconst result = preserveMeta(\n\t\ttypescript.visitEachChild(sourceFile, nextNode => visitorOptions.continuation(nextNode), context),\n\t\tsourceFile,\n\t\toptions\n\t);\n\n\ttransformationLog?.finish(result);\n\tfullBenchmark?.finish();\n\n\treturn result;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {StatementMergerVisitorOptions} from \"../statement-merger-visitor-options\";\n\nexport function visitImportDeclaration(options: StatementMergerVisitorOptions<TS.ImportDeclaration>): TS.ImportDeclaration[] | TS.ImportDeclaration | undefined {\n\tconst {node, typescript} = options;\n\n\t// If the ModuleSpecifier is given and it isn't a string literal, leave it as it is\n\tif (!typescript.isStringLiteralLike(node.moduleSpecifier)) {\n\t\treturn node;\n\t}\n\n\t// Don't include binding-less imports. This doesn't make sense inside ambient modules\n\tif (node.importClause == null) {\n\t\treturn undefined;\n\t}\n\n\t// Otherwise, replace this ImportDeclaration with merged imports from the module\n\tconst replacements = options.preserveImportedModuleIfNeeded(node.moduleSpecifier.text);\n\n\tif (replacements == null || replacements.length === 0) return undefined;\n\tconst [first, ...other] = replacements;\n\n\t// Again, don't include binding-less imports. This doesn't make sense inside ambient modules\n\tif (first == null || first.importClause == null) {\n\t\treturn undefined;\n\t}\n\n\t// If there is neither a default name or a single named binding, don't preserve the import\n\tif (\n\t\tfirst.importClause.name == null &&\n\t\t(first.importClause.namedBindings == null || (!typescript.isNamespaceImport(first.importClause.namedBindings) && first.importClause.namedBindings.elements.length < 1))\n\t) {\n\t\treturn other;\n\t}\n\n\treturn [\n\t\ttypescript.updateImportDeclaration(\n\t\t\tnode,\n\t\t\tnode.decorators,\n\t\t\tnode.modifiers,\n\t\t\ttypescript.updateImportClause(node.importClause, first.importClause.name, first.importClause.namedBindings, first.importClause.isTypeOnly),\n\t\t\tnode.moduleSpecifier\n\t\t),\n\t\t...other\n\t];\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {StatementMergerVisitorOptions} from \"../statement-merger-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\nexport function visitExportDeclaration(options: StatementMergerVisitorOptions<TS.ExportDeclaration>): TS.ExportDeclaration[] | TS.ExportDeclaration | undefined {\n\tconst {node, typescript} = options;\n\n\t// If the ModuleSpecifier is given and it isn't a string literal, leave it as it is\n\tif (node.moduleSpecifier != null && !typescript.isStringLiteralLike(node.moduleSpecifier)) {\n\t\treturn node;\n\t}\n\n\t// Otherwise, replace this ExportDeclaration with merged exports from the module\n\tconst replacements = options.preserveExportedModuleIfNeeded(node.moduleSpecifier?.text);\n\tif (replacements == null || replacements.length === 0) return undefined;\n\tconst [first, ...other] = replacements;\n\n\tlet exportClause: TS.NamedExports | TS.NamespaceExport | undefined;\n\n\tif (first.exportClause != null && typescript.isNamedExports(first.exportClause)) {\n\t\texportClause =\n\t\t\tnode.exportClause != null && typescript.isNamedExports(node.exportClause)\n\t\t\t\t? typescript.updateNamedExports(node.exportClause, first.exportClause.elements)\n\t\t\t\t: typescript.createNamedExports(first.exportClause.elements);\n\t} else if (first.exportClause != null && typescript.isNamespaceExport?.(first.exportClause)) {\n\t\texportClause =\n\t\t\tnode.exportClause != null && typescript.isNamespaceExport?.(node.exportClause)\n\t\t\t\t? typescript.updateNamespaceExport(node.exportClause, typescript.createIdentifier(first.exportClause.name.text))\n\t\t\t\t: typescript.createNamespaceExport(typescript.createIdentifier(first.exportClause.name.text));\n\t}\n\n\treturn [preserveMeta(typescript.updateExportDeclaration(node, node.decorators, node.modifiers, exportClause, node.moduleSpecifier, node.isTypeOnly), node, options), ...other];\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {StatementMergerVisitorOptions} from \"../statement-merger-visitor-options\";\n\nexport function visitExportAssignment(\n\toptions: StatementMergerVisitorOptions<TS.ExportAssignment>\n): TS.ExportDeclaration[] | TS.ExportDeclaration | TS.ExportAssignment | undefined {\n\tconst {node, typescript} = options;\n\n\t// If the Expression isn't an identifier, leave the node as it is\n\tif (!typescript.isIdentifier(node.expression)) {\n\t\treturn node;\n\t}\n\n\t// Otherwise, replace this ExportDeclaration with merged exports from the module\n\treturn options.preserveExportedModuleIfNeeded(undefined);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {StatementMergerVisitorOptions} from \"../statement-merger-visitor-options\";\nimport {visitImportDeclaration} from \"./visit-import-declaration\";\nimport {visitExportDeclaration} from \"./visit-export-declaration\";\nimport {visitExportAssignment} from \"./visit-export-assignment\";\n\nexport function visitNode({node, ...options}: StatementMergerVisitorOptions<TS.Node>): TS.Node | TS.Node[] | undefined {\n\tif (options.typescript.isImportDeclaration(node)) {\n\t\treturn visitImportDeclaration({...options, node});\n\t} else if (options.typescript.isExportDeclaration(node)) {\n\t\treturn visitExportDeclaration({...options, node});\n\t} else if (options.typescript.isExportAssignment(node)) {\n\t\treturn visitExportAssignment({...options, node});\n\t} else {\n\t\t// Only consider root-level statements here\n\t\treturn node;\n\t}\n}\n","import {ensureHasLeadingDotAndPosix} from \"../../../../util/path/path-util\";\nimport {TS} from \"../../../../type/ts\";\nimport {preserveParents} from \"./clone-node-with-meta\";\n\nexport type MergedImportDeclarationsMap = Map<string, TS.ImportDeclaration[]>;\n\nexport function getMergedImportDeclarationsForModules(sourceFile: TS.SourceFile, typescript: typeof TS): MergedImportDeclarationsMap {\n\tconst imports = sourceFile.statements.filter(typescript.isImportDeclaration);\n\n\tconst moduleToImportDeclarations: MergedImportDeclarationsMap = new Map();\n\tconst namedImportsFromModulesMap: Map<string, {propertyName: string; alias: string}[][]> = new Map();\n\tconst defaultImportsFromModulesMap: Map<string, Set<string>> = new Map();\n\tconst namespaceImportsFromModulesMap: Map<string, Set<string>> = new Map();\n\n\tfor (const importDeclaration of imports) {\n\t\t// If the ModuleSpecifier is given and it isn't a string literal, skip it\n\t\tif (!typescript.isStringLiteralLike(importDeclaration.moduleSpecifier)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst specifierText = importDeclaration.moduleSpecifier.text;\n\n\t\tlet namedImportsFromModules = namedImportsFromModulesMap.get(specifierText);\n\t\tif (namedImportsFromModules == null) {\n\t\t\tnamedImportsFromModules = [[]];\n\t\t\tnamedImportsFromModulesMap.set(specifierText, namedImportsFromModules);\n\t\t}\n\n\t\tconst addAliasForNamedImport = (propertyName: string, alias: string) => {\n\t\t\tlet collectionWithProperty = namedImportsFromModules!.find(records => records.some(record => propertyName === record.propertyName && alias === record.alias));\n\t\t\tif (collectionWithProperty != null) return;\n\n\t\t\tif (propertyName === alias) {\n\t\t\t\t// append the pair to the 0-indexed collection\n\t\t\t\tconst [firstCollection] = namedImportsFromModules!;\n\t\t\t\tfirstCollection.push({propertyName, alias});\n\t\t\t} else {\n\t\t\t\t// Create a new collection\n\t\t\t\tcollectionWithProperty = [{propertyName, alias}];\n\t\t\t\tnamedImportsFromModules!.push(collectionWithProperty);\n\t\t\t}\n\t\t};\n\n\t\tlet defaultImportsFromModules = defaultImportsFromModulesMap.get(specifierText);\n\t\tif (defaultImportsFromModules == null) {\n\t\t\tdefaultImportsFromModules = new Set();\n\t\t\tdefaultImportsFromModulesMap.set(specifierText, defaultImportsFromModules);\n\t\t}\n\n\t\tlet namespaceImportsFromModules = namespaceImportsFromModulesMap.get(specifierText);\n\t\tif (namespaceImportsFromModules == null) {\n\t\t\tnamespaceImportsFromModules = new Set();\n\t\t\tnamespaceImportsFromModulesMap.set(specifierText, namespaceImportsFromModules);\n\t\t}\n\n\t\tif (importDeclaration.importClause != null) {\n\t\t\tif (importDeclaration.importClause.name != null) {\n\t\t\t\tdefaultImportsFromModules.add(importDeclaration.importClause.name.text);\n\t\t\t}\n\n\t\t\tif (importDeclaration.importClause.namedBindings != null) {\n\t\t\t\tif (typescript.isNamespaceImport(importDeclaration.importClause.namedBindings)) {\n\t\t\t\t\tnamespaceImportsFromModules.add(importDeclaration.importClause.namedBindings.name.text);\n\t\t\t\t} else {\n\t\t\t\t\tfor (const element of importDeclaration.importClause.namedBindings.elements) {\n\t\t\t\t\t\tif (element.propertyName == null) {\n\t\t\t\t\t\t\taddAliasForNamedImport(element.name.text, element.name.text);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taddAliasForNamedImport(element.propertyName.text, element.name.text);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Add all default imports from the module (They may have different local names)\n\tfor (const [module, names] of defaultImportsFromModulesMap) {\n\t\tlet importDeclarationsForModule = moduleToImportDeclarations.get(module);\n\t\tif (importDeclarationsForModule == null) {\n\t\t\timportDeclarationsForModule = [];\n\t\t\tmoduleToImportDeclarations.set(module, importDeclarationsForModule);\n\t\t}\n\n\t\tfor (const name of names) {\n\t\t\timportDeclarationsForModule.push(\n\t\t\t\tpreserveParents(\n\t\t\t\t\ttypescript.createImportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttypescript.createImportClause(typescript.createIdentifier(name), undefined),\n\t\t\t\t\t\ttypescript.createStringLiteral(ensureHasLeadingDotAndPosix(module))\n\t\t\t\t\t),\n\t\t\t\t\t{typescript}\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t// Add all namespace imports from the module (They may have different local names)\n\tfor (const [module, names] of namespaceImportsFromModulesMap) {\n\t\tlet importDeclarationsForModule = moduleToImportDeclarations.get(module);\n\t\tif (importDeclarationsForModule == null) {\n\t\t\timportDeclarationsForModule = [];\n\t\t\tmoduleToImportDeclarations.set(module, importDeclarationsForModule);\n\t\t}\n\n\t\tfor (const name of names) {\n\t\t\timportDeclarationsForModule.push(\n\t\t\t\tpreserveParents(\n\t\t\t\t\ttypescript.createImportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttypescript.createImportClause(undefined, typescript.createNamespaceImport(typescript.createIdentifier(name))),\n\t\t\t\t\t\ttypescript.createStringLiteral(ensureHasLeadingDotAndPosix(module))\n\t\t\t\t\t),\n\t\t\t\t\t{typescript}\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t// Add all named imports from the module (They may have different local names)\n\tfor (const [module, collections] of namedImportsFromModulesMap) {\n\t\tlet importDeclarationsForModule = moduleToImportDeclarations.get(module);\n\t\tif (importDeclarationsForModule == null) {\n\t\t\timportDeclarationsForModule = [];\n\t\t\tmoduleToImportDeclarations.set(module, importDeclarationsForModule);\n\t\t}\n\n\t\tfor (const collection of collections) {\n\t\t\t// Don't add empty collections\n\t\t\tif (collection.length < 1) continue;\n\n\t\t\timportDeclarationsForModule.push(\n\t\t\t\tpreserveParents(\n\t\t\t\t\ttypescript.createImportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttypescript.createImportClause(\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttypescript.createNamedImports(\n\t\t\t\t\t\t\t\tcollection.map(record =>\n\t\t\t\t\t\t\t\t\trecord.propertyName !== record.alias\n\t\t\t\t\t\t\t\t\t\t? typescript.createImportSpecifier(typescript.createIdentifier(record.propertyName), typescript.createIdentifier(record.alias))\n\t\t\t\t\t\t\t\t\t\t: typescript.createImportSpecifier(undefined, typescript.createIdentifier(record.alias))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttypescript.createStringLiteral(ensureHasLeadingDotAndPosix(module))\n\t\t\t\t\t),\n\t\t\t\t\t{typescript}\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\treturn moduleToImportDeclarations;\n}\n","import {ensureHasLeadingDotAndPosix} from \"../../../../util/path/path-util\";\nimport {TS} from \"../../../../type/ts\";\nimport {preserveParents} from \"./clone-node-with-meta\";\n\nexport type MergedExportDeclarationsMap = Map<string | undefined, TS.ExportDeclaration[]>;\n\n/**\n * Merges the exports based on the given Statements\n */\nexport function getMergedExportDeclarationsForModules(sourceFile: TS.SourceFile, typescript: typeof TS): MergedExportDeclarationsMap {\n\tconst exports = sourceFile.statements.filter(typescript.isExportDeclaration);\n\tconst exportAssignments = sourceFile.statements.filter(typescript.isExportAssignment);\n\n\tconst moduleToExportDeclarations: MergedExportDeclarationsMap = new Map();\n\tconst moduleSpecifierToAliasedExportedBindings: Map<string | undefined, Map<string, Set<string>>> = new Map();\n\tconst namedNamespaceExportsFromModulesMap: Map<string, Set<string>> = new Map();\n\tconst reExportedSpecifiers = new Set<string | undefined>();\n\n\tfor (const exportAssignment of exportAssignments) {\n\t\tlet aliasedExportedBindings = moduleSpecifierToAliasedExportedBindings.get(undefined);\n\n\t\tif (aliasedExportedBindings == null) {\n\t\t\taliasedExportedBindings = new Map();\n\t\t\tmoduleSpecifierToAliasedExportedBindings.set(undefined, aliasedExportedBindings);\n\t\t}\n\n\t\t// If the Expression isn't an identifier, skip this ExportAssignment\n\t\tif (!typescript.isIdentifier(exportAssignment.expression)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst propertyName = exportAssignment.expression.text;\n\t\tconst alias = \"default\";\n\t\tlet setForExportedBinding = aliasedExportedBindings.get(propertyName);\n\t\tif (setForExportedBinding == null) {\n\t\t\tsetForExportedBinding = new Set();\n\t\t\taliasedExportedBindings.set(propertyName, setForExportedBinding);\n\t\t}\n\t\tsetForExportedBinding.add(alias);\n\t}\n\n\tfor (const exportDeclaration of exports) {\n\t\t// If the ModuleSpecifier is given and it isn't a string literal, leave it as it is\n\t\tif (exportDeclaration.moduleSpecifier != null && !typescript.isStringLiteralLike(exportDeclaration.moduleSpecifier)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst specifierText = exportDeclaration.moduleSpecifier?.text;\n\n\t\tlet aliasedExportedBindings = moduleSpecifierToAliasedExportedBindings.get(specifierText);\n\t\tlet namedNamespaceExports = specifierText == null ? undefined : namedNamespaceExportsFromModulesMap.get(specifierText);\n\n\t\tif (aliasedExportedBindings == null) {\n\t\t\taliasedExportedBindings = new Map();\n\t\t\tmoduleSpecifierToAliasedExportedBindings.set(specifierText, aliasedExportedBindings);\n\t\t}\n\n\t\tif (namedNamespaceExports == null && specifierText != null) {\n\t\t\tnamedNamespaceExports = new Set();\n\t\t\tnamedNamespaceExportsFromModulesMap.set(specifierText, namedNamespaceExports);\n\t\t}\n\n\t\tif (exportDeclaration.exportClause != null) {\n\t\t\tif (typescript.isNamedExports(exportDeclaration.exportClause)) {\n\t\t\t\t// Take all aliased exports\n\t\t\t\tfor (const element of exportDeclaration.exportClause.elements) {\n\t\t\t\t\tconst propertyName = element.propertyName != null ? element.propertyName.text : element.name.text;\n\t\t\t\t\tconst alias = element.name.text;\n\t\t\t\t\tlet setForExportedBinding = aliasedExportedBindings.get(propertyName);\n\t\t\t\t\tif (setForExportedBinding == null) {\n\t\t\t\t\t\tsetForExportedBinding = new Set();\n\t\t\t\t\t\taliasedExportedBindings.set(propertyName, setForExportedBinding);\n\t\t\t\t\t}\n\t\t\t\t\tsetForExportedBinding.add(alias);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Otherwise, it must be a named NamespaceExport (such as 'export * as Foo from \"...\"')\n\t\t\telse if (namedNamespaceExports != null) {\n\t\t\t\tnamedNamespaceExports.add(exportDeclaration.exportClause.name.text);\n\t\t\t}\n\t\t}\n\t\t// If it has no exportClause, it's a reexport (such as export * from \"./<specifier>\").\n\t\telse {\n\t\t\t// Don't include the same clause twice\n\t\t\tif (reExportedSpecifiers.has(specifierText)) continue;\n\t\t\treExportedSpecifiers.add(specifierText);\n\n\t\t\tlet exportDeclarationsForModule = moduleToExportDeclarations.get(specifierText);\n\t\t\tif (exportDeclarationsForModule == null) {\n\t\t\t\texportDeclarationsForModule = [];\n\t\t\t\tmoduleToExportDeclarations.set(specifierText, exportDeclarationsForModule);\n\t\t\t}\n\t\t\texportDeclarationsForModule.push(exportDeclaration);\n\t\t}\n\t}\n\n\tfor (const [specifier, exportedBindings] of moduleSpecifierToAliasedExportedBindings) {\n\t\tif (exportedBindings.size === 0) continue;\n\n\t\tconst exportSpecifiers: TS.ExportSpecifier[] = [];\n\t\tconst bindings = new Set<string>();\n\n\t\tfor (const [propertyName, aliases] of exportedBindings) {\n\t\t\tfor (const alias of aliases) {\n\t\t\t\t// If a binding, A, is exported already, it cannot be exported again.\n\t\t\t\tif (bindings.has(alias)) continue;\n\t\t\t\tbindings.add(alias);\n\n\t\t\t\tif (propertyName === alias) {\n\t\t\t\t\texportSpecifiers.push(typescript.createExportSpecifier(undefined, alias));\n\t\t\t\t} else {\n\t\t\t\t\texportSpecifiers.push(typescript.createExportSpecifier(propertyName, alias));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet exportDeclarationsForModule = moduleToExportDeclarations.get(specifier);\n\t\tif (exportDeclarationsForModule == null) {\n\t\t\texportDeclarationsForModule = [];\n\t\t\tmoduleToExportDeclarations.set(specifier, exportDeclarationsForModule);\n\t\t}\n\t\texportDeclarationsForModule.push(\n\t\t\tpreserveParents(\n\t\t\t\ttypescript.createExportDeclaration(\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttypescript.createNamedExports(exportSpecifiers),\n\t\t\t\t\tspecifier == null ? undefined : typescript.createStringLiteral(ensureHasLeadingDotAndPosix(specifier))\n\t\t\t\t),\n\t\t\t\t{typescript}\n\t\t\t)\n\t\t);\n\t}\n\n\t// Add all named namespace exports from the module (They may have different local names)\n\tfor (const [specifier, names] of namedNamespaceExportsFromModulesMap) {\n\t\tlet exportDeclarationsForModule = moduleToExportDeclarations.get(specifier);\n\t\tif (exportDeclarationsForModule == null) {\n\t\t\texportDeclarationsForModule = [];\n\t\t\tmoduleToExportDeclarations.set(specifier, exportDeclarationsForModule);\n\t\t}\n\n\t\tfor (const name of names) {\n\t\t\texportDeclarationsForModule.push(\n\t\t\t\tpreserveParents(\n\t\t\t\t\ttypescript.createExportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttypescript.createNamespaceExport(typescript.createIdentifier(name)),\n\t\t\t\t\t\ttypescript.createStringLiteral(ensureHasLeadingDotAndPosix(specifier))\n\t\t\t\t\t),\n\t\t\t\t\t{typescript}\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\treturn moduleToExportDeclarations;\n}\n","import {TS} from \"../../../../../type/ts\";\nimport {StatementMergerVisitorOptions} from \"./statement-merger-visitor-options\";\nimport {visitNode} from \"./visitor/visit-node\";\nimport {getMergedImportDeclarationsForModules} from \"../../util/get-merged-import-declarations-for-modules\";\nimport {getMergedExportDeclarationsForModules} from \"../../util/get-merged-export-declarations-for-modules\";\nimport {shouldDebugMetrics, shouldDebugSourceFile} from \"../../../../../util/is-debug/should-debug\";\nimport {hasExportModifier} from \"../../util/modifier-util\";\nimport {logMetrics} from \"../../../../../util/logging/log-metrics\";\nimport {logTransformer} from \"../../../../../util/logging/log-transformer\";\nimport {preserveMeta} from \"../../util/clone-node-with-meta\";\nimport {DeclarationTransformer} from \"../../declaration-bundler-options\";\nimport {StatementMergerOptions} from \"./statement-merger-options\";\n\nexport function statementMerger({markAsModuleIfNeeded}: StatementMergerOptions): DeclarationTransformer {\n\treturn options => {\n\t\tconst {typescript, context, sourceFile, pluginOptions, printer} = options;\n\n\t\tconst fullBenchmark = shouldDebugMetrics(pluginOptions.debug, sourceFile) ? logMetrics(`Statement merging`, sourceFile.fileName) : undefined;\n\n\t\tconst transformationLog = shouldDebugSourceFile(pluginOptions.debug, sourceFile) ? logTransformer(\"Statement merging\", sourceFile, printer) : undefined;\n\n\t\t// Merge all of the imports\n\t\tconst mergedImports = getMergedImportDeclarationsForModules(sourceFile, typescript);\n\t\tconst mergedExports = getMergedExportDeclarationsForModules(sourceFile, typescript);\n\t\tconst includedImportedModules = new Set<string>();\n\t\tconst includedExportedModules = new Set<string | undefined>();\n\n\t\t// Prepare some VisitorOptions\n\t\tconst visitorOptions: Omit<StatementMergerVisitorOptions<TS.Node>, \"node\"> = {\n\t\t\t...options,\n\n\t\t\tpreserveImportedModuleIfNeeded(module: string): TS.ImportDeclaration[] | undefined {\n\t\t\t\tif (includedImportedModules.has(module)) return undefined;\n\t\t\t\tincludedImportedModules.add(module);\n\t\t\t\treturn mergedImports.get(module);\n\t\t\t},\n\n\t\t\tpreserveExportedModuleIfNeeded(module: string | undefined): TS.ExportDeclaration[] | undefined {\n\t\t\t\tif (includedExportedModules.has(module)) return undefined;\n\t\t\t\tincludedExportedModules.add(module);\n\t\t\t\treturn mergedExports.get(module);\n\t\t\t},\n\n\t\t\tchildContinuation: <U extends TS.Node>(node: U): U | undefined =>\n\t\t\t\ttypescript.visitEachChild(\n\t\t\t\t\tnode,\n\t\t\t\t\tnextNode =>\n\t\t\t\t\t\tvisitNode({\n\t\t\t\t\t\t\t...visitorOptions,\n\t\t\t\t\t\t\tnode: nextNode\n\t\t\t\t\t\t}),\n\t\t\t\t\tcontext\n\t\t\t\t),\n\n\t\t\tcontinuation: <U extends TS.Node>(node: U): U | undefined =>\n\t\t\t\tvisitNode({\n\t\t\t\t\t...visitorOptions,\n\t\t\t\t\tnode\n\t\t\t\t}) as U | undefined\n\t\t};\n\n\t\tlet result = typescript.visitEachChild(sourceFile, nextNode => visitorOptions.continuation(nextNode), context);\n\t\tconst importDeclarations = result.statements.filter(typescript.isImportDeclaration);\n\t\tconst exportDeclarations = result.statements.filter(statement => typescript.isExportDeclaration(statement) || typescript.isExportAssignment(statement));\n\t\tconst statementsWithExportModifier = result.statements.filter(statement => hasExportModifier(statement, typescript));\n\n\t\tconst otherStatements = result.statements.filter(\n\t\t\tstatement => !typescript.isImportDeclaration(statement) && !typescript.isExportDeclaration(statement) && !typescript.isExportAssignment(statement)\n\t\t);\n\t\tconst importExportCount = importDeclarations.length + exportDeclarations.length + statementsWithExportModifier.length;\n\n\t\tresult = preserveMeta(\n\t\t\ttypescript.updateSourceFileNode(\n\t\t\t\tresult,\n\t\t\t\t[\n\t\t\t\t\t...importDeclarations,\n\t\t\t\t\t...otherStatements,\n\t\t\t\t\t...exportDeclarations,\n\t\t\t\t\t...(importExportCount === 0 && markAsModuleIfNeeded\n\t\t\t\t\t\t? // Create an 'export {}' declaration to mark the declaration file as module-based if it has no imports or exports\n\t\t\t\t\t\t  [typescript.createExportDeclaration(undefined, undefined, typescript.createNamedExports([]))]\n\t\t\t\t\t\t: [])\n\t\t\t\t],\n\t\t\t\tresult.isDeclarationFile,\n\t\t\t\tresult.referencedFiles,\n\t\t\t\tresult.typeReferenceDirectives,\n\t\t\t\tresult.hasNoDefaultLib,\n\t\t\t\tresult.libReferenceDirectives\n\t\t\t),\n\t\t\tresult,\n\t\t\toptions\n\t\t);\n\n\t\ttransformationLog?.finish(result);\n\t\tfullBenchmark?.finish();\n\n\t\treturn result;\n\t};\n}\n","import {ModuleMergerVisitorOptions, VisitResult} from \"../module-merger-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {generateModuleSpecifier} from \"../../../util/generate-module-specifier\";\nimport {preserveMeta, preserveParents, preserveSymbols} from \"../../../util/clone-node-with-meta\";\nimport {ensureHasDeclareModifier} from \"../../../util/modifier-util\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {ensureNoDeclareModifierTransformer} from \"../../ensure-no-declare-modifier-transformer/ensure-no-declare-modifier-transformer\";\nimport {statementMerger} from \"../../statement-merger/statement-merger\";\n\nexport interface GenerateExportDeclarationsOptions extends Omit<ModuleMergerVisitorOptions<TS.ExportDeclaration>, \"node\"> {}\n\nfunction generateExportDeclarations(options: GenerateExportDeclarationsOptions, exportDeclarations: TS.ExportDeclaration[] = []): TS.ExportDeclaration[] {\n\tconst {sourceFile, sourceFileToExportedSymbolSet, typescript} = options;\n\tconst exportedSymbols = sourceFileToExportedSymbolSet.get(sourceFile.fileName) ?? [];\n\tfor (const symbol of exportedSymbols) {\n\t\tconst matchingSourceFile = symbol.moduleSpecifier == null ? undefined : options.getMatchingSourceFile(symbol.moduleSpecifier, sourceFile);\n\t\tconst generatedModuleSpecifier =\n\t\t\tsymbol.moduleSpecifier == null\n\t\t\t\t? undefined\n\t\t\t\t: generateModuleSpecifier({\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\tfrom: sourceFile.fileName,\n\t\t\t\t\t\tmoduleSpecifier: symbol.moduleSpecifier\n\t\t\t\t  });\n\n\t\t// If it is a NamespaceExport, we may need to recursively add all exports for the referenced SourceFiles\n\t\tif (\"isNamespaceExport\" in symbol) {\n\t\t\t// If no SourceFile was matched, add the Namespace Export directly.\n\t\t\t// If the generated moduleSpecifier is null, that's because it is a self-reference, in which case the 'export *' declaration must be skipped\n\t\t\t// in favor of all other named export bindings that will included anyway\n\t\t\tif (matchingSourceFile == null && generatedModuleSpecifier != null) {\n\t\t\t\texportDeclarations.push(\n\t\t\t\t\tpreserveParents(typescript.createExportDeclaration(undefined, undefined, undefined, typescript.createStringLiteral(generatedModuleSpecifier)), {typescript})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Otherwise, recursively add all exports for the reexported module\n\t\t\telse if (matchingSourceFile != null) {\n\t\t\t\tgenerateExportDeclarations(\n\t\t\t\t\t{\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\tsourceFile: matchingSourceFile\n\t\t\t\t\t},\n\t\t\t\t\texportDeclarations\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise, we can just add an ExportDeclaration with an ExportSpecifier\n\t\telse {\n\t\t\tconst exportSpecifier = typescript.createExportSpecifier(\n\t\t\t\tsymbol.propertyName.text === symbol.name.text ? undefined : typescript.createIdentifier(symbol.propertyName.text),\n\t\t\t\ttypescript.createIdentifier(symbol.name.text)\n\t\t\t);\n\n\t\t\texportDeclarations.push(\n\t\t\t\tpreserveParents(\n\t\t\t\t\ttypescript.createExportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttypescript.createNamedExports([exportSpecifier]),\n\t\t\t\t\t\tsymbol.moduleSpecifier == null || generatedModuleSpecifier == null || matchingSourceFile != null ? undefined : typescript.createStringLiteral(generatedModuleSpecifier)\n\t\t\t\t\t),\n\t\t\t\t\t{typescript}\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst propertyName = exportSpecifier.propertyName ?? exportSpecifier.name;\n\t\t\tpreserveSymbols(propertyName, symbol.propertyName ?? symbol.name, options);\n\t\t}\n\t}\n\treturn exportDeclarations;\n}\n\nexport function visitExportDeclaration(options: ModuleMergerVisitorOptions<TS.ExportDeclaration>): VisitResult<TS.ExportDeclaration> {\n\tconst {node, typescript} = options;\n\tconst moduleSpecifier = node.moduleSpecifier == null || !typescript.isStringLiteralLike(node.moduleSpecifier) ? undefined : node.moduleSpecifier.text;\n\tconst updatedModuleSpecifier =\n\t\tmoduleSpecifier == null\n\t\t\t? undefined\n\t\t\t: generateModuleSpecifier({\n\t\t\t\t\t...options,\n\t\t\t\t\tfrom: options.sourceFile.fileName,\n\t\t\t\t\tmoduleSpecifier\n\t\t\t  });\n\n\tconst matchingSourceFile = moduleSpecifier == null ? undefined : options.getMatchingSourceFile(moduleSpecifier, options.sourceFile);\n\n\tconst payload = {\n\t\tmoduleSpecifier,\n\t\tmatchingSourceFile\n\t};\n\n\tconst contResult = options.childContinuation(node, payload);\n\n\t// If no SourceFile was resolved\n\tif (matchingSourceFile == null) {\n\t\t// If the module specifier didn't change, preserve the export as it is.\n\t\tif (moduleSpecifier === updatedModuleSpecifier || updatedModuleSpecifier == null) {\n\t\t\treturn contResult;\n\t\t}\n\n\t\t// Otherwise, update the module specifier\n\t\treturn preserveMeta(\n\t\t\ttypescript.updateExportDeclaration(\n\t\t\t\tcontResult,\n\t\t\t\tcontResult.decorators,\n\t\t\t\tcontResult.modifiers,\n\t\t\t\tcontResult.exportClause,\n\t\t\t\ttypescript.createStringLiteral(updatedModuleSpecifier),\n\t\t\t\tcontResult.isTypeOnly\n\t\t\t),\n\t\t\tcontResult,\n\t\t\toptions\n\t\t);\n\t}\n\n\t// If it is a binding-less NamespaceExport (such as 'export * from \"...\"), we'll need to add explicit named ExportSpecifiers for all of the re-exported bindings instead\n\tif (contResult.exportClause == null) {\n\t\toptions.prependNodes(...options.includeSourceFile(matchingSourceFile));\n\t\treturn generateExportDeclarations({\n\t\t\t...options,\n\t\t\ttypescript,\n\t\t\tsourceFile: matchingSourceFile\n\t\t});\n\t}\n\n\t// Otherwise, it if is a named NamespaceExport (such as 'export * as Foo from \"..\"), we can't just lose the module specifier since 'export * as Foo' isn't valid.\n\t// Instead, we must declare inline the namespace and add an ExportDeclaration with a named export for it\n\telse if (typescript.isNamespaceExport?.(contResult.exportClause)) {\n\t\t// Otherwise, prepend the nodes for the SourceFile in a namespace declaration\n\t\toptions.prependNodes(\n\t\t\tpreserveParents(\n\t\t\t\toptions.typescript.createModuleDeclaration(\n\t\t\t\t\tundefined,\n\t\t\t\t\tensureHasDeclareModifier(undefined, options.typescript),\n\t\t\t\t\toptions.typescript.createIdentifier(contResult.exportClause.name.text),\n\t\t\t\t\toptions.typescript.createModuleBlock([\n\t\t\t\t\t\t...options.includeSourceFile(matchingSourceFile, {\n\t\t\t\t\t\t\tallowDuplicate: true,\n\t\t\t\t\t\t\tlexicalEnvironment: cloneLexicalEnvironment(),\n\t\t\t\t\t\t\ttransformers: [ensureNoDeclareModifierTransformer, statementMerger({markAsModuleIfNeeded: false})]\n\t\t\t\t\t\t})\n\t\t\t\t\t]),\n\t\t\t\t\toptions.typescript.NodeFlags.Namespace\n\t\t\t\t),\n\t\t\t\toptions\n\t\t\t),\n\t\t\tpreserveParents(\n\t\t\t\toptions.typescript.createExportDeclaration(\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttypescript.createNamedExports([typescript.createExportSpecifier(undefined, typescript.createIdentifier(contResult.exportClause.name.text))]),\n\t\t\t\t\tundefined,\n\t\t\t\t\tcontResult.isTypeOnly\n\t\t\t\t),\n\t\t\t\toptions\n\t\t\t)\n\t\t);\n\t}\n\n\t// Otherwise, preserve the continuation result, but without the ModuleSpecifier\n\treturn preserveMeta(\n\t\ttypescript.updateExportDeclaration(contResult, contResult.decorators, contResult.modifiers, contResult.exportClause, undefined, contResult.isTypeOnly),\n\t\tcontResult,\n\t\toptions\n\t);\n}\n","import {basename, stripKnownExtension} from \"../../../../util/path/path-util\";\nimport {camelCase} from \"@wessberg/stringutil\";\n\nexport type GenerateIdentifierNameHint = \"class\" | \"namespace\" | \"function\";\n\nfunction generateHintSuffix(hint: GenerateIdentifierNameHint): string {\n\tswitch (hint) {\n\t\tcase \"class\":\n\t\t\treturn \"Class\";\n\t\tcase \"function\":\n\t\t\treturn \"Func\";\n\t\tcase \"namespace\":\n\t\t\treturn \"NS\";\n\t}\n}\n\n/**\n * Generates an identifier based on the given module name\n */\nexport function generateIdentifierName(module: string, hint: GenerateIdentifierNameHint): string {\n\treturn `${camelCase(stripKnownExtension(basename(module)))}${generateHintSuffix(hint)}`;\n}\n","import {SafeNode} from \"../../../../type/safe-node\";\n\nexport function getParentNode<T extends SafeNode>(node: T): T[\"parent\"] {\n\tif (node._parent != null) {\n\t\treturn node._parent as T[\"parent\"];\n\t}\n\n\treturn node.parent;\n}\n\nexport function setParentNode<T extends SafeNode>(node: T, parentNode: T[\"parent\"]): T {\n\tnode._parent = parentNode;\n\treturn node;\n}\n","import {ModuleMergerVisitorOptions, VisitResult} from \"../module-merger-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {ensureNoDeclareModifierTransformer} from \"../../ensure-no-declare-modifier-transformer/ensure-no-declare-modifier-transformer\";\nimport {ensureHasDeclareModifier} from \"../../../util/modifier-util\";\nimport {generateIdentifierName} from \"../../../util/generate-identifier-name\";\nimport {generateModuleSpecifier} from \"../../../util/generate-module-specifier\";\nimport {preserveMeta, preserveParents, preserveSymbols} from \"../../../util/clone-node-with-meta\";\nimport {statementMerger} from \"../../statement-merger/statement-merger\";\nimport {getParentNode, setParentNode} from \"../../../util/get-parent-node\";\n\nexport function visitImportTypeNode(options: ModuleMergerVisitorOptions<TS.ImportTypeNode>): VisitResult<TS.ImportTypeNode> {\n\tconst {node} = options;\n\tconst moduleSpecifier =\n\t\t!options.typescript.isLiteralTypeNode(node.argument) || !options.typescript.isStringLiteralLike(node.argument.literal) ? undefined : node.argument.literal.text;\n\n\tconst matchingSourceFile = moduleSpecifier == null ? undefined : options.getMatchingSourceFile(moduleSpecifier, options.sourceFile);\n\tconst payload = {\n\t\tmoduleSpecifier,\n\t\tmatchingSourceFile\n\t};\n\n\tif (payload.moduleSpecifier == null) return options.childContinuation(node, payload);\n\tconst contResult = options.childContinuation(node, payload);\n\n\t// If no SourceFile was resolved, preserve the export as it is.\n\tif (matchingSourceFile == null) {\n\t\tconst generatedModuleSpecifier =\n\t\t\tmoduleSpecifier == null\n\t\t\t\t? undefined\n\t\t\t\t: generateModuleSpecifier({\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\tfrom: options.sourceFile.fileName,\n\t\t\t\t\t\tmoduleSpecifier\n\t\t\t\t  });\n\t\treturn generatedModuleSpecifier == null\n\t\t\t? contResult\n\t\t\t: preserveMeta(\n\t\t\t\t\toptions.typescript.updateImportTypeNode(\n\t\t\t\t\t\tcontResult,\n\t\t\t\t\t\toptions.typescript.createLiteralTypeNode(options.typescript.createStringLiteral(generatedModuleSpecifier)),\n\t\t\t\t\t\tcontResult.qualifier,\n\t\t\t\t\t\tcontResult.typeArguments,\n\t\t\t\t\t\tcontResult.isTypeOf\n\t\t\t\t\t),\n\t\t\t\t\tnode,\n\t\t\t\t\toptions\n\t\t\t  );\n\t}\n\n\tlet returnNode: TS.TypeQueryNode | TS.TypeReferenceNode | TS.Identifier | TS.QualifiedName;\n\n\t// If the node has no qualifier, it imports the entire module as a namespace.\n\tif (contResult.qualifier == null) {\n\t\t// Generate a name for it\n\t\tconst namespaceName = generateIdentifierName(matchingSourceFile.fileName, \"namespace\");\n\t\tconst innerContent = options.typescript.createIdentifier(namespaceName);\n\n\t\toptions.prependNodes(\n\t\t\tpreserveParents(\n\t\t\t\toptions.typescript.createModuleDeclaration(\n\t\t\t\t\tundefined,\n\t\t\t\t\tensureHasDeclareModifier(undefined, options.typescript),\n\t\t\t\t\toptions.typescript.createIdentifier(namespaceName),\n\t\t\t\t\toptions.typescript.createModuleBlock([\n\t\t\t\t\t\t...options.includeSourceFile(matchingSourceFile, {\n\t\t\t\t\t\t\tallowDuplicate: true,\n\t\t\t\t\t\t\tlexicalEnvironment: cloneLexicalEnvironment(),\n\t\t\t\t\t\t\ttransformers: [ensureNoDeclareModifierTransformer, statementMerger({markAsModuleIfNeeded: false})]\n\t\t\t\t\t\t})\n\t\t\t\t\t]),\n\t\t\t\t\toptions.typescript.NodeFlags.Namespace\n\t\t\t\t),\n\t\t\t\toptions\n\t\t\t)\n\t\t);\n\n\t\treturnNode = contResult.isTypeOf != null && contResult.isTypeOf ? options.typescript.createTypeQueryNode(innerContent) : innerContent;\n\t} else {\n\t\toptions.prependNodes(...options.includeSourceFile(matchingSourceFile));\n\n\t\treturnNode =\n\t\t\tcontResult.isTypeOf != null && contResult.isTypeOf\n\t\t\t\t? options.typescript.createTypeQueryNode(contResult.qualifier)\n\t\t\t\t: options.typescript.createTypeReferenceNode(contResult.qualifier, contResult.typeArguments);\n\t}\n\n\tpreserveSymbols(returnNode, contResult.qualifier ?? contResult, options);\n\tsetParentNode(returnNode, getParentNode(node));\n\treturn returnNode;\n}\n","import {ModuleMergerVisitorOptions, VisitResult} from \"../module-merger-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {generateModuleSpecifier} from \"../../../util/generate-module-specifier\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\nexport function visitImportDeclaration(options: ModuleMergerVisitorOptions<TS.ImportDeclaration>): VisitResult<TS.ImportDeclaration> {\n\tconst {node, typescript} = options;\n\tconst moduleSpecifier = node.moduleSpecifier == null || !options.typescript.isStringLiteralLike(node.moduleSpecifier) ? undefined : node.moduleSpecifier.text;\n\tconst updatedModuleSpecifier =\n\t\tmoduleSpecifier == null\n\t\t\t? undefined\n\t\t\t: generateModuleSpecifier({\n\t\t\t\t\t...options,\n\t\t\t\t\tfrom: options.sourceFile.fileName,\n\t\t\t\t\tmoduleSpecifier\n\t\t\t  });\n\n\tconst matchingSourceFile = moduleSpecifier == null ? undefined : options.getMatchingSourceFile(moduleSpecifier, options.sourceFile);\n\n\tconst payload = {\n\t\tmoduleSpecifier,\n\t\tmatchingSourceFile\n\t};\n\n\tconst contResult = options.childContinuation(node, payload);\n\n\tif (contResult.importClause == null) {\n\t\t// Don't allow moduleSpecifier-only imports inside ambient modules\n\t\treturn undefined;\n\t}\n\n\t// If the module specifier is to be preserved as it is, just return the continuation result\n\tif (moduleSpecifier === updatedModuleSpecifier || updatedModuleSpecifier == null) {\n\t\treturn contResult;\n\t}\n\n\t// Otherwise, update the ModuleSpecifier\n\treturn preserveMeta(\n\t\ttypescript.updateImportDeclaration(contResult, contResult.decorators, contResult.modifiers, contResult.importClause, typescript.createStringLiteral(updatedModuleSpecifier)),\n\t\tcontResult,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../type/ts\";\nimport {SourceFileBundlerVisitorOptions} from \"../transformers/source-file-bundler/source-file-bundler-visitor-options\";\nimport {getSymbolAtLocation, GetSymbolAtLocationOptions} from \"./get-symbol-at-location\";\nimport {getParentNode} from \"./get-parent-node\";\nimport {isSameChunk} from \"./generate-module-specifier\";\n\nexport interface GetAliasedDeclarationOptions extends SourceFileBundlerVisitorOptions {\n\tnode: TS.Expression | TS.Symbol | TS.Declaration | TS.QualifiedName | TS.TypeNode | undefined;\n}\n\nexport function getDeclarationFromSymbol(symbol: TS.Symbol): (TS.Declaration & {id: number}) | undefined {\n\tconst valueDeclaration = symbol.valueDeclaration != null ? symbol.valueDeclaration : symbol.declarations != null ? symbol.declarations[0] : undefined;\n\treturn valueDeclaration as TS.Declaration & {id: number};\n}\n\nexport function getAliasedDeclarationFromSymbol(symbol: TS.Symbol, typeChecker: TS.TypeChecker): (TS.Declaration & {id: number}) | undefined {\n\tlet valueDeclaration = getDeclarationFromSymbol(symbol);\n\ttry {\n\t\tconst aliasedDeclaration = typeChecker.getAliasedSymbol(symbol);\n\t\tif (aliasedDeclaration != null && (aliasedDeclaration.valueDeclaration != null || (aliasedDeclaration.declarations != null && aliasedDeclaration.declarations.length > 0))) {\n\t\t\tvalueDeclaration = (aliasedDeclaration.valueDeclaration != null\n\t\t\t\t? aliasedDeclaration.valueDeclaration\n\t\t\t\t: symbol.declarations != null\n\t\t\t\t? aliasedDeclaration.declarations[0]\n\t\t\t\t: undefined) as (TS.Declaration & {id: number}) | undefined;\n\t\t}\n\t} catch {}\n\n\treturn valueDeclaration;\n}\n\nexport function isSymbol(node: TS.Node | TS.Symbol): node is TS.Symbol {\n\treturn \"valueDeclaration\" in node || \"declarations\" in node;\n}\n\n/**\n * Gets the Declaration for the given Expression\n */\nexport function getAliasedDeclaration(options: GetSymbolAtLocationOptions): (TS.Declaration & {id: number}) | undefined {\n\tconst {node, typeChecker} = options;\n\tlet symbol: TS.Symbol | undefined;\n\ttry {\n\t\tsymbol = node == null ? undefined : isSymbol(node) ? node : getSymbolAtLocation({...options, node});\n\t} catch {\n\t\t// Typescript couldn't produce a symbol for the Node\n\t}\n\n\tif (symbol == null) return undefined;\n\treturn getAliasedDeclarationFromSymbol(symbol, typeChecker);\n}\n\n/**\n * Gets the Declaration for the given Expression\n */\nexport function getDeclaration(options: GetSymbolAtLocationOptions): (TS.Declaration & {id: number}) | undefined {\n\tconst {node} = options;\n\tlet symbol: TS.Symbol | undefined;\n\ttry {\n\t\tsymbol = node == null ? undefined : isSymbol(node) ? node : getSymbolAtLocation({...options, node});\n\t} catch {\n\t\t// Typescript couldn't produce a symbol for the Node\n\t}\n\n\tif (symbol == null) return undefined;\n\treturn getDeclarationFromSymbol(symbol);\n}\n\n/**\n * In general, the \"best\" declaration is the non-aliased one, with the exception of import bindings that have been inlined in the chunk, in which case the actual declaration should be resolved and used.\n * This is where getAliasedDeclaration comes in handy.\n */\nexport function getBestDeclaration(options: GetAliasedDeclarationOptions & GetSymbolAtLocationOptions): (TS.Declaration & {id: number}) | undefined {\n\tconst declaration = getDeclaration(options);\n\tif (declaration == null) return declaration;\n\n\tlet moduleSpecifier: TS.Expression | undefined;\n\tif (options.typescript.isImportSpecifier(declaration)) {\n\t\tmoduleSpecifier = getParentNode(getParentNode(getParentNode(declaration))).moduleSpecifier;\n\t} else if (options.typescript.isNamespaceImport(declaration)) {\n\t\tmoduleSpecifier = getParentNode(getParentNode(declaration)).moduleSpecifier;\n\t} else if (options.typescript.isImportClause(declaration)) {\n\t\tmoduleSpecifier = getParentNode(declaration).moduleSpecifier;\n\t} else if (options.typescript.isIdentifier(declaration) && getParentNode(declaration) != null && options.typescript.isImportClause(getParentNode(declaration))) {\n\t\tmoduleSpecifier = getParentNode(getParentNode(declaration) as TS.ImportClause).moduleSpecifier;\n\t}\n\n\tif (moduleSpecifier == null || !options.typescript.isStringLiteralLike(moduleSpecifier)) {\n\t\treturn declaration;\n\t}\n\n\tif (options.typescript.isStringLiteralLike(moduleSpecifier)) {\n\t\tif (isSameChunk({...options, moduleSpecifier: moduleSpecifier.text, from: options.sourceFile.fileName})) {\n\t\t\treturn getAliasedDeclaration(options);\n\t\t}\n\t}\n\n\treturn declaration;\n}\n","import {LexicalEnvironment} from \"../transformers/deconflicter/deconflicter-options\";\n\nexport const DECONFLICT_SUFFIX = \"$\";\n\nexport function generateUniqueBinding(lexicalEnvironment: LexicalEnvironment, candidate: string): string {\n\tlet counter = -1;\n\n\tif (lexicalEnvironment.bindings.has(candidate)) {\n\t\tconst {value} = lexicalEnvironment.bindings.get(candidate)!;\n\n\t\t// If the bound value isn't identical to the candidate, it has been deconflicted previously.\n\t\t// Start from this value instead\n\t\tif (value !== candidate) {\n\t\t\tcounter = parseInt(value.slice(candidate.length + DECONFLICT_SUFFIX.length));\n\t\t}\n\n\t\treturn `${candidate}${DECONFLICT_SUFFIX}${counter + 1}`;\n\t}\n\n\tif (lexicalEnvironment.parent == null) {\n\t\treturn candidate;\n\t}\n\n\treturn generateUniqueBinding(lexicalEnvironment.parent, candidate);\n}\n","import {TS} from \"../../../../type/ts\";\nimport {ensureHasDeclareModifier} from \"./modifier-util\";\nimport {getAliasedDeclarationFromSymbol, isSymbol} from \"./get-aliased-declaration\";\nimport {LexicalEnvironment} from \"../transformers/deconflicter/deconflicter-options\";\nimport {generateUniqueBinding} from \"./generate-unique-binding\";\nimport {preserveParents} from \"./clone-node-with-meta\";\n\nexport function createAliasedBinding(\n\tnode: TS.Node | TS.Symbol | undefined,\n\tpropertyName: string,\n\tname: string,\n\ttypescript: typeof TS,\n\ttypeChecker: TS.TypeChecker,\n\tlexicalEnvironment: LexicalEnvironment\n): (TS.ImportDeclaration | TS.TypeAliasDeclaration | TS.VariableStatement | TS.ModuleDeclaration | TS.ImportEqualsDeclaration)[] {\n\tconst declaration = node != null && isSymbol(node) ? getAliasedDeclarationFromSymbol(node, typeChecker) : node;\n\tconst moduleBinding = generateUniqueBinding(lexicalEnvironment, `${propertyName}Wrapper`);\n\tswitch (declaration?.kind) {\n\t\tcase typescript.SyntaxKind.ClassDeclaration:\n\t\tcase typescript.SyntaxKind.ClassExpression: {\n\t\t\treturn [\n\t\t\t\tpreserveParents(\n\t\t\t\t\ttypescript.createModuleDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttypescript.createIdentifier(moduleBinding),\n\t\t\t\t\t\ttypescript.createModuleBlock([\n\t\t\t\t\t\t\ttypescript.createExportDeclaration(\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\ttypescript.createNamedExports([typescript.createExportSpecifier(undefined, typescript.createIdentifier(propertyName))])\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t])\n\t\t\t\t\t),\n\t\t\t\t\t{typescript}\n\t\t\t\t),\n\n\t\t\t\tpreserveParents(\n\t\t\t\t\ttypescript.createImportEqualsDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttypescript.createIdentifier(name),\n\t\t\t\t\t\ttypescript.createQualifiedName(typescript.createIdentifier(moduleBinding), typescript.createIdentifier(propertyName))\n\t\t\t\t\t),\n\t\t\t\t\t{typescript}\n\t\t\t\t)\n\t\t\t];\n\t\t}\n\t\tcase typescript.SyntaxKind.FunctionDeclaration:\n\t\tcase typescript.SyntaxKind.FunctionExpression:\n\t\tcase typescript.SyntaxKind.EnumDeclaration:\n\t\tcase typescript.SyntaxKind.VariableDeclaration:\n\t\tcase typescript.SyntaxKind.VariableStatement:\n\t\tcase typescript.SyntaxKind.ExportAssignment: {\n\t\t\treturn [\n\t\t\t\tpreserveParents(\n\t\t\t\t\ttypescript.createVariableStatement(\n\t\t\t\t\t\tensureHasDeclareModifier(undefined, typescript),\n\t\t\t\t\t\ttypescript.createVariableDeclarationList(\n\t\t\t\t\t\t\t[typescript.createVariableDeclaration(typescript.createIdentifier(name), typescript.createTypeQueryNode(typescript.createIdentifier(propertyName)))],\n\t\t\t\t\t\t\ttypescript.NodeFlags.Const\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\t{typescript}\n\t\t\t\t)\n\t\t\t];\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn [\n\t\t\t\tpreserveParents(\n\t\t\t\t\ttypescript.createTypeAliasDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttypescript.createIdentifier(name),\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttypescript.createTypeReferenceNode(typescript.createIdentifier(propertyName), undefined)\n\t\t\t\t\t),\n\t\t\t\t\t{typescript}\n\t\t\t\t)\n\t\t\t];\n\t\t}\n\t}\n}\n","import {NamedExportedSymbol, NamespaceExportedSymbol, SourceFileToExportedSymbolSet} from \"../transformers/track-exports-transformer/track-exports-transformer-visitor-options\";\nimport {CompilerHost} from \"../../../compiler-host/compiler-host\";\nimport {SourceFileResolver} from \"../transformers/source-file-bundler/source-file-bundler-visitor-options\";\n\nexport interface LocateExportedSymbolContext {\n\thost: CompilerHost;\n\tresolveSourceFile: SourceFileResolver;\n\tsourceFileToExportedSymbolSet: SourceFileToExportedSymbolSet;\n\tsourceFile: string;\n}\n\nexport interface LocateExportedSymbolOptionsBase {\n\tmoduleSpecifier?: string;\n}\n\nexport interface LocateDefaultNamedExportedSymbolOptions extends LocateExportedSymbolOptionsBase {\n\tdefaultExport: true;\n}\n\nexport interface LocateNamedExportedSymbolOptions extends LocateExportedSymbolOptionsBase {\n\tdefaultExport: false;\n\tname?: string;\n\tpropertyName?: string;\n}\n\nexport interface LocateNamespaceExportedSymbolOptions extends LocateExportedSymbolOptionsBase {\n\tnamespaceExport: true;\n}\n\nexport type LocateExportedSymbolOptions = LocateNamespaceExportedSymbolOptions | LocateNamedExportedSymbolOptions | LocateDefaultNamedExportedSymbolOptions;\n\nexport function locateExportedSymbolForSourceFile(\n\toptions: LocateDefaultNamedExportedSymbolOptions,\n\tcontext: LocateExportedSymbolContext,\n\tseenSourceFiles?: Set<string>\n): (NamedExportedSymbol & {isDefaultExport: true}) | undefined;\nexport function locateExportedSymbolForSourceFile(\n\toptions: LocateNamedExportedSymbolOptions,\n\tcontext: LocateExportedSymbolContext,\n\tseenSourceFiles?: Set<string>\n): (NamedExportedSymbol & {isDefaultExport: false}) | undefined;\nexport function locateExportedSymbolForSourceFile(\n\toptions: LocateNamespaceExportedSymbolOptions,\n\tcontext: LocateExportedSymbolContext,\n\tseenSourceFiles?: Set<string>\n): NamespaceExportedSymbol | undefined;\nexport function locateExportedSymbolForSourceFile(\n\toptions: LocateExportedSymbolOptions,\n\tcontext: LocateExportedSymbolContext,\n\tseenSourceFiles?: Set<string>\n): (NamedExportedSymbol & {isDefaultExport: boolean}) | NamespaceExportedSymbol | undefined;\nexport function locateExportedSymbolForSourceFile(\n\toptions: LocateExportedSymbolOptions,\n\tcontext: LocateExportedSymbolContext,\n\tseenSourceFiles: Set<string> = new Set()\n): (NamedExportedSymbol & {isDefaultExport: boolean}) | NamespaceExportedSymbol | undefined {\n\tseenSourceFiles.add(context.sourceFile);\n\tconst exportedSymbols = context.sourceFileToExportedSymbolSet.get(context.sourceFile);\n\tif (exportedSymbols == null) return undefined;\n\tconst exportedSymbolsArr = [...exportedSymbols];\n\n\tif (\"defaultExport\" in options && options.defaultExport) {\n\t\treturn exportedSymbolsArr.find(\n\t\t\texportedSymbol =>\n\t\t\t\t\"isDefaultExport\" in exportedSymbol && exportedSymbol.isDefaultExport && (!(\"moduleSpecifier\" in options) || exportedSymbol.moduleSpecifier === options.moduleSpecifier)\n\t\t);\n\t}\n\n\tif (\"namespaceExport\" in options) {\n\t\treturn exportedSymbolsArr.find(\n\t\t\texportedSymbol => \"isNamespaceExport\" in exportedSymbol && (!(\"moduleSpecifier\" in options) || exportedSymbol.moduleSpecifier === options.moduleSpecifier)\n\t\t);\n\t} else {\n\t\tconst matchedNamedExport = exportedSymbolsArr.find(\n\t\t\texportedSymbol =>\n\t\t\t\t\"isDefaultExport\" in exportedSymbol &&\n\t\t\t\t!exportedSymbol.isDefaultExport &&\n\t\t\t\t(!(\"name\" in options) || exportedSymbol.name.text === options.name) &&\n\t\t\t\t(!(\"propertyName\" in options) || exportedSymbol.propertyName.text === options.propertyName) &&\n\t\t\t\t(!(\"moduleSpecifier\" in options) || exportedSymbol.moduleSpecifier === options.moduleSpecifier)\n\t\t);\n\t\tif (matchedNamedExport != null) {\n\t\t\treturn matchedNamedExport;\n\t\t} else {\n\t\t\tfor (const namespaceExport of exportedSymbolsArr.filter((exportedSymbol): exportedSymbol is NamespaceExportedSymbol => \"isNamespaceExport\" in exportedSymbol)) {\n\t\t\t\tconst sourceFile = context.resolveSourceFile(namespaceExport.moduleSpecifier, context.sourceFile);\n\t\t\t\tif (sourceFile != null && !seenSourceFiles.has(sourceFile.fileName)) {\n\t\t\t\t\tconst recursiveResult = locateExportedSymbolForSourceFile(options, {...context, sourceFile: sourceFile.fileName}, seenSourceFiles);\n\t\t\t\t\tif (recursiveResult != null) return recursiveResult;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n}\n","import {ModuleMergerVisitorOptions, VisitResult} from \"../module-merger-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {createAliasedBinding} from \"../../../util/create-aliased-binding\";\nimport {getImportedSymbolFromImportSpecifier} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {locateExportedSymbolForSourceFile} from \"../../../util/locate-exported-symbol\";\nimport {generateModuleSpecifier} from \"../../../util/generate-module-specifier\";\nimport {getAliasedDeclaration} from \"../../../util/get-aliased-declaration\";\nimport {preserveParents} from \"../../../util/clone-node-with-meta\";\n\nexport function visitImportSpecifier(options: ModuleMergerVisitorOptions<TS.ImportSpecifier>): VisitResult<TS.ImportSpecifier> {\n\tconst {node, payload, typescript} = options;\n\tif (payload.moduleSpecifier == null) return options.childContinuation(node, undefined);\n\n\tconst contResult = options.childContinuation(node, undefined);\n\n\t// If no SourceFile was resolved, preserve the ImportSpecifier as-is, unless it is already included in the chunk\n\tif (payload.matchingSourceFile == null) {\n\t\treturn options.shouldPreserveImportedSymbol(getImportedSymbolFromImportSpecifier(contResult, payload.moduleSpecifier)) ? contResult : undefined;\n\t}\n\n\t// Otherwise, prepend the nodes for the SourceFile\n\toptions.prependNodes(...options.includeSourceFile(payload.matchingSourceFile));\n\n\tconst propertyName = contResult.propertyName ?? contResult.name;\n\n\tconst exportedSymbol =\n\t\tpropertyName.text === \"default\"\n\t\t\t? locateExportedSymbolForSourceFile({defaultExport: true}, {...options, sourceFile: payload.matchingSourceFile.fileName})\n\t\t\t: locateExportedSymbolForSourceFile({defaultExport: false, name: propertyName.text}, {...options, sourceFile: payload.matchingSourceFile.fileName});\n\n\tif (exportedSymbol != null) {\n\t\t// If the export exports a binding from another module *that points to a file that isn't part of the current chunk*,\n\t\t// Create a new ImportDeclaration that refers to that chunk or external module\n\t\tconst generatedModuleSpecifier =\n\t\t\texportedSymbol.moduleSpecifier == null\n\t\t\t\t? undefined\n\t\t\t\t: generateModuleSpecifier({\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\tfrom: payload.matchingSourceFile.fileName,\n\t\t\t\t\t\tmoduleSpecifier: exportedSymbol.moduleSpecifier\n\t\t\t\t  });\n\t\tif (\n\t\t\texportedSymbol.moduleSpecifier != null &&\n\t\t\tgeneratedModuleSpecifier != null &&\n\t\t\toptions.getMatchingSourceFile(exportedSymbol.moduleSpecifier, payload.matchingSourceFile) == null\n\t\t) {\n\t\t\toptions.prependNodes(\n\t\t\t\tpreserveParents(\n\t\t\t\t\ttypescript.createImportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttypescript.createImportClause(\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttypescript.createNamedImports([\n\t\t\t\t\t\t\t\ttypescript.createImportSpecifier(\n\t\t\t\t\t\t\t\t\tpropertyName.text === \"default\"\n\t\t\t\t\t\t\t\t\t\t? typescript.createIdentifier(\"default\")\n\t\t\t\t\t\t\t\t\t\t: exportedSymbol.propertyName.text === contResult.name.text\n\t\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t\t: typescript.createIdentifier(exportedSymbol.propertyName.text),\n\t\t\t\t\t\t\t\t\ttypescript.createIdentifier(contResult.name.text)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttypescript.createStringLiteral(generatedModuleSpecifier)\n\t\t\t\t\t),\n\t\t\t\t\toptions\n\t\t\t\t)\n\t\t\t);\n\t\t} else if (contResult.propertyName != null) {\n\t\t\tconst declaration = getAliasedDeclaration({...options, node: contResult.propertyName});\n\t\t\toptions.prependNodes(\n\t\t\t\t...createAliasedBinding(declaration, exportedSymbol.propertyName.text, contResult.name.text, typescript, options.typeChecker, options.lexicalEnvironment)\n\t\t\t);\n\t\t}\n\t}\n\n\t// Don't include the ImportSpecifier\n\treturn undefined;\n}\n","import {ModuleMergerVisitorOptions, VisitResult} from \"../module-merger-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {preserveMeta, preserveParents} from \"../../../util/clone-node-with-meta\";\nimport {locateExportedSymbolForSourceFile} from \"../../../util/locate-exported-symbol\";\nimport {generateModuleSpecifier} from \"../../../util/generate-module-specifier\";\n\nexport function visitExportSpecifier(options: ModuleMergerVisitorOptions<TS.ExportSpecifier>): VisitResult<TS.ExportSpecifier> {\n\tconst {node, payload, typescript} = options;\n\tif (payload.moduleSpecifier == null) return options.childContinuation(node, undefined);\n\n\tconst contResult = options.childContinuation(node, undefined);\n\n\t// If no SourceFile was resolved, preserve the export as it is.\n\tif (payload.matchingSourceFile == null) {\n\t\treturn contResult;\n\t}\n\n\toptions.prependNodes(...options.includeSourceFile(payload.matchingSourceFile));\n\n\t// Now, we might be referencing the default export from the original module, in which case this should be rewritten to point to the exact identifier\n\tconst propertyName = contResult.propertyName ?? contResult.name;\n\n\tconst exportedSymbol =\n\t\tpropertyName.text === \"default\"\n\t\t\t? locateExportedSymbolForSourceFile({defaultExport: true}, {...options, sourceFile: payload.matchingSourceFile.fileName})\n\t\t\t: locateExportedSymbolForSourceFile({defaultExport: false, name: propertyName.text}, {...options, sourceFile: payload.matchingSourceFile.fileName});\n\n\tif (exportedSymbol != null) {\n\t\t// If the export exports a binding from another module *that points to a file that isn't part of the current chunk*,\n\t\t// Create a new ExportDeclaration that refers to that chunk or external module\n\t\tconst generatedModuleSpecifier =\n\t\t\texportedSymbol.moduleSpecifier == null\n\t\t\t\t? undefined\n\t\t\t\t: generateModuleSpecifier({\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\tfrom: payload.matchingSourceFile.fileName,\n\t\t\t\t\t\tmoduleSpecifier: exportedSymbol.moduleSpecifier\n\t\t\t\t  });\n\t\tif (\n\t\t\texportedSymbol.moduleSpecifier != null &&\n\t\t\tgeneratedModuleSpecifier != null &&\n\t\t\toptions.getMatchingSourceFile(exportedSymbol.moduleSpecifier, payload.matchingSourceFile) == null\n\t\t) {\n\t\t\toptions.prependNodes(\n\t\t\t\tpreserveParents(\n\t\t\t\t\ttypescript.createExportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttypescript.createNamedExports([\n\t\t\t\t\t\t\ttypescript.createExportSpecifier(\n\t\t\t\t\t\t\t\tpropertyName.text === \"default\"\n\t\t\t\t\t\t\t\t\t? typescript.createIdentifier(\"default\")\n\t\t\t\t\t\t\t\t\t: exportedSymbol.propertyName.text === contResult.name.text\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: typescript.createIdentifier(exportedSymbol.propertyName.text),\n\t\t\t\t\t\t\t\ttypescript.createIdentifier(contResult.name.text)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]),\n\t\t\t\t\t\ttypescript.createStringLiteral(generatedModuleSpecifier)\n\t\t\t\t\t),\n\t\t\t\t\toptions\n\t\t\t\t)\n\t\t\t);\n\n\t\t\treturn undefined;\n\t\t} else if (propertyName.text === \"default\") {\n\t\t\treturn preserveMeta(\n\t\t\t\ttypescript.updateExportSpecifier(\n\t\t\t\t\tcontResult,\n\t\t\t\t\texportedSymbol.propertyName.text === contResult.name.text ? undefined : typescript.createIdentifier(exportedSymbol.propertyName.text),\n\t\t\t\t\ttypescript.createIdentifier(contResult.name.text)\n\t\t\t\t),\n\t\t\t\tcontResult,\n\t\t\t\toptions\n\t\t\t);\n\t\t}\n\t}\n\n\t// Fall back to preserving the node\n\treturn node;\n}\n","import {ModuleMergerVisitorOptions, VisitResult} from \"../module-merger-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {getImportedSymbolFromImportClauseName} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {preserveMeta, preserveParents} from \"../../../util/clone-node-with-meta\";\nimport {createAliasedBinding} from \"../../../util/create-aliased-binding\";\nimport {generateModuleSpecifier} from \"../../../util/generate-module-specifier\";\nimport {locateExportedSymbolForSourceFile} from \"../../../util/locate-exported-symbol\";\nimport {getAliasedDeclaration} from \"../../../util/get-aliased-declaration\";\n\nexport function visitImportClause(options: ModuleMergerVisitorOptions<TS.ImportClause>): VisitResult<TS.ImportClause> {\n\tconst {node, payload, typescript} = options;\n\t// If there is no moduleSpecifier, proceed from the children.\n\tif (payload.moduleSpecifier == null) return options.childContinuation(node, payload);\n\tconst contResult = options.childContinuation(node, payload);\n\n\tif (node.name == null || contResult.name == null) {\n\t\t// If there is no name, just return the continuation result. We only concern ourselves with default imports here\n\t\treturn contResult;\n\t}\n\n\t// If no SourceFile was resolved, preserve the ImportClause, but potentially remove the default import\n\tif (payload.matchingSourceFile == null) {\n\t\t// If the default import should be preserved, return the continuation result\n\t\tif (options.shouldPreserveImportedSymbol(getImportedSymbolFromImportClauseName(contResult.name, payload.moduleSpecifier))) {\n\t\t\treturn contResult;\n\t\t}\n\n\t\t// Otherwise, remove the default import and remove the named bindings that was retrieved from the continuation.\n\t\treturn preserveMeta(typescript.updateImportClause(contResult, undefined, contResult.namedBindings, contResult.isTypeOnly), contResult, options);\n\t}\n\n\t// Otherwise, prepend the nodes for the SourceFile\n\toptions.prependNodes(...options.includeSourceFile(payload.matchingSourceFile));\n\n\t// Now, take the default export for the referenced module\n\tconst defaultExportedSymbol = locateExportedSymbolForSourceFile({defaultExport: true}, {...options, sourceFile: payload.matchingSourceFile.fileName});\n\n\tif (defaultExportedSymbol != null) {\n\t\t// If the default export exports a binding from another module *that points to a file that isn't part of the current chunk*,\n\t\t// Create a new ImportDeclaration that refers to that chunk or external module\n\t\tconst generatedModuleSpecifier =\n\t\t\tdefaultExportedSymbol.moduleSpecifier == null\n\t\t\t\t? undefined\n\t\t\t\t: generateModuleSpecifier({\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\tfrom: payload.matchingSourceFile.fileName,\n\t\t\t\t\t\tmoduleSpecifier: defaultExportedSymbol.moduleSpecifier\n\t\t\t\t  });\n\t\tif (\n\t\t\tdefaultExportedSymbol.moduleSpecifier != null &&\n\t\t\tgeneratedModuleSpecifier != null &&\n\t\t\toptions.getMatchingSourceFile(defaultExportedSymbol.moduleSpecifier, payload.matchingSourceFile) == null\n\t\t) {\n\t\t\toptions.prependNodes(\n\t\t\t\tpreserveParents(\n\t\t\t\t\ttypescript.createImportDeclaration(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttypescript.createImportClause(typescript.createIdentifier(contResult.name.text), undefined),\n\t\t\t\t\t\ttypescript.createStringLiteral(generatedModuleSpecifier)\n\t\t\t\t\t),\n\t\t\t\t\t{typescript}\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t// Otherwise, if the names of the ImportClause and the default export exactly matches, we don't need to do anything.\n\t\t// If they don't, we'll need to alias it\n\t\telse if (defaultExportedSymbol.propertyName.text !== contResult.name.text) {\n\t\t\tconst declaration = getAliasedDeclaration({...options, node: contResult.name});\n\t\t\toptions.prependNodes(\n\t\t\t\t...createAliasedBinding(declaration, defaultExportedSymbol.propertyName.text, contResult.name.text, typescript, options.typeChecker, options.lexicalEnvironment)\n\t\t\t);\n\t\t}\n\t}\n\n\t// Don't include the ImportClause\n\treturn undefined;\n}\n","import {ModuleMergerVisitorOptions, VisitResult} from \"../module-merger-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {getImportedSymbolFromNamespaceImport} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {ensureHasDeclareModifier} from \"../../../util/modifier-util\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {ensureNoDeclareModifierTransformer} from \"../../ensure-no-declare-modifier-transformer/ensure-no-declare-modifier-transformer\";\nimport {statementMerger} from \"../../statement-merger/statement-merger\";\nimport {preserveParents} from \"../../../util/clone-node-with-meta\";\n\nexport function visitNamespaceImport(options: ModuleMergerVisitorOptions<TS.NamespaceImport>): VisitResult<TS.NamespaceImport> {\n\tconst {node, payload} = options;\n\tif (payload.moduleSpecifier == null) return options.childContinuation(node, undefined);\n\n\tconst contResult = options.childContinuation(node, undefined);\n\n\t// If no SourceFile was resolved, preserve the ImportSpecifier as-is, unless it is already included in the chunk\n\tif (payload.matchingSourceFile == null) {\n\t\treturn options.shouldPreserveImportedSymbol(getImportedSymbolFromNamespaceImport(contResult, payload.moduleSpecifier)) ? contResult : undefined;\n\t}\n\n\t// Otherwise, prepend the nodes for the SourceFile in a namespace declaration\n\toptions.prependNodes(\n\t\tpreserveParents(\n\t\t\toptions.typescript.createModuleDeclaration(\n\t\t\t\tundefined,\n\t\t\t\tensureHasDeclareModifier(undefined, options.typescript),\n\t\t\t\toptions.typescript.createIdentifier(contResult.name.text),\n\t\t\t\toptions.typescript.createModuleBlock([\n\t\t\t\t\t...options.includeSourceFile(payload.matchingSourceFile, {\n\t\t\t\t\t\tallowDuplicate: true,\n\t\t\t\t\t\tlexicalEnvironment: cloneLexicalEnvironment(),\n\t\t\t\t\t\ttransformers: [ensureNoDeclareModifierTransformer, statementMerger({markAsModuleIfNeeded: false})]\n\t\t\t\t\t})\n\t\t\t\t]),\n\t\t\t\toptions.typescript.NodeFlags.Namespace\n\t\t\t),\n\t\t\toptions\n\t\t)\n\t);\n\n\t// Don't include the NamespaceImport\n\treturn undefined;\n}\n","import {ModuleMergerVisitorOptions, VisitResult} from \"../module-merger-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitSourceFile(options: ModuleMergerVisitorOptions<TS.SourceFile>): VisitResult<TS.SourceFile> {\n\tfor (const otherEntrySourceFileForChunk of options.otherEntrySourceFilesForChunk) {\n\t\toptions.prependNodes(...options.includeSourceFile(otherEntrySourceFileForChunk, {allowExports: true}));\n\t}\n\n\treturn options.childContinuation(options.node, undefined);\n}\n","import {ModuleMergerVisitorOptions, VisitResult} from \"../module-merger-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {visitExportDeclaration} from \"./visit-export-declaration\";\nimport {visitImportTypeNode} from \"./visit-import-type-node\";\nimport {visitImportDeclaration} from \"./visit-import-declaration\";\nimport {visitImportSpecifier} from \"./visit-import-specifier\";\nimport {visitExportSpecifier} from \"./visit-export-specifier\";\nimport {visitImportClause} from \"./visit-import-clause\";\nimport {visitNamespaceImport} from \"./visit-namespace-import\";\nimport {visitSourceFile} from \"./visit-source-file\";\n\nexport function visitNode<T extends TS.Node>({node, ...options}: ModuleMergerVisitorOptions<T>): VisitResult<T> {\n\tif (options.typescript.isSourceFile(node)) {\n\t\treturn (visitSourceFile({...options, node} as ModuleMergerVisitorOptions<TS.SourceFile>) as unknown) as VisitResult<T>;\n\t} else if (options.typescript.isExportDeclaration(node)) {\n\t\treturn (visitExportDeclaration({...options, node} as ModuleMergerVisitorOptions<TS.ExportDeclaration>) as unknown) as VisitResult<T>;\n\t} else if (options.typescript.isImportDeclaration(node)) {\n\t\treturn (visitImportDeclaration({...options, node} as ModuleMergerVisitorOptions<TS.ImportDeclaration>) as unknown) as VisitResult<T>;\n\t} else if (options.typescript.isImportTypeNode(node)) {\n\t\treturn (visitImportTypeNode({...options, node} as ModuleMergerVisitorOptions<TS.ImportTypeNode>) as unknown) as VisitResult<T>;\n\t} else if (options.typescript.isImportClause(node)) {\n\t\treturn (visitImportClause({...options, node} as ModuleMergerVisitorOptions<TS.ImportClause>) as unknown) as VisitResult<T>;\n\t} else if (options.typescript.isNamespaceImport(node)) {\n\t\treturn (visitNamespaceImport({...options, node} as ModuleMergerVisitorOptions<TS.NamespaceImport>) as unknown) as VisitResult<T>;\n\t} else if (options.typescript.isImportSpecifier(node)) {\n\t\treturn (visitImportSpecifier({...options, node} as ModuleMergerVisitorOptions<TS.ImportSpecifier>) as unknown) as VisitResult<T>;\n\t} else if (options.typescript.isExportSpecifier(node)) {\n\t\treturn (visitExportSpecifier({...options, node} as ModuleMergerVisitorOptions<TS.ExportSpecifier>) as unknown) as VisitResult<T>;\n\t} else {\n\t\treturn (options.childContinuation(node, options.payload as never) as unknown) as VisitResult<T>;\n\t}\n}\n","import {TS} from \"../../../../type/ts\";\n\n/**\n * Returns true if the given Node is a Statement\n * Uses an internal non-exposed Typescript helper to decide whether or not the Node is a Statement\n */\nexport function isStatement(node: TS.Node, typescript: typeof TS): node is TS.Statement {\n\treturn ((typescript as unknown) as {isStatementButNotDeclaration(node: TS.Node): boolean}).isStatementButNotDeclaration(node);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {isStatement} from \"../../../util/is-statement\";\n\nexport function isRootLevelNode(node: TS.VisitResult<TS.Node>, typescript: typeof TS): node is TS.Statement {\n\treturn (\n\t\tnode != null &&\n\t\t!Array.isArray(node) &&\n\t\t(typescript.isClassDeclaration(node) ||\n\t\t\ttypescript.isClassExpression(node) ||\n\t\t\ttypescript.isEnumDeclaration(node) ||\n\t\t\ttypescript.isExportDeclaration(node) ||\n\t\t\ttypescript.isExportAssignment(node) ||\n\t\t\ttypescript.isFunctionDeclaration(node) ||\n\t\t\ttypescript.isFunctionExpression(node) ||\n\t\t\ttypescript.isExpressionStatement(node) ||\n\t\t\ttypescript.isImportDeclaration(node) ||\n\t\t\ttypescript.isImportEqualsDeclaration(node) ||\n\t\t\ttypescript.isInterfaceDeclaration(node) ||\n\t\t\ttypescript.isModuleDeclaration(node) ||\n\t\t\ttypescript.isTypeAliasDeclaration(node) ||\n\t\t\ttypescript.isVariableStatement(node) ||\n\t\t\tisStatement(node, typescript))\n\t);\n}\n","import {TS} from \"../../../../type/ts\";\nimport {isRootLevelNode} from \"../transformers/module-merger/util/is-root-level-node\";\n\nexport interface NodePlacementQueue {\n\tprependNodes(...nodes: TS.Node[]): void;\n\tappendNodes(...nodes: TS.Node[]): void;\n\twrapVisitResult<T extends TS.Node>(node: TS.VisitResult<T>): TS.VisitResult<TS.Node>;\n\tflush(): readonly [readonly TS.Node[], readonly TS.Node[]];\n}\n\nexport interface GetNodePlacementQueueOptions {\n\ttypescript: typeof TS;\n}\n\nexport function getNodePlacementQueue({typescript}: GetNodePlacementQueueOptions): NodePlacementQueue {\n\tconst prependNodeQueue = new Set<TS.Node>();\n\tconst appendNodeQueue = new Set<TS.Node>();\n\tconst flush = (): readonly [readonly TS.Node[], readonly TS.Node[]] => {\n\t\tconst returnValue = [[...prependNodeQueue], [...appendNodeQueue]] as const;\n\t\tprependNodeQueue.clear();\n\t\tappendNodeQueue.clear();\n\t\treturn returnValue;\n\t};\n\n\treturn {\n\t\tflush,\n\t\tprependNodes(...nodes: TS.Node[]): void {\n\t\t\tfor (const node of nodes) prependNodeQueue.add(node);\n\t\t},\n\t\tappendNodes(...nodes: TS.Node[]): void {\n\t\t\tfor (const node of nodes) appendNodeQueue.add(node);\n\t\t},\n\t\twrapVisitResult<T extends TS.Node>(node: TS.VisitResult<T>): TS.VisitResult<TS.Node> {\n\t\t\tif (isRootLevelNode(node, typescript) || (Array.isArray(node) && node.some(n => isRootLevelNode(n, typescript)))) {\n\t\t\t\tconst [prependNodes, appendNodes] = flush();\n\t\t\t\treturn [...prependNodes, ...(Array.isArray(node) ? node : [node]), ...appendNodes];\n\t\t\t} else {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t};\n}\n","import {ImportedSymbol} from \"../transformers/track-imports-transformer/track-imports-transformer-visitor-options\";\n\nexport function findMatchingImportedSymbol(importedSymbol: ImportedSymbol, importedSymbols: Iterable<ImportedSymbol>): ImportedSymbol | undefined {\n\tfor (const otherImportedSymbol of importedSymbols) {\n\t\t// They both need to point to the same moduleSpecifier\n\t\tif (importedSymbol.moduleSpecifier !== otherImportedSymbol.moduleSpecifier) continue;\n\n\t\t// If it is a NamespaceImport, a matching ImportedSymbol must have the same name\n\t\tif (\"isNamespaceImport\" in importedSymbol) {\n\t\t\tif (\"isNamespaceImport\" in otherImportedSymbol && importedSymbol.name.text === otherImportedSymbol.name.text) {\n\t\t\t\treturn otherImportedSymbol;\n\t\t\t}\n\t\t} else if (\"isClauseLessImport\" in importedSymbol) {\n\t\t\tif (\"isClauseLessImport\" in otherImportedSymbol) {\n\t\t\t\treturn otherImportedSymbol;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise, their names, property names, and default import values must be equal\n\t\telse {\n\t\t\tif (\n\t\t\t\t\"isDefaultImport\" in otherImportedSymbol &&\n\t\t\t\timportedSymbol.isDefaultImport === otherImportedSymbol.isDefaultImport &&\n\t\t\t\timportedSymbol.name.text === otherImportedSymbol.name.text &&\n\t\t\t\timportedSymbol.propertyName.text === otherImportedSymbol.propertyName.text\n\t\t\t) {\n\t\t\t\treturn otherImportedSymbol;\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoExportModifierTransformerVisitorOptions} from \"../ensure-no-export-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier, removeExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitClassDeclaration(options: EnsureNoExportModifierTransformerVisitorOptions<TS.ClassDeclaration>): TS.ClassDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasExportModifier(node, typescript)) return node;\n\treturn preserveMeta(\n\t\ttypescript.updateClassDeclaration(node, node.decorators, removeExportModifier(node.modifiers, typescript), node.name, node.typeParameters, node.heritageClauses, node.members),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoExportModifierTransformerVisitorOptions} from \"../ensure-no-export-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier, removeExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitClassExpression(options: EnsureNoExportModifierTransformerVisitorOptions<TS.ClassExpression>): TS.ClassExpression {\n\tconst {node, typescript} = options;\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateClassExpression(node, removeExportModifier(node.modifiers, typescript), node.name, node.typeParameters, node.heritageClauses, node.members),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoExportModifierTransformerVisitorOptions} from \"../ensure-no-export-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier, removeExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitFunctionDeclaration(options: EnsureNoExportModifierTransformerVisitorOptions<TS.FunctionDeclaration>): TS.FunctionDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateFunctionDeclaration(\n\t\t\tnode,\n\t\t\tnode.decorators,\n\t\t\tremoveExportModifier(node.modifiers, typescript),\n\t\t\tnode.asteriskToken,\n\t\t\tnode.name,\n\t\t\tnode.typeParameters,\n\t\t\tnode.parameters,\n\t\t\tnode.type,\n\t\t\tnode.body\n\t\t),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoExportModifierTransformerVisitorOptions} from \"../ensure-no-export-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier, removeExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitFunctionExpression(options: EnsureNoExportModifierTransformerVisitorOptions<TS.FunctionExpression>): TS.FunctionExpression {\n\tconst {node, typescript} = options;\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateFunctionExpression(\n\t\t\tnode,\n\t\t\tremoveExportModifier(node.modifiers, typescript),\n\t\t\tnode.asteriskToken,\n\t\t\tnode.name,\n\t\t\tnode.typeParameters,\n\t\t\tnode.parameters,\n\t\t\tnode.type,\n\t\t\tnode.body\n\t\t),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoExportModifierTransformerVisitorOptions} from \"../ensure-no-export-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier, removeExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitEnumDeclaration(options: EnsureNoExportModifierTransformerVisitorOptions<TS.EnumDeclaration>): TS.EnumDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasExportModifier(node, typescript)) return node;\n\treturn preserveMeta(typescript.updateEnumDeclaration(node, node.decorators, removeExportModifier(node.modifiers, typescript), node.name, node.members), node, options);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoExportModifierTransformerVisitorOptions} from \"../ensure-no-export-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier, removeExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitVariableStatement(options: EnsureNoExportModifierTransformerVisitorOptions<TS.VariableStatement>): TS.VariableStatement {\n\tconst {node, typescript} = options;\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\treturn preserveMeta(typescript.updateVariableStatement(node, removeExportModifier(node.modifiers, typescript), node.declarationList), node, options);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoExportModifierTransformerVisitorOptions} from \"../ensure-no-export-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier, removeExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitInterfaceDeclaration(options: EnsureNoExportModifierTransformerVisitorOptions<TS.InterfaceDeclaration>): TS.InterfaceDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateInterfaceDeclaration(\n\t\t\tnode,\n\t\t\tnode.decorators,\n\t\t\tremoveExportModifier(node.modifiers, typescript),\n\t\t\tnode.name,\n\t\t\tnode.typeParameters,\n\t\t\tnode.heritageClauses,\n\t\t\tnode.members\n\t\t),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoExportModifierTransformerVisitorOptions} from \"../ensure-no-export-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier, removeExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitModuleDeclaration(options: EnsureNoExportModifierTransformerVisitorOptions<TS.ModuleDeclaration>): TS.ModuleDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasExportModifier(node, typescript)) return node;\n\treturn preserveMeta(typescript.updateModuleDeclaration(node, node.decorators, removeExportModifier(node.modifiers, typescript), node.name, node.body), node, options);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoExportModifierTransformerVisitorOptions} from \"../ensure-no-export-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier, removeExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitTypeAliasDeclaration(options: EnsureNoExportModifierTransformerVisitorOptions<TS.TypeAliasDeclaration>): TS.TypeAliasDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasExportModifier(node, typescript)) return node;\n\treturn preserveMeta(\n\t\ttypescript.updateTypeAliasDeclaration(node, node.decorators, removeExportModifier(node.modifiers, typescript), node.name, node.typeParameters, node.type),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureNoExportModifierTransformerVisitorOptions} from \"../ensure-no-export-modifier-transformer-visitor-options\";\nimport {visitClassDeclaration} from \"./visit-class-declaration\";\nimport {visitClassExpression} from \"./visit-class-expression\";\nimport {visitFunctionDeclaration} from \"./visit-function-declaration\";\nimport {visitFunctionExpression} from \"./visit-function-expression\";\nimport {visitEnumDeclaration} from \"./visit-enum-declaration\";\nimport {visitVariableStatement} from \"./visit-variable-statement\";\nimport {visitInterfaceDeclaration} from \"./visit-interface-declaration\";\nimport {visitModuleDeclaration} from \"./visit-module-declaration\";\nimport {visitTypeAliasDeclaration} from \"./visit-type-alias-declaration\";\n\nexport function visitNode({node, ...options}: EnsureNoExportModifierTransformerVisitorOptions<TS.Node>): TS.Node {\n\tif (options.typescript.isClassDeclaration(node)) {\n\t\treturn visitClassDeclaration({...options, node});\n\t} else if (options.typescript.isClassExpression(node)) {\n\t\treturn visitClassExpression({...options, node});\n\t} else if (options.typescript.isFunctionDeclaration(node)) {\n\t\treturn visitFunctionDeclaration({...options, node});\n\t} else if (options.typescript.isFunctionExpression(node)) {\n\t\treturn visitFunctionExpression({...options, node});\n\t} else if (options.typescript.isEnumDeclaration(node)) {\n\t\treturn visitEnumDeclaration({...options, node});\n\t} else if (options.typescript.isInterfaceDeclaration(node)) {\n\t\treturn visitInterfaceDeclaration({...options, node});\n\t} else if (options.typescript.isTypeAliasDeclaration(node)) {\n\t\treturn visitTypeAliasDeclaration({...options, node});\n\t} else if (options.typescript.isModuleDeclaration(node)) {\n\t\treturn visitModuleDeclaration({...options, node});\n\t} else if (options.typescript.isVariableStatement(node)) {\n\t\treturn visitVariableStatement({...options, node});\n\t} else {\n\t\t// Only consider root-level statements here\n\t\treturn node;\n\t}\n}\n","import {TS} from \"../../../../../type/ts\";\nimport {SourceFileBundlerVisitorOptions} from \"../source-file-bundler/source-file-bundler-visitor-options\";\nimport {visitNode} from \"./visitor/visit-node\";\nimport {shouldDebugMetrics, shouldDebugSourceFile} from \"../../../../../util/is-debug/should-debug\";\nimport {logMetrics} from \"../../../../../util/logging/log-metrics\";\nimport {logTransformer} from \"../../../../../util/logging/log-transformer\";\nimport {preserveMeta} from \"../../util/clone-node-with-meta\";\n\nexport function ensureNoExportModifierTransformer(options: SourceFileBundlerVisitorOptions): TS.SourceFile {\n\tconst {typescript, context, sourceFile, pluginOptions, printer} = options;\n\n\tconst fullBenchmark = shouldDebugMetrics(pluginOptions.debug, sourceFile) ? logMetrics(`Ensuring no export modifiers`, sourceFile.fileName) : undefined;\n\n\tconst transformationLog = shouldDebugSourceFile(pluginOptions.debug, sourceFile) ? logTransformer(\"Ensuring no export modifiers\", sourceFile, printer) : undefined;\n\n\t// Prepare some VisitorOptions\n\tconst visitorOptions = {\n\t\t...options,\n\n\t\tchildContinuation: <U extends TS.Node>(node: U): U =>\n\t\t\ttypescript.visitEachChild(\n\t\t\t\tnode,\n\t\t\t\tnextNode =>\n\t\t\t\t\tvisitNode({\n\t\t\t\t\t\t...visitorOptions,\n\t\t\t\t\t\tnode: nextNode\n\t\t\t\t\t}),\n\t\t\t\tcontext\n\t\t\t),\n\n\t\tcontinuation: <U extends TS.Node>(node: U): U =>\n\t\t\tvisitNode({\n\t\t\t\t...visitorOptions,\n\t\t\t\tnode\n\t\t\t}) as U\n\t};\n\n\tconst result = preserveMeta(\n\t\ttypescript.visitEachChild(sourceFile, nextNode => visitorOptions.continuation(nextNode), context),\n\t\tsourceFile,\n\t\toptions\n\t);\n\n\ttransformationLog?.finish(result);\n\tfullBenchmark?.finish();\n\n\treturn result;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {NoExportDeclarationTransformerVisitorOptions} from \"../no-export-declaration-transformer-visitor-options\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/naming-convention\nexport function visitExportDeclaration(_options: NoExportDeclarationTransformerVisitorOptions<TS.ExportDeclaration>): undefined {\n\treturn undefined;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {NoExportDeclarationTransformerVisitorOptions} from \"../no-export-declaration-transformer-visitor-options\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/naming-convention\nexport function visitExportAssignment(_options: NoExportDeclarationTransformerVisitorOptions<TS.ExportAssignment>): undefined {\n\treturn undefined;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {NoExportDeclarationTransformerVisitorOptions} from \"../no-export-declaration-transformer-visitor-options\";\nimport {visitExportDeclaration} from \"./visit-export-declaration\";\nimport {visitExportAssignment} from \"./visit-export-assignment\";\n\nexport function visitNode({node, ...options}: NoExportDeclarationTransformerVisitorOptions<TS.Node>): TS.Node | undefined {\n\tif (options.typescript.isExportDeclaration(node)) {\n\t\treturn visitExportDeclaration({...options, node});\n\t} else if (options.typescript.isExportAssignment(node)) {\n\t\treturn visitExportAssignment({...options, node});\n\t} else {\n\t\t// Preserve the node\n\t\treturn node;\n\t}\n}\n","import {TS} from \"../../../../../type/ts\";\nimport {SourceFileBundlerVisitorOptions} from \"../source-file-bundler/source-file-bundler-visitor-options\";\nimport {visitNode} from \"./visitor/visit-node\";\nimport {getNodePlacementQueue} from \"../../util/get-node-placement-queue\";\nimport {NoExportDeclarationTransformerVisitorOptions} from \"./no-export-declaration-transformer-visitor-options\";\nimport {shouldDebugMetrics, shouldDebugSourceFile} from \"../../../../../util/is-debug/should-debug\";\nimport {logMetrics} from \"../../../../../util/logging/log-metrics\";\nimport {logTransformer} from \"../../../../../util/logging/log-transformer\";\nimport {preserveMeta} from \"../../util/clone-node-with-meta\";\n\nexport function noExportDeclarationTransformer(options: SourceFileBundlerVisitorOptions): TS.SourceFile {\n\tconst {typescript, context, sourceFile, pluginOptions, printer} = options;\n\n\tconst fullBenchmark = shouldDebugMetrics(pluginOptions.debug, sourceFile) ? logMetrics(`Removing ExportDeclarations`, sourceFile.fileName) : undefined;\n\n\tconst transformationLog = shouldDebugSourceFile(pluginOptions.debug, sourceFile) ? logTransformer(\"Removing ExportDeclarations\", sourceFile, printer) : undefined;\n\n\tconst nodePlacementQueue = getNodePlacementQueue({typescript});\n\n\t// Prepare some VisitorOptions\n\tconst visitorOptions: Omit<NoExportDeclarationTransformerVisitorOptions<TS.Node>, \"node\"> = {\n\t\t...options,\n\t\t...nodePlacementQueue,\n\n\t\tchildContinuation: <U extends TS.Node>(node: U): U =>\n\t\t\ttypescript.visitEachChild(\n\t\t\t\tnode,\n\t\t\t\tnextNode =>\n\t\t\t\t\tnodePlacementQueue.wrapVisitResult(\n\t\t\t\t\t\tvisitNode({\n\t\t\t\t\t\t\t...visitorOptions,\n\t\t\t\t\t\t\tnode: nextNode\n\t\t\t\t\t\t})\n\t\t\t\t\t),\n\t\t\t\tcontext\n\t\t\t),\n\n\t\tcontinuation: <U extends TS.Node>(node: U): U =>\n\t\t\tnodePlacementQueue.wrapVisitResult(\n\t\t\t\tvisitNode({\n\t\t\t\t\t...visitorOptions,\n\t\t\t\t\tnode\n\t\t\t\t})\n\t\t\t) as U\n\t};\n\n\tconst result = preserveMeta(\n\t\ttypescript.visitEachChild(sourceFile, nextNode => visitorOptions.continuation(nextNode), context),\n\t\tsourceFile,\n\t\toptions\n\t);\n\n\ttransformationLog?.finish(result);\n\tfullBenchmark?.finish();\n\n\treturn result;\n}\n","import {visitNode} from \"./visitor/visit-node\";\nimport {TS} from \"../../../../../type/ts\";\nimport {ChildVisitResult, IncludeSourceFileOptions, ModuleMergerVisitorOptions, PayloadMap, VisitResult} from \"./module-merger-visitor-options\";\nimport {DeclarationTransformer} from \"../../declaration-bundler-options\";\nimport {applyTransformers} from \"../../util/apply-transformers\";\nimport {getNodePlacementQueue} from \"../../util/get-node-placement-queue\";\nimport {findMatchingImportedSymbol} from \"../../util/find-matching-imported-symbol\";\nimport {cloneNodeWithMeta, preserveMeta} from \"../../util/clone-node-with-meta\";\nimport {ImportedSymbol} from \"../track-imports-transformer/track-imports-transformer-visitor-options\";\nimport {getChunkFilename} from \"../../util/get-chunk-filename\";\nimport {ensureNoExportModifierTransformer} from \"../ensure-no-export-modifier-transformer/ensure-no-export-modifier-transformer\";\nimport {noExportDeclarationTransformer} from \"../no-export-declaration-transformer/no-export-declaration-transformer\";\nimport {shouldDebugMetrics, shouldDebugSourceFile} from \"../../../../../util/is-debug/should-debug\";\nimport {logMetrics} from \"../../../../../util/logging/log-metrics\";\nimport {logTransformer} from \"../../../../../util/logging/log-transformer\";\n\nexport function moduleMerger(...transformers: DeclarationTransformer[]): DeclarationTransformer {\n\treturn options => {\n\t\tconst {typescript, context, sourceFile, pluginOptions, printer, preservedImports} = options;\n\n\t\tconst fullBenchmark = shouldDebugMetrics(pluginOptions.debug, sourceFile) ? logMetrics(`Merging modules`, sourceFile.fileName) : undefined;\n\n\t\tconst transformationLog = shouldDebugSourceFile(pluginOptions.debug, sourceFile) ? logTransformer(\"Merging modules\", sourceFile, printer) : undefined;\n\n\t\tconst nodePlacementQueue = getNodePlacementQueue({typescript});\n\n\t\t// Prepare some VisitorOptions\n\t\tconst visitorOptions: Omit<ModuleMergerVisitorOptions<TS.Node>, \"node\"> = {\n\t\t\t...options,\n\t\t\t...nodePlacementQueue,\n\t\t\ttransformers,\n\t\t\tpayload: undefined,\n\n\t\t\tchildContinuation: <U extends TS.Node>(node: U, payload: PayloadMap[U[\"kind\"]]): ChildVisitResult<U> =>\n\t\t\t\toptions.typescript.visitEachChild(\n\t\t\t\t\tnode,\n\t\t\t\t\tnextNode =>\n\t\t\t\t\t\tnodePlacementQueue.wrapVisitResult(\n\t\t\t\t\t\t\tvisitNode({\n\t\t\t\t\t\t\t\t...visitorOptions,\n\t\t\t\t\t\t\t\tpayload,\n\t\t\t\t\t\t\t\tnode: nextNode\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t),\n\t\t\t\t\tcontext\n\t\t\t\t),\n\n\t\t\tcontinuation: <U extends TS.Node>(node: U, payload: PayloadMap[U[\"kind\"]]): VisitResult<U> =>\n\t\t\t\tnodePlacementQueue.wrapVisitResult(\n\t\t\t\t\tvisitNode({\n\t\t\t\t\t\t...visitorOptions,\n\t\t\t\t\t\tpayload,\n\t\t\t\t\t\tnode\n\t\t\t\t\t} as ModuleMergerVisitorOptions<U>)\n\t\t\t\t) as VisitResult<U>,\n\n\t\t\tshouldPreserveImportedSymbol(importedSymbol: ImportedSymbol): boolean {\n\t\t\t\tlet importedSymbols = preservedImports.get(importedSymbol.moduleSpecifier);\n\t\t\t\tif (importedSymbols == null) {\n\t\t\t\t\timportedSymbols = new Set();\n\t\t\t\t\tpreservedImports.set(importedSymbol.moduleSpecifier, importedSymbols);\n\t\t\t\t}\n\n\t\t\t\t// Preserve the import of there is no matching imported symbol already\n\t\t\t\tif (findMatchingImportedSymbol(importedSymbol, importedSymbols) != null) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, the import should be preserved!\n\t\t\t\timportedSymbols.add(importedSymbol);\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\tgetMatchingSourceFile(moduleSpecifier: string, from: TS.SourceFile): TS.SourceFile | undefined {\n\t\t\t\tconst resolvedSourceFile = options.resolveSourceFile(moduleSpecifier, from.fileName);\n\n\t\t\t\tconst chunkForSourceFile = resolvedSourceFile == null ? undefined : getChunkFilename(resolvedSourceFile.fileName, options.chunks);\n\t\t\t\tconst isSameChunk = resolvedSourceFile != null && chunkForSourceFile != null && chunkForSourceFile === options.chunk.paths.absolute;\n\n\t\t\t\treturn resolvedSourceFile === from || !isSameChunk ? undefined : resolvedSourceFile;\n\t\t\t},\n\n\t\t\tincludeSourceFile(\n\t\t\t\tsourceFileToInclude: TS.SourceFile,\n\t\t\t\t{\n\t\t\t\t\tallowDuplicate = false,\n\t\t\t\t\tallowExports = options.otherEntrySourceFilesForChunk.some(otherEntrySourceFileForChunk => otherEntrySourceFileForChunk.fileName === sourceFileToInclude.fileName),\n\t\t\t\t\ttransformers: extraTransformers = [],\n\t\t\t\t\t...otherOptions\n\t\t\t\t}: Partial<IncludeSourceFileOptions> = {}\n\t\t\t): Iterable<TS.Statement> {\n\t\t\t\t// Never include the same SourceFile twice\n\t\t\t\tif (options.includedSourceFiles.has(sourceFileToInclude.fileName) && !allowDuplicate) return [];\n\t\t\t\toptions.includedSourceFiles.add(sourceFileToInclude.fileName);\n\n\t\t\t\tconst allTransformers = allowExports\n\t\t\t\t\t? [...transformers, ...extraTransformers]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t...transformers,\n\t\t\t\t\t\t\t// Removes 'export' modifiers from Nodes\n\t\t\t\t\t\t\tensureNoExportModifierTransformer,\n\t\t\t\t\t\t\t// Removes ExportDeclarations and ExportAssignments\n\t\t\t\t\t\t\tnoExportDeclarationTransformer,\n\t\t\t\t\t\t\t...extraTransformers\n\t\t\t\t\t  ];\n\n\t\t\t\tconst transformedSourceFile = applyTransformers({\n\t\t\t\t\tvisitorOptions: {\n\t\t\t\t\t\t...visitorOptions,\n\t\t\t\t\t\t...otherOptions,\n\t\t\t\t\t\tsourceFile: sourceFileToInclude,\n\t\t\t\t\t\totherEntrySourceFilesForChunk: []\n\t\t\t\t\t},\n\t\t\t\t\ttransformers: [moduleMerger(...allTransformers), ...allTransformers]\n\t\t\t\t});\n\n\t\t\t\t// Keep track of the original symbols which will be lost when the nodes are cloned\n\t\t\t\treturn transformedSourceFile.statements.map(node => cloneNodeWithMeta(node, options));\n\t\t\t}\n\t\t};\n\n\t\tlet result = visitorOptions.continuation(sourceFile, undefined);\n\n\t\t// There may be prepended or appended nodes that hasn't been added yet. Do so!\n\t\tconst [missingPrependNodes, missingAppendNodes] = nodePlacementQueue.flush();\n\t\tif (missingPrependNodes.length > 0 || missingAppendNodes.length > 0) {\n\t\t\tresult = preserveMeta(\n\t\t\t\ttypescript.updateSourceFileNode(\n\t\t\t\t\tresult,\n\t\t\t\t\t[...(missingPrependNodes as TS.Statement[]), ...result.statements, ...(missingAppendNodes as TS.Statement[])],\n\t\t\t\t\tresult.isDeclarationFile,\n\t\t\t\t\tresult.referencedFiles,\n\t\t\t\t\tresult.typeReferenceDirectives,\n\t\t\t\t\tresult.hasNoDefaultLib,\n\t\t\t\t\tresult.libReferenceDirectives\n\t\t\t\t),\n\t\t\t\tresult,\n\t\t\t\toptions\n\t\t\t);\n\t\t}\n\n\t\ttransformationLog?.finish(result);\n\t\tfullBenchmark?.finish();\n\n\t\t// Otherwise, return the result as it is\n\t\treturn result;\n\t};\n}\n","import {LexicalEnvironment} from \"../transformers/deconflicter/deconflicter-options\";\n\nexport function addBindingToLexicalEnvironment(lexicalEnvironment: LexicalEnvironment, originalSourceFileName: string, value: string, oldValue: string = value): void {\n\tlexicalEnvironment.bindings.set(oldValue, {originalSourceFileName, value});\n}\n","import {LexicalEnvironment} from \"../transformers/deconflicter/deconflicter-options\";\n\nexport function isIdentifierFree(lexicalEnvironment: LexicalEnvironment, identifier: string, originalSourceFileName: string): boolean {\n\t// So long as the current lexical environment doesn't already define the provided identifier,\n\t// it can be declared, even if it may shadow an existing identifier from the parent chain of Lexical environments\n\tconst binding = lexicalEnvironment.bindings.get(identifier);\n\n\t// if there is no binding, the identifier is free\n\tif (binding == null) return true;\n\n\t// Otherwise, the identifier is free if and only if it was originally declared in the same SourceFile (in which case it follows the\n\t// declaration merging rules outlined here: https://www.typescriptlang.org/docs/handbook/declaration-merging.html\n\treturn binding.originalSourceFileName === originalSourceFileName;\n}\n","import {SafeNode} from \"../../../../type/safe-node\";\nimport {TS} from \"../../../../type/ts\";\nimport {getOriginalNode} from \"./get-original-node\";\n\nexport function getOriginalSourceFile<T extends SafeNode>(node: T, currentSourceFile: TS.SourceFile, typescript: typeof TS): TS.SourceFile {\n\treturn getOriginalNode(node, typescript).getSourceFile() ?? currentSourceFile;\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\n\n/**\n * Deconflicts the given BindingElement.\n */\nexport function deconflictBindingElement(options: DeconflicterVisitorOptions<TS.BindingElement>): TS.BindingElement | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript, sourceFile} = options;\n\n\tlet nameContResult: TS.BindingElement[\"name\"];\n\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\tif (typescript.isIdentifier(node.name)) {\n\t\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\t\tnameContResult = node.name;\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t\t} else {\n\t\t\t// Otherwise, deconflict it\n\t\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t\t}\n\t} else {\n\t\t// Otherwise, deconflict it\n\t\tnameContResult = continuation(node.name, {lexicalEnvironment});\n\t}\n\n\tconst propertyNameContResult =\n\t\tnode.propertyName == null ? undefined : typescript.isIdentifier(node.propertyName) ? node.propertyName : continuation(node.propertyName, {lexicalEnvironment});\n\tconst initializerContResult = node.initializer == null ? undefined : continuation(node.initializer, {lexicalEnvironment});\n\n\tconst isIdentical = nameContResult === node.name && propertyNameContResult === node.propertyName && initializerContResult === node.initializer;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateBindingElement(node, node.dotDotDotToken, propertyNameContResult, nameContResult, initializerContResult), node, options);\n}\n","import {TS} from \"../../../../type/ts\";\n\nexport function nodeArraysAreEqual(a: TS.NodeArray<TS.Node> | TS.Node[] | undefined, b: TS.NodeArray<TS.Node> | TS.Node[] | undefined): boolean {\n\tif (a == null && b == null) return true;\n\treturn a != null && b != null && a.length === b.length && a.every((element, index) => element === b[index]);\n}\n","import {getSymbolAtLocation, GetSymbolAtLocationOptions} from \"./get-symbol-at-location\";\nimport {TS} from \"../../../../type/ts\";\nimport {generateRandomHash, generateRandomIntegerHash} from \"../../../../util/hash/generate-random-hash\";\nimport {getOriginalNode} from \"./get-original-node\";\nimport {getParentNode} from \"./get-parent-node\";\nimport {getAliasedDeclaration} from \"./get-aliased-declaration\";\nimport {SafeNode} from \"../../../../type/safe-node\";\n\n/**\n * According to TypeScript, multiple namespace imports, identically named, from the same module may have different IDs, because they are all local bindings in their respective modules.\n * For example, in files a.ts and b.ts, both may include 'import * as Foo from \"foo\"', but the ids of 'Foo' will be unique for each SourceFile, given that it is indeed separate local bindings of Foo,\n * and they aren't equal to each other. However, we're merging ImportDeclarations here, and so, structurally identical imported bindings should share ids. This function makes sure to generate an id\n * that is shared for structurally identical NamespaceImports\n */\nfunction getIdForNamespaceImportName(options: GetSymbolAtLocationOptions & {node: TS.Identifier}): number {\n\tconst {node} = options;\n\tconst originalNode = getOriginalNode(node, options.typescript) as TS.Identifier & {parent: TS.NamespaceImport};\n\tconst moduleSpecifier = getParentNode(getParentNode(getParentNode(originalNode))).moduleSpecifier;\n\n\treturn generateRandomIntegerHash({\n\t\tkey: `NamespaceImport:${node.text}:${moduleSpecifier == null || !options.typescript.isStringLiteralLike(moduleSpecifier) ? generateRandomHash() : moduleSpecifier.text}`,\n\t\tlength: 100\n\t});\n}\n\n/**\n * According to TypeScript, multiple import specifiers, identically named, from the same module may have different IDs, because they are all local bindings in their respective modules.\n * For example, in files a.ts and b.ts, both may include 'import {foo} from \"foo\"', but the ids of 'foo' will be unique for each SourceFile, given that it is indeed separate local bindings of foo,\n * and they aren't equal to each other. However, we're merging ImportDeclarations here, and so, structurally identical imported bindings should share ids. This function makes sure to generate an id\n * that is shared for structurally identical ImportSpecifiers\n */\nfunction getIdForImportSpecifier(options: GetSymbolAtLocationOptions & {node: TS.Identifier}): number {\n\tconst {node} = options;\n\tconst originalNode = getOriginalNode(node, options.typescript) as TS.Identifier & {parent: TS.ImportSpecifier};\n\tconst moduleSpecifier = getParentNode(getParentNode(getParentNode(getParentNode(originalNode)))).moduleSpecifier;\n\n\treturn generateRandomIntegerHash({\n\t\tkey: `${node.text === \"default\" ? \"name\" : \"ImportSpecifier\"}:${node.text}:${\n\t\t\tmoduleSpecifier == null || !options.typescript.isStringLiteralLike(moduleSpecifier) ? generateRandomHash() : moduleSpecifier.text\n\t\t}`,\n\t\tlength: 100\n\t});\n}\n\n/**\n * According to TypeScript, multiple default imports, identically named, from the same module may have different IDs, because they are all local bindings in their respective modules.\n * For example, in files a.ts and b.ts, both may include 'import Foo from \"foo\"', but the ids of 'Foo' will be unique for each SourceFile, given that it is indeed separate local bindings of Foo,\n * and they aren't equal to each other. However, we're merging ImportDeclarations here, and so, structurally identical imported bindings should share ids. This function makes sure to generate an id\n * that is shared for structurally identical imported names\n */\nfunction getIdForImportedName(options: GetSymbolAtLocationOptions & {node: TS.Identifier}): number {\n\tconst {node} = options;\n\tconst originalNode = getOriginalNode(node, options.typescript) as TS.Identifier & {parent: TS.ImportClause};\n\tconst moduleSpecifier = getParentNode(getParentNode(originalNode)).moduleSpecifier;\n\n\treturn generateRandomIntegerHash({\n\t\tkey: `name:${node.text}:${moduleSpecifier == null || !options.typescript.isStringLiteralLike(moduleSpecifier) ? generateRandomHash() : moduleSpecifier.text}`,\n\t\tlength: 100\n\t});\n}\n\nfunction getIdForStructurallyEqualNode(options: GetSymbolAtLocationOptions): number | undefined {\n\tif (options.typescript.isImportSpecifier(options.node)) {\n\t\treturn getIdForImportSpecifier({...options, node: options.node.name});\n\t} else if (options.typescript.isNamespaceImport(options.node)) {\n\t\treturn getIdForNamespaceImportName({...options, node: options.node.name});\n\t} else if (options.typescript.isImportClause(options.node) && options.node.name != null) {\n\t\treturn getIdForImportedName({...options, node: options.node.name});\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function getIdForNode(options: GetSymbolAtLocationOptions): number | undefined {\n\tif (options.typescript.isExportSpecifier(options.node)) {\n\t\tconst aliasedDeclaration = getAliasedDeclaration(options);\n\t\tif (aliasedDeclaration != null && (aliasedDeclaration as SafeNode) !== options.node) {\n\t\t\treturn getIdForNode({...options, node: aliasedDeclaration});\n\t\t}\n\t}\n\n\tconst importRelatedId = getIdForStructurallyEqualNode(options);\n\tif (importRelatedId != null) {\n\t\treturn importRelatedId;\n\t} else if (options.typescript.isIdentifier(options.node)) {\n\t\tconst parent = getParentNode(options.node) ?? getParentNode(getOriginalNode(options.node, options.typescript));\n\n\t\tif (parent != null) {\n\t\t\tconst parentImportRelatedId = getIdForStructurallyEqualNode({...options, node: parent});\n\t\t\tif (parentImportRelatedId != null) return parentImportRelatedId;\n\t\t}\n\t}\n\n\tconst symbol = getSymbolAtLocation(options);\n\tif (symbol == null) return undefined;\n\tlet declaration: ((TS.Declaration | TS.Type) & {id?: number}) | undefined;\n\n\tif (symbol.declarations != null) {\n\t\tdeclaration = symbol.declarations[0];\n\t} else if (symbol.valueDeclaration != null) {\n\t\tdeclaration = symbol.valueDeclaration;\n\t} else if (\"type\" in symbol) {\n\t\tdeclaration = (symbol as {type: TS.Type}).type;\n\t}\n\n\tif (declaration == null) return undefined;\n\n\treturn declaration.id;\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\n\n/**\n * Deconflicts the given ClassDeclaration.\n */\nexport function deconflictClassDeclaration(options: DeconflicterVisitorOptions<TS.ClassDeclaration>): TS.ClassDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript, sourceFile, declarationToDeconflictedBindingMap} = options;\n\n\tlet nameContResult: TS.ClassDeclaration[\"name\"];\n\n\tif (node.name != null) {\n\t\tconst id = getIdForNode(options);\n\t\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\t\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\t\tnameContResult = node.name;\n\t\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, node.name.text);\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t\t} else {\n\t\t\t// Otherwise, deconflict it\n\t\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\t\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t\t}\n\t}\n\n\t// The Type parameters, as well as the heritage clauses share the same lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst typeParametersContResult = node.typeParameters == null ? undefined : node.typeParameters.map(typeParameter => continuation(typeParameter, nextContinuationOptions));\n\tconst heritageClausesContResult = node.heritageClauses == null ? undefined : node.heritageClauses.map(heritageClause => continuation(heritageClause, nextContinuationOptions));\n\tconst membersContResult = node.members.map(member => continuation(member, {lexicalEnvironment}));\n\n\tconst isIdentical =\n\t\tnameContResult === node.name &&\n\t\tnodeArraysAreEqual(typeParametersContResult, node.typeParameters) &&\n\t\tnodeArraysAreEqual(heritageClausesContResult, node.heritageClauses) &&\n\t\tnodeArraysAreEqual(membersContResult, node.members);\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(\n\t\ttypescript.updateClassDeclaration(node, node.decorators, node.modifiers, nameContResult, typeParametersContResult, heritageClausesContResult, membersContResult),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\n\n/**\n * Deconflicts the given ClassExpression.\n */\nexport function deconflictClassExpression(options: DeconflicterVisitorOptions<TS.ClassExpression>): TS.ClassExpression | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript, sourceFile, declarationToDeconflictedBindingMap} = options;\n\tlet nameContResult: TS.ClassExpression[\"name\"];\n\n\tif (node.name != null) {\n\t\tconst id = getIdForNode(options);\n\t\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\t\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\t\tnameContResult = node.name;\n\t\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, node.name.text);\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t\t} else {\n\t\t\t// Otherwise, deconflict it\n\t\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\t\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t\t}\n\t}\n\n\t// The Type parameters, as well as the heritage clauses share the same lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst typeParametersContResult = node.typeParameters == null ? undefined : node.typeParameters.map(typeParameter => continuation(typeParameter, nextContinuationOptions));\n\tconst heritageClausesContResult = node.heritageClauses == null ? undefined : node.heritageClauses.map(heritageClause => continuation(heritageClause, nextContinuationOptions));\n\tconst membersContResult = node.members.map(member => continuation(member, {lexicalEnvironment}));\n\n\tconst isIdentical =\n\t\tnameContResult === node.name &&\n\t\tnodeArraysAreEqual(typeParametersContResult, node.typeParameters) &&\n\t\tnodeArraysAreEqual(heritageClausesContResult, node.heritageClauses) &&\n\t\tnodeArraysAreEqual(membersContResult, node.members);\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(\n\t\ttypescript.updateClassExpression(node, node.modifiers, nameContResult, typeParametersContResult, heritageClausesContResult, membersContResult),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\n\n/**\n * Deconflicts the given EnumDeclaration.\n */\nexport function deconflictEnumDeclaration(options: DeconflicterVisitorOptions<TS.EnumDeclaration>): TS.EnumDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript, sourceFile, declarationToDeconflictedBindingMap} = options;\n\tlet nameContResult: TS.EnumDeclaration[\"name\"];\n\tconst id = getIdForNode(options);\n\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\tnameContResult = node.name;\n\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, node.name.text);\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t} else {\n\t\t// Otherwise, deconflict it\n\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t}\n\n\tconst membersContResult = node.members.map(member => continuation(member, {lexicalEnvironment}));\n\n\tconst isIdentical = nameContResult === node.name && nodeArraysAreEqual(membersContResult, node.members);\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateEnumDeclaration(node, node.decorators, node.modifiers, nameContResult, membersContResult), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given EnumMember.\n */\nexport function deconflictEnumMember(options: DeconflicterVisitorOptions<TS.EnumMember>): TS.EnumMember | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\tconst nameContResult = typescript.isIdentifier(node.name) ? node.name : continuation(node.name, {lexicalEnvironment});\n\tconst initializerContResult = node.initializer == null ? undefined : continuation(node.initializer, {lexicalEnvironment});\n\n\tconst isIdentical = nameContResult === node.name && initializerContResult === node.initializer;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateEnumMember(node, nameContResult, initializerContResult), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given ExportSpecifier.\n */\nexport function deconflictExportSpecifier(options: DeconflicterVisitorOptions<TS.ExportSpecifier>): TS.ExportSpecifier | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\tconst propertyName = node.propertyName ?? node.name;\n\tconst propertyNameContResult = continuation(propertyName, {lexicalEnvironment});\n\n\t// If the ExportSpecifier is something like '{Foo}' but 'Foo' has been deconflicted in this SourceFile to something else,\n\t// we should re-write it to something like '{Foo$0 as Foo}'\n\tif (propertyNameContResult !== propertyName) {\n\t\treturn preserveMeta(typescript.updateExportSpecifier(node, propertyNameContResult.text === node.name.text ? undefined : propertyNameContResult, node.name), node, options);\n\t}\n\n\treturn node;\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\n\n/**\n * Deconflicts the given FunctionDeclaration.\n */\nexport function deconflictFunctionDeclaration(options: DeconflicterVisitorOptions<TS.FunctionDeclaration>): TS.FunctionDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript, sourceFile, declarationToDeconflictedBindingMap} = options;\n\tlet nameContResult: TS.FunctionDeclaration[\"name\"];\n\n\tif (node.name != null) {\n\t\tconst id = getIdForNode(options);\n\t\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\t\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\t\tnameContResult = node.name;\n\t\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, node.name.text);\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t\t} else {\n\t\t\t// Otherwise, deconflict it\n\t\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\t\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t\t}\n\t}\n\n\t// The body, type, type parameters, as well as the parameters share the same lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst typeParametersContResult = node.typeParameters == null ? undefined : node.typeParameters.map(typeParameter => continuation(typeParameter, nextContinuationOptions));\n\tconst parametersContResult = node.parameters.map(parameter => continuation(parameter, nextContinuationOptions));\n\tconst typeContResult = node.type == null ? undefined : continuation(node.type, nextContinuationOptions);\n\tconst bodyContResult = node.body == null ? undefined : continuation(node.body, nextContinuationOptions);\n\n\tconst isIdentical =\n\t\tnameContResult === node.name &&\n\t\tnodeArraysAreEqual(typeParametersContResult, node.typeParameters) &&\n\t\tnodeArraysAreEqual(parametersContResult, node.parameters) &&\n\t\ttypeContResult === node.type &&\n\t\tbodyContResult === node.body;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(\n\t\ttypescript.updateFunctionDeclaration(\n\t\t\tnode,\n\t\t\tnode.decorators,\n\t\t\tnode.modifiers,\n\t\t\tnode.asteriskToken,\n\t\t\tnameContResult,\n\t\t\ttypeParametersContResult,\n\t\t\tparametersContResult,\n\t\t\ttypeContResult,\n\t\t\tbodyContResult\n\t\t),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\n\n/**\n * Deconflicts the given FunctionExpression.\n */\nexport function deconflictFunctionExpression(options: DeconflicterVisitorOptions<TS.FunctionExpression>): TS.FunctionExpression | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript, sourceFile, declarationToDeconflictedBindingMap} = options;\n\tlet nameContResult: TS.FunctionExpression[\"name\"];\n\n\tif (node.name != null) {\n\t\tconst id = getIdForNode(options);\n\t\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\t\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\t\tnameContResult = node.name;\n\t\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, node.name.text);\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t\t} else {\n\t\t\t// Otherwise, deconflict it\n\t\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\t\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t\t}\n\t}\n\n\t// The body, type, type parameters, as well as the parameters share the same lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst typeParametersContResult = node.typeParameters == null ? undefined : node.typeParameters.map(typeParameter => continuation(typeParameter, nextContinuationOptions));\n\tconst parametersContResult = node.parameters.map(parameter => continuation(parameter, nextContinuationOptions));\n\tconst typeContResult = node.type == null ? undefined : continuation(node.type, nextContinuationOptions);\n\tconst bodyContResult = continuation(node.body, nextContinuationOptions);\n\n\tconst isIdentical =\n\t\tnameContResult === node.name &&\n\t\tnodeArraysAreEqual(typeParametersContResult, node.typeParameters) &&\n\t\tnodeArraysAreEqual(parametersContResult, node.parameters) &&\n\t\ttypeContResult === node.type &&\n\t\tbodyContResult === node.body;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(\n\t\ttypescript.updateFunctionExpression(node, node.modifiers, node.asteriskToken, nameContResult, typeParametersContResult, parametersContResult, typeContResult, bodyContResult),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given GetAccessorDeclaration.\n */\nexport function deconflictGetAccessorDeclaration(options: DeconflicterVisitorOptions<TS.GetAccessorDeclaration>): TS.GetAccessorDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\tconst nameContResult = typescript.isIdentifier(node.name) ? node.name : continuation(node.name, {lexicalEnvironment});\n\n\t// The body, as well as the parameters share the same lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst parametersContResult = node.parameters.map(parameter => continuation(parameter, nextContinuationOptions));\n\tconst typeContResult = node.type == null ? undefined : continuation(node.type, nextContinuationOptions);\n\tconst bodyContResult = node.body == null ? undefined : continuation(node.body, nextContinuationOptions);\n\n\tconst isIdentical = nameContResult === node.name && nodeArraysAreEqual(parametersContResult, node.parameters) && typeContResult === node.type && bodyContResult === node.body;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateGetAccessor(node, node.decorators, node.modifiers, nameContResult, parametersContResult, typeContResult, bodyContResult), node, options);\n}\n","import {LexicalEnvironment} from \"../transformers/deconflicter/deconflicter-options\";\n\nexport function getBindingFromLexicalEnvironment(lexicalEnvironment: LexicalEnvironment, key: string): string | undefined {\n\tif (lexicalEnvironment.bindings.has(key)) {\n\t\treturn lexicalEnvironment.bindings.get(key)!.value;\n\t} else if (lexicalEnvironment.parent != null) {\n\t\treturn getBindingFromLexicalEnvironment(lexicalEnvironment.parent, key);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {getBindingFromLexicalEnvironment} from \"../../../util/get-binding-from-lexical-environment\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getBestDeclaration} from \"../../../util/get-aliased-declaration\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\n\n/**\n * Deconflicts the given Identifier.\n */\nexport function deconflictIdentifier(options: DeconflicterVisitorOptions<TS.Identifier>): TS.Identifier | undefined {\n\tconst {node, lexicalEnvironment, declarationToDeconflictedBindingMap, typescript} = options;\n\tconst id = getIdForNode({...options, node: getBestDeclaration(options) ?? node});\n\n\tconst envLookupResult = getBindingFromLexicalEnvironment(lexicalEnvironment, node.text);\n\tconst deconflictedBindingMapLookupResult = id == null ? undefined : declarationToDeconflictedBindingMap.get(id);\n\tconst textResult = deconflictedBindingMapLookupResult != null && deconflictedBindingMapLookupResult.startsWith(node.text) ? deconflictedBindingMapLookupResult : envLookupResult;\n\tconst isIdentical = textResult === node.text;\n\n\tif (isIdentical || textResult == null) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.createIdentifier(textResult), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\n\n/**\n * Deconflicts the given ImportClause.\n */\nexport function deconflictImportClause(options: DeconflicterVisitorOptions<TS.ImportClause>): TS.ImportClause | undefined {\n\tconst {node, continuation, lexicalEnvironment, sourceFile, typescript, declarationToDeconflictedBindingMap} = options;\n\tlet nameContResult: TS.ImportClause[\"name\"];\n\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\tconst id = getIdForNode({...options});\n\n\tif (node.name != null) {\n\t\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\t\tnameContResult = node.name;\n\n\t\t\tif (id != null) {\n\t\t\t\tdeclarationToDeconflictedBindingMap.set(id, node.name.text);\n\t\t\t}\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t\t} else {\n\t\t\t// Otherwise, deconflict it\n\t\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\n\t\t\tif (id != null) {\n\t\t\t\tdeclarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\t\t\t}\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t\t}\n\t}\n\n\tconst namedBindingsContResult = node.namedBindings == null ? undefined : continuation(node.namedBindings, {lexicalEnvironment});\n\n\tconst isIdentical = nameContResult === node.name && namedBindingsContResult === node.namedBindings;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateImportClause(node, nameContResult, namedBindingsContResult, node.isTypeOnly), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\n\n/**\n * Deconflicts the given ImportSpecifier.\n */\nexport function deconflictImportSpecifier(options: DeconflicterVisitorOptions<TS.ImportSpecifier>): TS.ImportSpecifier | undefined {\n\tconst {node, lexicalEnvironment, typescript, sourceFile, declarationToDeconflictedBindingMap} = options;\n\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\tconst id = getIdForNode(options);\n\n\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\tif (id != null) {\n\t\t\tdeclarationToDeconflictedBindingMap.set(id, node.name.text);\n\t\t}\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t\treturn node;\n\t} else {\n\t\t// Otherwise, deconflict it\n\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\n\t\tif (id != null) {\n\t\t\tdeclarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\t\t}\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\n\t\t// If the ImportSpecifier is something like '{Foo}' but 'Foo' is already bound in this SourceFile,\n\t\t// we should re-write it to something like '{Foo as Foo$0}'\n\t\tconst propertyName = node.propertyName ?? node.name;\n\t\treturn preserveMeta(typescript.updateImportSpecifier(node, typescript.createIdentifier(propertyName.text), typescript.createIdentifier(uniqueBinding)), node, options);\n\t}\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\n\n/**\n * Deconflicts the given InterfaceDeclaration.\n */\nexport function deconflictInterfaceDeclaration(options: DeconflicterVisitorOptions<TS.InterfaceDeclaration>): TS.InterfaceDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript, sourceFile, declarationToDeconflictedBindingMap} = options;\n\tlet nameContResult: TS.InterfaceDeclaration[\"name\"];\n\tconst id = getIdForNode(options);\n\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\tnameContResult = node.name;\n\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, node.name.text);\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t} else {\n\t\t// Otherwise, deconflict it\n\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t}\n\n\t// The Type parameters, as well as the heritage clauses share the same lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst typeParametersContResult = node.typeParameters == null ? undefined : node.typeParameters.map(typeParameter => continuation(typeParameter, nextContinuationOptions));\n\tconst heritageClausesContResult = node.heritageClauses == null ? undefined : node.heritageClauses.map(heritageClause => continuation(heritageClause, nextContinuationOptions));\n\tconst membersContResult = node.members.map(member => continuation(member, {lexicalEnvironment}));\n\n\tconst isIdentical =\n\t\tnameContResult === node.name &&\n\t\tnodeArraysAreEqual(typeParametersContResult, node.typeParameters) &&\n\t\tnodeArraysAreEqual(heritageClausesContResult, node.heritageClauses) &&\n\t\tnodeArraysAreEqual(membersContResult, node.members);\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(\n\t\ttypescript.updateInterfaceDeclaration(node, node.decorators, node.modifiers, nameContResult, typeParametersContResult, heritageClausesContResult, membersContResult),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given MappedTypeNode.\n */\nexport function deconflictMappedTypeNode(options: DeconflicterVisitorOptions<TS.MappedTypeNode>): TS.MappedTypeNode | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\t// The TypeParameter has its own lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst typeParameterContResult = continuation(node.typeParameter, nextContinuationOptions);\n\tconst typeContResult = node.type == null ? undefined : continuation(node.type, nextContinuationOptions);\n\n\tconst isIdentical = typeParameterContResult === node.typeParameter && typeContResult === node.type;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateMappedTypeNode(node, node.readonlyToken, typeParameterContResult, node.questionToken, typeContResult), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given MethodDeclaration.\n */\nexport function deconflictMethodDeclaration(options: DeconflicterVisitorOptions<TS.MethodDeclaration>): TS.MethodDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\tconst nameContResult = typescript.isIdentifier(node.name) ? node.name : continuation(node.name, {lexicalEnvironment});\n\n\t// The body, type, type parameters, as well as the parameters share the same lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst typeParametersContResult = node.typeParameters == null ? undefined : node.typeParameters.map(typeParameter => continuation(typeParameter, nextContinuationOptions));\n\tconst parametersContResult = node.parameters.map(parameter => continuation(parameter, nextContinuationOptions));\n\tconst typeContResult = node.type == null ? undefined : continuation(node.type, nextContinuationOptions);\n\tconst bodyContResult = node.body == null ? undefined : continuation(node.body, nextContinuationOptions);\n\n\tconst isIdentical =\n\t\tnameContResult === node.name &&\n\t\tnodeArraysAreEqual(typeParametersContResult, node.typeParameters) &&\n\t\tnodeArraysAreEqual(parametersContResult, node.parameters) &&\n\t\ttypeContResult === node.type &&\n\t\tbodyContResult === node.body;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(\n\t\ttypescript.updateMethod(\n\t\t\tnode,\n\t\t\tnode.decorators,\n\t\t\tnode.modifiers,\n\t\t\tnode.asteriskToken,\n\t\t\tnameContResult,\n\t\t\tnode.questionToken,\n\t\t\ttypeParametersContResult,\n\t\t\tparametersContResult,\n\t\t\ttypeContResult,\n\t\t\tbodyContResult\n\t\t),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given IndexSignatureDeclaration.\n */\nexport function deconflictIndexSignatureDeclaration(options: DeconflicterVisitorOptions<TS.IndexSignatureDeclaration>): TS.IndexSignatureDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\t// The whole thing has its own lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst nameContResult = node.name == null ? undefined : typescript.isIdentifier(node.name) ? node.name : continuation(node.name, nextContinuationOptions);\n\tconst typeParametersContResult = node.typeParameters == null ? undefined : node.typeParameters.map(typeParameter => continuation(typeParameter, nextContinuationOptions));\n\tconst parametersContResult = node.parameters.map(parameter => continuation(parameter, nextContinuationOptions));\n\tconst typeContResult = node.type == null ? undefined : continuation(node.type, nextContinuationOptions);\n\n\tconst isIdentical =\n\t\tnameContResult === node.name &&\n\t\tnodeArraysAreEqual(typeParametersContResult, node.typeParameters) &&\n\t\tnodeArraysAreEqual(parametersContResult, node.parameters) &&\n\t\ttypeContResult === node.type;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateIndexSignature(node, node.decorators, node.modifiers, parametersContResult, typeContResult!), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given MethodSignature.\n */\nexport function deconflictMethodSignature(options: DeconflicterVisitorOptions<TS.MethodSignature>): TS.MethodSignature | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\tconst nameContResult = typescript.isIdentifier(node.name) ? node.name : continuation(node.name, {lexicalEnvironment});\n\n\t// The type, type parameters, as well as the parameters share the same lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst typeParametersContResult =\n\t\tnode.typeParameters == null ? undefined : typescript.createNodeArray(node.typeParameters.map(typeParameter => continuation(typeParameter, nextContinuationOptions)));\n\tconst parametersContResult = typescript.createNodeArray(node.parameters.map(parameter => continuation(parameter, nextContinuationOptions)));\n\tconst typeContResult = node.type == null ? undefined : continuation(node.type, nextContinuationOptions);\n\n\tconst isIdentical =\n\t\tnameContResult === node.name &&\n\t\tnodeArraysAreEqual(typeParametersContResult, node.typeParameters) &&\n\t\tnodeArraysAreEqual(parametersContResult, node.parameters) &&\n\t\ttypeContResult === node.type;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateMethodSignature(node, typeParametersContResult, parametersContResult, typeContResult, nameContResult, node.questionToken), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\n\n/**\n * Deconflicts the given ModuleDeclaration.\n */\nexport function deconflictModuleDeclaration(options: DeconflicterVisitorOptions<TS.ModuleDeclaration>): TS.ModuleDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript, sourceFile, declarationToDeconflictedBindingMap} = options;\n\tlet nameContResult: TS.ModuleDeclaration[\"name\"];\n\tconst id = getIdForNode(options);\n\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\tnameContResult = node.name;\n\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, node.name.text);\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t} else {\n\t\t// Otherwise, deconflict it\n\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t}\n\n\t// The body has its own lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\tconst bodyContResult = node.body == null ? undefined : continuation(node.body, nextContinuationOptions);\n\n\tconst isIdentical = nameContResult === node.name && bodyContResult === node.body;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateModuleDeclaration(node, node.decorators, node.modifiers, nameContResult, bodyContResult), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\n\n/**\n * Deconflicts the given NamespaceImport.\n */\nexport function deconflictNamespaceImport(options: DeconflicterVisitorOptions<TS.NamespaceImport>): TS.NamespaceImport | undefined {\n\tconst {node, lexicalEnvironment, sourceFile, typescript, declarationToDeconflictedBindingMap} = options;\n\tlet nameContResult: TS.NamespaceImport[\"name\"];\n\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\tconst id = getIdForNode(options);\n\n\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\tnameContResult = node.name;\n\n\t\tif (id != null) {\n\t\t\tdeclarationToDeconflictedBindingMap.set(id, node.name.text);\n\t\t}\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t} else {\n\t\t// Otherwise, deconflict it\n\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\n\t\tif (id != null) {\n\t\t\tdeclarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\t\t}\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t}\n\n\tconst isIdentical = nameContResult === node.name;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateNamespaceImport(node, nameContResult), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given ParameterDeclaration.\n */\nexport function deconflictParameterDeclaration(options: DeconflicterVisitorOptions<TS.ParameterDeclaration>): TS.ParameterDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\tconst nameContResult = typescript.isIdentifier(node.name) ? node.name : continuation(node.name, {lexicalEnvironment});\n\n\tconst typeContResult = node.type == null ? undefined : continuation(node.type, {lexicalEnvironment});\n\tconst initializerContResult = node.initializer == null ? undefined : continuation(node.initializer, {lexicalEnvironment});\n\n\tconst isIdentical = nameContResult === node.name && typeContResult === node.type && initializerContResult === node.initializer;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(\n\t\ttypescript.updateParameter(node, node.decorators, node.modifiers, node.dotDotDotToken, nameContResult, node.questionToken, typeContResult, initializerContResult),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given PropertyAssignment.\n */\nexport function deconflictPropertyAssignment(options: DeconflicterVisitorOptions<TS.PropertyAssignment>): TS.PropertyAssignment | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\tconst nameContResult = typescript.isIdentifier(node.name) ? node.name : continuation(node.name, {lexicalEnvironment});\n\tconst initializerContResult = node.initializer == null ? undefined : continuation(node.initializer, {lexicalEnvironment});\n\n\tconst isIdentical = nameContResult === node.name && initializerContResult === node.initializer;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updatePropertyAssignment(node, nameContResult, initializerContResult!), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given PropertyDeclaration.\n */\nexport function deconflictPropertyDeclaration(options: DeconflicterVisitorOptions<TS.PropertyDeclaration>): TS.PropertyDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\tconst nameContResult = typescript.isIdentifier(node.name) ? node.name : continuation(node.name, {lexicalEnvironment});\n\n\tconst typeContResult = node.type == null ? undefined : continuation(node.type, {lexicalEnvironment});\n\tconst initializerContResult = node.initializer == null ? undefined : continuation(node.initializer, {lexicalEnvironment});\n\n\tconst isIdentical = nameContResult === node.name && typeContResult === node.type && initializerContResult === node.initializer;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(\n\t\ttypescript.updateProperty(node, node.decorators, node.modifiers, nameContResult, node.questionToken ?? node.exclamationToken, typeContResult, initializerContResult),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given PropertySignature.\n */\nexport function deconflictPropertySignature(options: DeconflicterVisitorOptions<TS.PropertySignature>): TS.PropertySignature | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\tconst nameContResult = typescript.isIdentifier(node.name) ? node.name : continuation(node.name, {lexicalEnvironment});\n\n\tconst typeContResult = node.type == null ? undefined : continuation(node.type, {lexicalEnvironment});\n\tconst initializerContResult = node.initializer == null ? undefined : continuation(node.initializer, {lexicalEnvironment});\n\n\tconst isIdentical = nameContResult === node.name && typeContResult === node.type && initializerContResult === node.initializer;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updatePropertySignature(node, node.modifiers, nameContResult, node.questionToken, typeContResult, initializerContResult), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given SetAccessorDeclaration.\n */\nexport function deconflictSetAccessorDeclaration(options: DeconflicterVisitorOptions<TS.SetAccessorDeclaration>): TS.SetAccessorDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\tconst nameContResult = typescript.isIdentifier(node.name) ? node.name : continuation(node.name, {lexicalEnvironment});\n\n\t// The body, as well as the parameters share the same lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst parametersContResult = node.parameters.map(parameter => continuation(parameter, nextContinuationOptions));\n\tconst bodyContResult = node.body == null ? undefined : continuation(node.body, nextContinuationOptions);\n\n\tconst isIdentical = nameContResult === node.name && nodeArraysAreEqual(parametersContResult, node.parameters) && bodyContResult === node.body;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\treturn preserveMeta(typescript.updateSetAccessor(node, node.decorators, node.modifiers, nameContResult, parametersContResult, bodyContResult), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\n\n/**\n * Deconflicts the given TypeAliasDeclaration.\n */\nexport function deconflictTypeAliasDeclaration(options: DeconflicterVisitorOptions<TS.TypeAliasDeclaration>): TS.TypeAliasDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript, sourceFile, declarationToDeconflictedBindingMap} = options;\n\tlet nameContResult: TS.TypeAliasDeclaration[\"name\"];\n\tconst id = getIdForNode(options);\n\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\tnameContResult = node.name;\n\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, node.name.text);\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t} else {\n\t\t// Otherwise, deconflict it\n\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t}\n\n\t// The Type parameters, as well as the initializer, share the same lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst typeParametersContResult = node.typeParameters == null ? undefined : node.typeParameters.map(typeParameter => continuation(typeParameter, nextContinuationOptions));\n\tconst typeContResult = continuation(node.type, nextContinuationOptions);\n\n\tconst isIdentical = nameContResult === node.name && nodeArraysAreEqual(typeParametersContResult, node.typeParameters) && typeContResult === node.type;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateTypeAliasDeclaration(node, node.decorators, node.modifiers, nameContResult, typeParametersContResult, typeContResult), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\n\n/**\n * Deconflicts the given TypeParameterDeclaration.\n */\nexport function deconflictTypeParameterDeclaration(options: DeconflicterVisitorOptions<TS.TypeParameterDeclaration>): TS.TypeParameterDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript, sourceFile, declarationToDeconflictedBindingMap} = options;\n\tlet nameContResult: TS.TypeParameterDeclaration[\"name\"];\n\tconst id = getIdForNode(options);\n\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\tnameContResult = node.name;\n\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, node.name.text);\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t} else {\n\t\t// Otherwise, deconflict it\n\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\n\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t}\n\n\tconst constraintContResult = node.constraint == null ? undefined : continuation(node.constraint, {lexicalEnvironment});\n\tconst defaultContResult = node.default == null ? undefined : continuation(node.default, {lexicalEnvironment});\n\n\tconst isIdentical = constraintContResult === node.constraint && defaultContResult === node.default;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateTypeParameterDeclaration(node, nameContResult, constraintContResult, defaultContResult), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {addBindingToLexicalEnvironment} from \"../../../util/add-binding-to-lexical-environment\";\nimport {isIdentifierFree} from \"../../../util/is-identifier-free\";\nimport {generateUniqueBinding} from \"../../../util/generate-unique-binding\";\nimport {getIdForNode} from \"../../../util/get-id-for-node\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {getOriginalSourceFile} from \"../../../util/get-original-source-file\";\n\n/**\n * Deconflicts the given VariableDeclaration.\n */\nexport function deconflictVariableDeclaration(options: DeconflicterVisitorOptions<TS.VariableDeclaration>): TS.VariableDeclaration | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript, sourceFile, declarationToDeconflictedBindingMap} = options;\n\tlet nameContResult: TS.VariableDeclaration[\"name\"];\n\n\tif (typescript.isIdentifier(node.name)) {\n\t\tconst id = getIdForNode(options);\n\t\tconst originalSourceFile = getOriginalSourceFile(node, sourceFile, typescript);\n\n\t\tif (isIdentifierFree(lexicalEnvironment, node.name.text, originalSourceFile.fileName)) {\n\t\t\tnameContResult = node.name;\n\t\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, node.name.text);\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, node.name.text);\n\t\t} else {\n\t\t\t// Otherwise, deconflict it\n\t\t\tconst uniqueBinding = generateUniqueBinding(lexicalEnvironment, node.name.text);\n\t\t\tnameContResult = typescript.createIdentifier(uniqueBinding);\n\t\t\tif (id != null) declarationToDeconflictedBindingMap.set(id, uniqueBinding);\n\n\t\t\t// The name creates a new local binding within the current LexicalEnvironment\n\t\t\taddBindingToLexicalEnvironment(lexicalEnvironment, originalSourceFile.fileName, uniqueBinding, node.name.text);\n\t\t}\n\t} else {\n\t\t// Otherwise, deconflict it\n\t\tnameContResult = continuation(node.name, {lexicalEnvironment});\n\t}\n\n\tconst typeContResult = node.type == null ? undefined : continuation(node.type, {lexicalEnvironment});\n\tconst initializerContResult = node.initializer == null ? undefined : continuation(node.initializer, {lexicalEnvironment});\n\n\tconst isIdentical = nameContResult === node.name && typeContResult === node.type && initializerContResult === node.initializer;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateVariableDeclaration(node, nameContResult, typeContResult, initializerContResult), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {cloneLexicalEnvironment} from \"../../../util/clone-lexical-environment\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\nimport {ContinuationOptions} from \"../deconflicter-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\n/**\n * Deconflicts the given FunctionTypeNode.\n */\nexport function deconflictFunctionTypeNode(options: DeconflicterVisitorOptions<TS.FunctionTypeNode>): TS.FunctionTypeNode | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\tlet nameContResult: TS.FunctionTypeNode[\"name\"];\n\n\t// The body, type, type parameters, as well as the parameters share the same lexical environment\n\tconst nextContinuationOptions: ContinuationOptions = {lexicalEnvironment: cloneLexicalEnvironment(lexicalEnvironment)};\n\n\tconst typeParametersContResult =\n\t\tnode.typeParameters == null ? undefined : typescript.createNodeArray(node.typeParameters.map(typeParameter => continuation(typeParameter, nextContinuationOptions)));\n\tconst parametersContResult = typescript.createNodeArray(node.parameters.map(parameter => continuation(parameter, nextContinuationOptions)));\n\tconst typeContResult = node.type == null ? undefined : continuation(node.type, nextContinuationOptions);\n\n\tconst isIdentical =\n\t\tnameContResult === node.name &&\n\t\tnodeArraysAreEqual(typeParametersContResult, node.typeParameters) &&\n\t\tnodeArraysAreEqual(parametersContResult, node.parameters) &&\n\t\ttypeContResult === node.type;\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateFunctionTypeNode(node, typeParametersContResult, parametersContResult, typeContResult), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"../deconflicter-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {nodeArraysAreEqual} from \"../../../util/node-arrays-are-equal\";\n\n/**\n * Deconflicts the given ImportTypeNode.\n */\nexport function deconflictImportTypeNode(options: DeconflicterVisitorOptions<TS.ImportTypeNode>): TS.ImportTypeNode | undefined {\n\tconst {node, continuation, lexicalEnvironment, typescript} = options;\n\n\tconst argumentContResult = continuation(node.argument, {lexicalEnvironment});\n\tconst typeArgumentsContResult = node.typeArguments == null ? undefined : node.typeArguments.map(typeArgument => continuation(typeArgument, {lexicalEnvironment}));\n\n\tconst isIdentical = argumentContResult === node.argument && nodeArraysAreEqual(typeArgumentsContResult, node.typeArguments);\n\n\tif (isIdentical) {\n\t\treturn node;\n\t}\n\n\treturn preserveMeta(typescript.updateImportTypeNode(node, argumentContResult, node.qualifier, typeArgumentsContResult, node.isTypeOf), node, options);\n}\n","import {DeconflicterVisitorOptions} from \"./deconflicter-visitor-options\";\nimport {TS} from \"../../../../../type/ts\";\nimport {deconflictBindingElement} from \"./visitor/deconflict-binding-element\";\nimport {deconflictClassDeclaration} from \"./visitor/deconflict-class-declaration\";\nimport {deconflictClassExpression} from \"./visitor/deconflict-class-expression\";\nimport {deconflictEnumDeclaration} from \"./visitor/deconflict-enum-declaration\";\nimport {deconflictEnumMember} from \"./visitor/deconflict-enum-member\";\nimport {deconflictExportSpecifier} from \"./visitor/deconflict-export-specifier\";\nimport {deconflictFunctionDeclaration} from \"./visitor/deconflict-function-declaration\";\nimport {deconflictFunctionExpression} from \"./visitor/deconflict-function-expression\";\nimport {deconflictGetAccessorDeclaration} from \"./visitor/deconflict-get-accessor-declaration\";\nimport {deconflictIdentifier} from \"./visitor/deconflict-identifier\";\nimport {deconflictImportClause} from \"./visitor/deconflict-import-clause\";\nimport {deconflictImportSpecifier} from \"./visitor/deconflict-import-specifier\";\nimport {deconflictInterfaceDeclaration} from \"./visitor/deconflict-interface-declaration\";\nimport {deconflictMappedTypeNode} from \"./visitor/deconflict-mapped-type-node\";\nimport {deconflictMethodDeclaration} from \"./visitor/deconflict-method-declaration\";\nimport {deconflictIndexSignatureDeclaration} from \"./visitor/deconflict-index-signature-declaration\";\nimport {deconflictMethodSignature} from \"./visitor/deconflict-method-signature\";\nimport {deconflictModuleDeclaration} from \"./visitor/deconflict-module-declaration\";\nimport {deconflictNamespaceImport} from \"./visitor/deconflict-namespace-import\";\nimport {deconflictParameterDeclaration} from \"./visitor/deconflict-parameter-declaration\";\nimport {deconflictPropertyAssignment} from \"./visitor/deconflict-property-assignment\";\nimport {deconflictPropertyDeclaration} from \"./visitor/deconflict-property-declaration\";\nimport {deconflictPropertySignature} from \"./visitor/deconflict-property-signature\";\nimport {deconflictSetAccessorDeclaration} from \"./visitor/deconflict-set-accessor-declaration\";\nimport {deconflictTypeAliasDeclaration} from \"./visitor/deconflict-type-alias-declaration\";\nimport {deconflictTypeParameterDeclaration} from \"./visitor/deconflict-type-parameter-declaration\";\nimport {deconflictVariableDeclaration} from \"./visitor/deconflict-variable-declaration\";\nimport {ContinuationOptions} from \"./deconflicter-options\";\nimport {SourceFileBundlerVisitorOptions} from \"../source-file-bundler/source-file-bundler-visitor-options\";\nimport {shouldDebugMetrics, shouldDebugSourceFile} from \"../../../../../util/is-debug/should-debug\";\nimport {logMetrics} from \"../../../../../util/logging/log-metrics\";\nimport {logTransformer} from \"../../../../../util/logging/log-transformer\";\nimport {preserveMeta} from \"../../util/clone-node-with-meta\";\nimport {deconflictFunctionTypeNode} from \"./visitor/deconflict-function-type\";\nimport {deconflictImportTypeNode} from \"./visitor/deconflict-import-type-node\";\n\n/**\n * Deconflicts the given Node. Everything but LValues will be updated here\n */\nfunction deconflictNode({node, ...options}: DeconflicterVisitorOptions<TS.Node>): TS.Node | undefined {\n\tif (options.typescript.isBindingElement(node)) {\n\t\treturn deconflictBindingElement({node, ...options});\n\t} else if (options.typescript.isClassDeclaration(node)) {\n\t\treturn deconflictClassDeclaration({node, ...options});\n\t} else if (options.typescript.isClassExpression(node)) {\n\t\treturn deconflictClassExpression({node, ...options});\n\t} else if (options.typescript.isEnumDeclaration(node)) {\n\t\treturn deconflictEnumDeclaration({node, ...options});\n\t} else if (options.typescript.isEnumMember(node)) {\n\t\treturn deconflictEnumMember({node, ...options});\n\t} else if (options.typescript.isExportSpecifier(node)) {\n\t\treturn deconflictExportSpecifier({node, ...options});\n\t} else if (options.typescript.isFunctionDeclaration(node)) {\n\t\treturn deconflictFunctionDeclaration({node, ...options});\n\t} else if (options.typescript.isFunctionExpression(node)) {\n\t\treturn deconflictFunctionExpression({node, ...options});\n\t} else if (options.typescript.isFunctionTypeNode(node)) {\n\t\treturn deconflictFunctionTypeNode({node, ...options});\n\t} else if (options.typescript.isGetAccessorDeclaration(node)) {\n\t\treturn deconflictGetAccessorDeclaration({node, ...options});\n\t} else if (options.typescript.isIdentifier(node)) {\n\t\treturn deconflictIdentifier({node, ...options});\n\t} else if (options.typescript.isImportClause(node)) {\n\t\treturn deconflictImportClause({node, ...options});\n\t} else if (options.typescript.isImportSpecifier(node)) {\n\t\treturn deconflictImportSpecifier({node, ...options});\n\t} else if (options.typescript.isInterfaceDeclaration(node)) {\n\t\treturn deconflictInterfaceDeclaration({node, ...options});\n\t}\n\n\t// MappedTypeNodes may not be part of the current Typescript version, hence the optional call\n\telse if (options.typescript.isMappedTypeNode?.(node)) {\n\t\treturn deconflictMappedTypeNode({node, ...options});\n\t} else if (options.typescript.isMethodDeclaration(node)) {\n\t\treturn deconflictMethodDeclaration({node, ...options});\n\t} else if (options.typescript.isIndexSignatureDeclaration(node)) {\n\t\treturn deconflictIndexSignatureDeclaration({node, ...options});\n\t} else if (options.typescript.isMethodSignature(node)) {\n\t\treturn deconflictMethodSignature({node, ...options});\n\t} else if (options.typescript.isModuleDeclaration(node)) {\n\t\treturn deconflictModuleDeclaration({node, ...options});\n\t} else if (options.typescript.isNamespaceImport(node)) {\n\t\treturn deconflictNamespaceImport({node, ...options});\n\t} else if (options.typescript.isParameter(node)) {\n\t\treturn deconflictParameterDeclaration({node, ...options});\n\t} else if (options.typescript.isPropertyAssignment(node)) {\n\t\treturn deconflictPropertyAssignment({node, ...options});\n\t} else if (options.typescript.isPropertyDeclaration(node)) {\n\t\treturn deconflictPropertyDeclaration({node, ...options});\n\t} else if (options.typescript.isPropertySignature(node)) {\n\t\treturn deconflictPropertySignature({node, ...options});\n\t} else if (options.typescript.isSetAccessorDeclaration(node)) {\n\t\treturn deconflictSetAccessorDeclaration({node, ...options});\n\t} else if (options.typescript.isTypeAliasDeclaration(node)) {\n\t\treturn deconflictTypeAliasDeclaration({node, ...options});\n\t} else if (options.typescript.isImportTypeNode(node)) {\n\t\treturn deconflictImportTypeNode({node, ...options});\n\t} else if (options.typescript.isTypeParameterDeclaration(node)) {\n\t\treturn deconflictTypeParameterDeclaration({node, ...options});\n\t} else if (options.typescript.isVariableDeclaration(node)) {\n\t\treturn deconflictVariableDeclaration({node, ...options});\n\t} else return options.childContinuation(node, {lexicalEnvironment: options.lexicalEnvironment});\n}\n\n/**\n * Deconflicts local bindings\n */\nexport function deconflicter(options: SourceFileBundlerVisitorOptions): TS.SourceFile {\n\tconst {typescript, context, sourceFile, pluginOptions, printer, lexicalEnvironment} = options;\n\n\tconst fullBenchmark = shouldDebugMetrics(pluginOptions.debug, sourceFile) ? logMetrics(`Deconflicting`, sourceFile.fileName) : undefined;\n\n\tconst transformationLog = shouldDebugSourceFile(pluginOptions.debug, sourceFile) ? logTransformer(\"Deconflicting\", sourceFile, printer) : undefined;\n\n\t// Prepare some VisitorOptions\n\tconst visitorOptions = {\n\t\t...options,\n\n\t\tchildContinuation: <U extends TS.Node>(node: U, continuationOptions: ContinuationOptions): U =>\n\t\t\ttypescript.visitEachChild(\n\t\t\t\tnode,\n\t\t\t\tnextNode =>\n\t\t\t\t\tdeconflictNode({\n\t\t\t\t\t\t...visitorOptions,\n\t\t\t\t\t\t...continuationOptions,\n\t\t\t\t\t\tnode: nextNode\n\t\t\t\t\t}),\n\t\t\t\tcontext\n\t\t\t),\n\n\t\tcontinuation: <U extends TS.Node>(node: U, continuationOptions: ContinuationOptions): U =>\n\t\t\tdeconflictNode({\n\t\t\t\t...visitorOptions,\n\t\t\t\t...continuationOptions,\n\t\t\t\tnode\n\t\t\t}) as U\n\t};\n\n\tconst result = preserveMeta(\n\t\ttypescript.visitEachChild(sourceFile, nextNode => visitorOptions.continuation(nextNode, {lexicalEnvironment}), context),\n\t\tsourceFile,\n\t\toptions\n\t);\n\n\ttransformationLog?.finish(result);\n\tfullBenchmark?.finish();\n\n\treturn result;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureDeclareModifierTransformerVisitorOptions} from \"../ensure-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {ensureHasDeclareModifier, hasDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitClassDeclaration(options: EnsureDeclareModifierTransformerVisitorOptions<TS.ClassDeclaration>): TS.ClassDeclaration {\n\tconst {node, typescript} = options;\n\tif (hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateClassDeclaration(\n\t\t\tnode,\n\t\t\tnode.decorators,\n\t\t\tensureHasDeclareModifier(node.modifiers, typescript),\n\t\t\tnode.name,\n\t\t\tnode.typeParameters,\n\t\t\tnode.heritageClauses,\n\t\t\tnode.members\n\t\t),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureDeclareModifierTransformerVisitorOptions} from \"../ensure-declare-modifier-transformer-visitor-options\";\nimport {ensureHasDeclareModifier, hasDeclareModifier} from \"../../../util/modifier-util\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\nexport function visitClassExpression(options: EnsureDeclareModifierTransformerVisitorOptions<TS.ClassExpression>): TS.ClassExpression {\n\tconst {node, typescript} = options;\n\tif (hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateClassExpression(node, ensureHasDeclareModifier(node.modifiers, typescript), node.name, node.typeParameters, node.heritageClauses, node.members),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureDeclareModifierTransformerVisitorOptions} from \"../ensure-declare-modifier-transformer-visitor-options\";\nimport {ensureHasDeclareModifier, hasDeclareModifier} from \"../../../util/modifier-util\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\nexport function visitFunctionDeclaration(options: EnsureDeclareModifierTransformerVisitorOptions<TS.FunctionDeclaration>): TS.FunctionDeclaration {\n\tconst {node, typescript} = options;\n\tif (hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateFunctionDeclaration(\n\t\t\tnode,\n\t\t\tnode.decorators,\n\t\t\tensureHasDeclareModifier(node.modifiers, typescript),\n\t\t\tnode.asteriskToken,\n\t\t\tnode.name,\n\t\t\tnode.typeParameters,\n\t\t\tnode.parameters,\n\t\t\tnode.type,\n\t\t\tnode.body\n\t\t),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureDeclareModifierTransformerVisitorOptions} from \"../ensure-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {ensureHasDeclareModifier, hasDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitFunctionExpression(options: EnsureDeclareModifierTransformerVisitorOptions<TS.FunctionExpression>): TS.FunctionExpression {\n\tconst {node, typescript} = options;\n\tif (hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateFunctionExpression(\n\t\t\tnode,\n\t\t\tensureHasDeclareModifier(node.modifiers, typescript),\n\t\t\tnode.asteriskToken,\n\t\t\tnode.name,\n\t\t\tnode.typeParameters,\n\t\t\tnode.parameters,\n\t\t\tnode.type,\n\t\t\tnode.body\n\t\t),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureDeclareModifierTransformerVisitorOptions} from \"../ensure-declare-modifier-transformer-visitor-options\";\nimport {ensureHasDeclareModifier, hasDeclareModifier} from \"../../../util/modifier-util\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\nexport function visitEnumDeclaration(options: EnsureDeclareModifierTransformerVisitorOptions<TS.EnumDeclaration>): TS.EnumDeclaration {\n\tconst {node, typescript} = options;\n\tif (hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(typescript.updateEnumDeclaration(node, node.decorators, ensureHasDeclareModifier(node.modifiers, typescript), node.name, node.members), node, options);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureDeclareModifierTransformerVisitorOptions} from \"../ensure-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {ensureHasDeclareModifier, hasDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitVariableStatement(options: EnsureDeclareModifierTransformerVisitorOptions<TS.VariableStatement>): TS.VariableStatement {\n\tconst {node, typescript} = options;\n\tif (hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(typescript.updateVariableStatement(node, ensureHasDeclareModifier(node.modifiers, typescript), node.declarationList), node, options);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureDeclareModifierTransformerVisitorOptions} from \"../ensure-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasDeclareModifier, removeDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitInterfaceDeclaration(options: EnsureDeclareModifierTransformerVisitorOptions<TS.InterfaceDeclaration>): TS.InterfaceDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateInterfaceDeclaration(\n\t\t\tnode,\n\t\t\tnode.decorators,\n\t\t\tremoveDeclareModifier(node.modifiers, typescript),\n\t\t\tnode.name,\n\t\t\tnode.typeParameters,\n\t\t\tnode.heritageClauses,\n\t\t\tnode.members\n\t\t),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureDeclareModifierTransformerVisitorOptions} from \"../ensure-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {ensureHasDeclareModifier, hasDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitModuleDeclaration(options: EnsureDeclareModifierTransformerVisitorOptions<TS.ModuleDeclaration>): TS.ModuleDeclaration {\n\tconst {node, typescript} = options;\n\tif (hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(typescript.updateModuleDeclaration(node, node.decorators, ensureHasDeclareModifier(node.modifiers, typescript), node.name, node.body), node, options);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureDeclareModifierTransformerVisitorOptions} from \"../ensure-declare-modifier-transformer-visitor-options\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\nimport {hasDeclareModifier, removeDeclareModifier} from \"../../../util/modifier-util\";\n\nexport function visitTypeAliasDeclaration(options: EnsureDeclareModifierTransformerVisitorOptions<TS.TypeAliasDeclaration>): TS.TypeAliasDeclaration {\n\tconst {node, typescript} = options;\n\tif (!hasDeclareModifier(node, typescript)) return node;\n\n\treturn preserveMeta(\n\t\ttypescript.updateTypeAliasDeclaration(node, node.decorators, removeDeclareModifier(node.modifiers, typescript), node.name, node.typeParameters, node.type),\n\t\tnode,\n\t\toptions\n\t);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {EnsureDeclareModifierTransformerVisitorOptions} from \"../ensure-declare-modifier-transformer-visitor-options\";\nimport {visitClassDeclaration} from \"./visit-class-declaration\";\nimport {visitClassExpression} from \"./visit-class-expression\";\nimport {visitFunctionDeclaration} from \"./visit-function-declaration\";\nimport {visitFunctionExpression} from \"./visit-function-expression\";\nimport {visitEnumDeclaration} from \"./visit-enum-declaration\";\nimport {visitVariableStatement} from \"./visit-variable-statement\";\nimport {visitInterfaceDeclaration} from \"./visit-interface-declaration\";\nimport {visitModuleDeclaration} from \"./visit-module-declaration\";\nimport {visitTypeAliasDeclaration} from \"./visit-type-alias-declaration\";\n\nexport function visitNode({node, ...options}: EnsureDeclareModifierTransformerVisitorOptions<TS.Node>): TS.Node {\n\tif (options.typescript.isClassDeclaration(node)) {\n\t\treturn visitClassDeclaration({...options, node});\n\t} else if (options.typescript.isClassExpression(node)) {\n\t\treturn visitClassExpression({...options, node});\n\t} else if (options.typescript.isFunctionDeclaration(node)) {\n\t\treturn visitFunctionDeclaration({...options, node});\n\t} else if (options.typescript.isFunctionExpression(node)) {\n\t\treturn visitFunctionExpression({...options, node});\n\t} else if (options.typescript.isEnumDeclaration(node)) {\n\t\treturn visitEnumDeclaration({...options, node});\n\t} else if (options.typescript.isInterfaceDeclaration(node)) {\n\t\treturn visitInterfaceDeclaration({...options, node});\n\t} else if (options.typescript.isTypeAliasDeclaration(node)) {\n\t\treturn visitTypeAliasDeclaration({...options, node});\n\t} else if (options.typescript.isModuleDeclaration(node)) {\n\t\treturn visitModuleDeclaration({...options, node});\n\t} else if (options.typescript.isVariableStatement(node)) {\n\t\treturn visitVariableStatement({...options, node});\n\t} else {\n\t\t// Only consider root-level statements here\n\t\treturn node;\n\t}\n}\n","import {TS} from \"../../../../../type/ts\";\nimport {SourceFileBundlerVisitorOptions} from \"../source-file-bundler/source-file-bundler-visitor-options\";\nimport {visitNode} from \"./visitor/visit-node\";\nimport {shouldDebugMetrics, shouldDebugSourceFile} from \"../../../../../util/is-debug/should-debug\";\nimport {logTransformer} from \"../../../../../util/logging/log-transformer\";\nimport {logMetrics} from \"../../../../../util/logging/log-metrics\";\nimport {preserveMeta} from \"../../util/clone-node-with-meta\";\n\nexport function ensureDeclareModifierTransformer(options: SourceFileBundlerVisitorOptions): TS.SourceFile {\n\tconst {typescript, context, sourceFile, pluginOptions, printer} = options;\n\n\tconst fullBenchmark = shouldDebugMetrics(pluginOptions.debug, sourceFile) ? logMetrics(`Ensuring declare modifiers`, sourceFile.fileName) : undefined;\n\n\tconst transformationLog = shouldDebugSourceFile(pluginOptions.debug, sourceFile) ? logTransformer(\"Ensuring declare modifiers\", sourceFile, printer) : undefined;\n\n\t// Prepare some VisitorOptions\n\tconst visitorOptions = {\n\t\t...options,\n\n\t\tchildContinuation: <U extends TS.Node>(node: U): U =>\n\t\t\ttypescript.visitEachChild(\n\t\t\t\tnode,\n\t\t\t\tnextNode =>\n\t\t\t\t\tvisitNode({\n\t\t\t\t\t\t...visitorOptions,\n\t\t\t\t\t\tnode: nextNode\n\t\t\t\t\t}),\n\t\t\t\tcontext\n\t\t\t),\n\n\t\tcontinuation: <U extends TS.Node>(node: U): U =>\n\t\t\tvisitNode({\n\t\t\t\t...visitorOptions,\n\t\t\t\tnode\n\t\t\t}) as U\n\t};\n\n\tconst result = preserveMeta(\n\t\ttypescript.visitEachChild(sourceFile, nextNode => visitorOptions.continuation(nextNode), context),\n\t\tsourceFile,\n\t\toptions\n\t);\n\n\ttransformationLog?.finish(result);\n\tfullBenchmark?.finish();\n\n\treturn result;\n}\n","import {ModuleBlockExtractorVisitorOptions} from \"../module-block-extractor-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitModuleDeclaration({node, typescript}: ModuleBlockExtractorVisitorOptions<TS.ModuleDeclaration>): TS.VisitResult<TS.Node> {\n\tif (node.body == null) return undefined;\n\tif (typescript.isModuleBlock(node.body) && typescript.isStringLiteralLike(node.name)) {\n\t\treturn [...node.body.statements];\n\t}\n\n\treturn node;\n}\n","import {visitModuleDeclaration} from \"./visit-module-declaration\";\nimport {ModuleBlockExtractorVisitorOptions} from \"../module-block-extractor-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitNode<T extends TS.Node>({node, ...options}: ModuleBlockExtractorVisitorOptions<T>): TS.Node | TS.Node[] | undefined {\n\tif (options.typescript.isModuleDeclaration(node)) {\n\t\treturn visitModuleDeclaration({...options, node});\n\t} else {\n\t\treturn options.childContinuation(node);\n\t}\n}\n","import {TS} from \"../../../../../type/ts\";\nimport {visitNode} from \"./visitor/visit-node\";\nimport {ModuleBlockExtractorOptions} from \"./module-block-extractor-options\";\nimport {shouldDebugMetrics, shouldDebugSourceFile} from \"../../../../../util/is-debug/should-debug\";\nimport {logMetrics} from \"../../../../../util/logging/log-metrics\";\nimport {logTransformer} from \"../../../../../util/logging/log-transformer\";\nimport {ModuleBlockExtractorVisitorOptions} from \"./module-block-extractor-visitor-options\";\nimport {preserveMeta} from \"../../util/clone-node-with-meta\";\n\nexport function moduleBlockExtractor(options: ModuleBlockExtractorOptions): TS.SourceFile {\n\tconst {typescript, context, sourceFile, pluginOptions, printer} = options;\n\n\tconst fullBenchmark = shouldDebugMetrics(pluginOptions.debug, sourceFile) ? logMetrics(`Extracting module blocks`, sourceFile.fileName) : undefined;\n\n\tconst transformationLog = shouldDebugSourceFile(pluginOptions.debug, sourceFile) ? logTransformer(\"Extracting module blocks\", sourceFile, printer) : undefined;\n\n\t// Prepare some VisitorOptions\n\tconst visitorOptions: Omit<ModuleBlockExtractorVisitorOptions<TS.Node>, \"node\"> = {\n\t\t...options,\n\n\t\tchildContinuation: <U extends TS.Node>(node: U): TS.VisitResult<TS.Node> =>\n\t\t\ttypescript.visitEachChild(\n\t\t\t\tnode,\n\t\t\t\tnextNode =>\n\t\t\t\t\tvisitNode({\n\t\t\t\t\t\t...visitorOptions,\n\t\t\t\t\t\tnode: nextNode\n\t\t\t\t\t}),\n\t\t\t\tcontext\n\t\t\t),\n\n\t\tcontinuation: <U extends TS.Node>(node: U): TS.VisitResult<TS.Node> =>\n\t\t\tvisitNode({\n\t\t\t\t...visitorOptions,\n\t\t\t\tnode\n\t\t\t})\n\t};\n\n\tconst result = preserveMeta(\n\t\ttypescript.visitEachChild(sourceFile, nextNode => visitorOptions.continuation(nextNode), context),\n\t\tsourceFile,\n\t\toptions\n\t);\n\n\ttransformationLog?.finish(result);\n\tfullBenchmark?.finish();\n\n\treturn result;\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitImportDeclaration({node, continuation, typescript}: TreeShakerVisitorOptions<TS.ImportDeclaration>): TS.ImportDeclaration | undefined {\n\tif (node.importClause == null) return undefined;\n\tconst importClauseContinuationResult = continuation(node.importClause);\n\n\tif (importClauseContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\n\treturn importClauseContinuationResult === node.importClause\n\t\t? node\n\t\t: typescript.updateImportDeclaration(node, node.decorators, node.modifiers, importClauseContinuationResult, node.moduleSpecifier);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitVariableStatement({node, continuation, typescript}: TreeShakerVisitorOptions<TS.VariableStatement>): TS.VariableStatement | undefined {\n\tconst variableDeclarationListContinuationResult = continuation(node.declarationList);\n\n\tif (variableDeclarationListContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\n\treturn typescript.updateVariableStatement(node, node.modifiers, variableDeclarationListContinuationResult);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitVariableDeclarationList({node, continuation, typescript}: TreeShakerVisitorOptions<TS.VariableDeclarationList>): TS.VariableDeclarationList | undefined {\n\tconst filteredVariableDeclarations: TS.VariableDeclaration[] = [];\n\tfor (const variableDeclaration of node.declarations) {\n\t\tconst variableDeclarationContinuationResult = continuation(variableDeclaration);\n\n\t\tif (variableDeclarationContinuationResult != null) {\n\t\t\tfilteredVariableDeclarations.push(variableDeclarationContinuationResult);\n\t\t}\n\t}\n\tif (filteredVariableDeclarations.length < 1) {\n\t\treturn undefined;\n\t}\n\n\treturn typescript.updateVariableDeclarationList(node, filteredVariableDeclarations);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitVariableDeclaration({node, continuation, typescript}: TreeShakerVisitorOptions<TS.VariableDeclaration>): TS.VariableDeclaration | undefined {\n\tconst nameContinuationResult = continuation(node.name);\n\tif (nameContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\treturn node.name === nameContinuationResult ? node : typescript.updateVariableDeclaration(node, nameContinuationResult, node.type, node.initializer);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitImportSpecifier({node, continuation, typescript}: TreeShakerVisitorOptions<TS.ImportSpecifier>): TS.ImportSpecifier | undefined {\n\tconst nameContinuationResult = continuation(node.name);\n\tif (nameContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\n\treturn node.name === nameContinuationResult ? node : typescript.updateImportSpecifier(node, node.propertyName, nameContinuationResult);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitImportClause({node, continuation, typescript}: TreeShakerVisitorOptions<TS.ImportClause>): TS.ImportClause | undefined {\n\tconst namedBindingsContinuationResult = node.namedBindings == null ? undefined : continuation(node.namedBindings);\n\tconst nameContinuationResult = node.name == null ? undefined : continuation(node.name);\n\n\tconst removeNamedBindings = namedBindingsContinuationResult == null;\n\tconst removeName = nameContinuationResult == null;\n\n\tif (removeNamedBindings && removeName) {\n\t\treturn undefined;\n\t}\n\n\treturn typescript.updateImportClause(node, removeName ? undefined : node.name, removeNamedBindings ? undefined : namedBindingsContinuationResult, node.isTypeOnly);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitNamedImports({node, continuation, typescript}: TreeShakerVisitorOptions<TS.NamedImports>): TS.NamedImports | undefined {\n\tconst filteredSpecifiers: TS.ImportSpecifier[] = [];\n\tfor (const importSpecifier of node.elements) {\n\t\tconst importSpecifierContinuationResult = continuation(importSpecifier);\n\n\t\tif (importSpecifierContinuationResult != null) {\n\t\t\tfilteredSpecifiers.push(importSpecifierContinuationResult);\n\t\t}\n\t}\n\tif (filteredSpecifiers.length < 1) {\n\t\treturn undefined;\n\t}\n\n\treturn typescript.updateNamedImports(node, filteredSpecifiers);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitNamespaceImport({node, continuation, typescript}: TreeShakerVisitorOptions<TS.NamespaceImport>): TS.NamespaceImport | undefined {\n\tconst nameContinuationResult = continuation(node.name);\n\tif (nameContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\treturn node.name === nameContinuationResult ? node : typescript.updateNamespaceImport(node, nameContinuationResult);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitClassDeclaration({node, continuation, typescript}: TreeShakerVisitorOptions<TS.ClassDeclaration>): TS.ClassDeclaration | undefined {\n\tconst nameContinuationResult = node.name == null ? undefined : continuation(node.name);\n\tif (nameContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\treturn node.name === nameContinuationResult\n\t\t? node\n\t\t: typescript.updateClassDeclaration(node, node.decorators, node.modifiers, nameContinuationResult, node.typeParameters, node.heritageClauses, node.members);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitClassExpression({node, continuation, typescript}: TreeShakerVisitorOptions<TS.ClassExpression>): TS.ClassExpression | undefined {\n\tconst nameContinuationResult = node.name == null ? undefined : continuation(node.name);\n\tif (nameContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\treturn node.name === nameContinuationResult\n\t\t? node\n\t\t: typescript.updateClassExpression(node, node.modifiers, nameContinuationResult, node.typeParameters, node.heritageClauses, node.members);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitFunctionDeclaration({node, continuation, typescript}: TreeShakerVisitorOptions<TS.FunctionDeclaration>): TS.FunctionDeclaration | undefined {\n\tconst nameContinuationResult = node.name == null ? undefined : continuation(node.name);\n\tif (nameContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\treturn node.name === nameContinuationResult\n\t\t? node\n\t\t: typescript.updateFunctionDeclaration(\n\t\t\t\tnode,\n\t\t\t\tnode.decorators,\n\t\t\t\tnode.modifiers,\n\t\t\t\tnode.asteriskToken,\n\t\t\t\tnameContinuationResult,\n\t\t\t\tnode.typeParameters,\n\t\t\t\tnode.parameters,\n\t\t\t\tnode.type,\n\t\t\t\tnode.body\n\t\t  );\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitFunctionExpression({node, continuation, typescript}: TreeShakerVisitorOptions<TS.FunctionExpression>): TS.FunctionExpression | undefined {\n\tconst nameContinuationResult = node.name == null ? undefined : continuation(node.name);\n\tif (nameContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\treturn node.name === nameContinuationResult\n\t\t? node\n\t\t: typescript.updateFunctionExpression(node, node.modifiers, node.asteriskToken, nameContinuationResult, node.typeParameters, node.parameters, node.type, node.body);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitEnumDeclaration({node, continuation, typescript}: TreeShakerVisitorOptions<TS.EnumDeclaration>): TS.EnumDeclaration | undefined {\n\tconst nameContinuationResult = continuation(node.name);\n\tif (nameContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\treturn node.name === nameContinuationResult ? node : typescript.updateEnumDeclaration(node, node.decorators, node.modifiers, nameContinuationResult, node.members);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\nexport function visitInterfaceDeclaration(options: TreeShakerVisitorOptions<TS.InterfaceDeclaration>): TS.InterfaceDeclaration | undefined {\n\tconst {node, continuation, typescript} = options;\n\tconst nameContinuationResult = continuation(node.name);\n\tif (nameContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\treturn node.name === nameContinuationResult\n\t\t? node\n\t\t: preserveMeta(\n\t\t\t\ttypescript.updateInterfaceDeclaration(node, node.decorators, node.modifiers, nameContinuationResult, node.typeParameters, node.heritageClauses, node.members),\n\t\t\t\tnode,\n\t\t\t\toptions\n\t\t  );\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitTypeAliasDeclaration({node, continuation, typescript}: TreeShakerVisitorOptions<TS.TypeAliasDeclaration>): TS.TypeAliasDeclaration | undefined {\n\tconst nameContinuationResult = continuation(node.name);\n\tif (nameContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\treturn node.name === nameContinuationResult\n\t\t? node\n\t\t: typescript.updateTypeAliasDeclaration(node, node.decorators, node.modifiers, nameContinuationResult, node.typeParameters, node.type);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitModuleDeclaration({node}: TreeShakerVisitorOptions<TS.ModuleDeclaration>): TS.ModuleDeclaration | undefined {\n\treturn node;\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitExportDeclaration({node}: TreeShakerVisitorOptions<TS.ExportDeclaration>): TS.ExportDeclaration | undefined {\n\treturn node;\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitArrayBindingPattern({node, continuation, typescript}: TreeShakerVisitorOptions<TS.ArrayBindingPattern>): TS.ArrayBindingPattern | undefined {\n\tconst filteredArrayBindingElements: TS.ArrayBindingElement[] = [];\n\tfor (const arrayBindingElement of node.elements) {\n\t\tconst arrayBindingElementContinuationResult = continuation(arrayBindingElement);\n\n\t\tif (arrayBindingElementContinuationResult != null) {\n\t\t\tfilteredArrayBindingElements.push(arrayBindingElementContinuationResult);\n\t\t}\n\t}\n\tif (filteredArrayBindingElements.length < 1) {\n\t\treturn undefined;\n\t}\n\n\treturn typescript.updateArrayBindingPattern(node, filteredArrayBindingElements);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitBindingElement({node, continuation, typescript}: TreeShakerVisitorOptions<TS.BindingElement>): TS.BindingElement | undefined {\n\tconst nameContinuationResult = continuation(node.name);\n\tif (nameContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\n\treturn node.name === nameContinuationResult ? node : typescript.updateBindingElement(node, node.dotDotDotToken, node.propertyName, nameContinuationResult, node.initializer);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitObjectBindingPattern({node, continuation, typescript}: TreeShakerVisitorOptions<TS.ObjectBindingPattern>): TS.ObjectBindingPattern | undefined {\n\tconst filteredObjectBindingElements: TS.BindingElement[] = [];\n\tfor (const objectBindingElement of node.elements) {\n\t\tconst objectBindingElementContinuationResult = continuation(objectBindingElement);\n\n\t\tif (objectBindingElementContinuationResult != null) {\n\t\t\tfilteredObjectBindingElements.push(objectBindingElementContinuationResult);\n\t\t}\n\t}\n\tif (filteredObjectBindingElements.length < 1) {\n\t\treturn undefined;\n\t}\n\n\treturn typescript.updateObjectBindingPattern(node, filteredObjectBindingElements);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitIdentifier({node, isReferenced}: TreeShakerVisitorOptions<TS.Identifier>): TS.Identifier | undefined {\n\tif (node != null && isReferenced(node)) {\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkClassDeclaration({node, continuation, markIdentifiersAsReferenced}: ReferenceVisitorOptions<TS.ClassDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\tif (node.heritageClauses != null) {\n\t\tfor (const heritageClause of node.heritageClauses) {\n\t\t\treferencedIdentifiers.push(...continuation(heritageClause));\n\t\t}\n\t}\n\n\tif (node.typeParameters != null) {\n\t\tfor (const typeParameter of node.typeParameters) {\n\t\t\treferencedIdentifiers.push(...continuation(typeParameter));\n\t\t}\n\t}\n\n\tfor (const member of node.members) {\n\t\treferencedIdentifiers.push(...continuation(member));\n\t}\n\n\tmarkIdentifiersAsReferenced(node, ...referencedIdentifiers);\n\treturn referencedIdentifiers;\n}\n","import {TS} from \"../../../../type/ts\";\n\nexport function isSymbolIdentifier(node: TS.Node, typescript: typeof TS): node is TS.Identifier {\n\treturn typescript.isIdentifier(node) && node.text.startsWith(\"[\") && node.text.endsWith(\"]\");\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\nimport {isSymbolIdentifier} from \"../../../../util/is-symbol-identifier\";\n\nexport function checkIdentifier({node, typescript}: ReferenceVisitorOptions<TS.Identifier>): string[] {\n\treturn isSymbolIdentifier(node, typescript) ? [node.text.slice(1, -1)] : [(node as TS.Identifier).text];\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkClassExpression({node, continuation, markIdentifiersAsReferenced}: ReferenceVisitorOptions<TS.ClassExpression>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\tif (node.heritageClauses != null) {\n\t\tfor (const heritageClause of node.heritageClauses) {\n\t\t\treferencedIdentifiers.push(...continuation(heritageClause));\n\t\t}\n\t}\n\n\tif (node.typeParameters != null) {\n\t\tfor (const typeParameter of node.typeParameters) {\n\t\t\treferencedIdentifiers.push(...continuation(typeParameter));\n\t\t}\n\t}\n\n\tfor (const member of node.members) {\n\t\treferencedIdentifiers.push(...continuation(member));\n\t}\n\n\tmarkIdentifiersAsReferenced(node, ...referencedIdentifiers);\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkInterfaceDeclaration({node, continuation, markIdentifiersAsReferenced}: ReferenceVisitorOptions<TS.InterfaceDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\tif (node.heritageClauses != null) {\n\t\tfor (const heritageClause of node.heritageClauses) {\n\t\t\treferencedIdentifiers.push(...continuation(heritageClause));\n\t\t}\n\t}\n\n\tif (node.typeParameters != null) {\n\t\tfor (const typeParameter of node.typeParameters) {\n\t\t\treferencedIdentifiers.push(...continuation(typeParameter));\n\t\t}\n\t}\n\n\tfor (const member of node.members) {\n\t\treferencedIdentifiers.push(...continuation(member));\n\t}\n\n\tmarkIdentifiersAsReferenced(node, ...referencedIdentifiers);\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkEnumDeclaration({node, continuation, markIdentifiersAsReferenced}: ReferenceVisitorOptions<TS.EnumDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tfor (const member of node.members) {\n\t\treferencedIdentifiers.push(...continuation(member));\n\t}\n\n\tmarkIdentifiersAsReferenced(node, ...referencedIdentifiers);\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkTypeAliasDeclaration({node, continuation, markIdentifiersAsReferenced}: ReferenceVisitorOptions<TS.TypeAliasDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tif (node.typeParameters != null) {\n\t\tfor (const typeParameter of node.typeParameters) {\n\t\t\treferencedIdentifiers.push(...continuation(typeParameter));\n\t\t}\n\t}\n\n\treferencedIdentifiers.push(...continuation(node.type));\n\n\tmarkIdentifiersAsReferenced(node, ...referencedIdentifiers);\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkFunctionDeclaration({node, continuation, markIdentifiersAsReferenced}: ReferenceVisitorOptions<TS.FunctionDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\tfor (const parameter of node.parameters) {\n\t\treferencedIdentifiers.push(...continuation(parameter));\n\t}\n\n\tif (node.typeParameters != null) {\n\t\tfor (const typeParameter of node.typeParameters) {\n\t\t\treferencedIdentifiers.push(...continuation(typeParameter));\n\t\t}\n\t}\n\n\tif (node.body != null) {\n\t\treferencedIdentifiers.push(...continuation(node.body));\n\t}\n\n\tif (node.type != null) {\n\t\treferencedIdentifiers.push(...continuation(node.type));\n\t}\n\n\tmarkIdentifiersAsReferenced(node, ...referencedIdentifiers);\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkFunctionExpression({node, continuation, markIdentifiersAsReferenced}: ReferenceVisitorOptions<TS.FunctionExpression>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\tfor (const parameter of node.parameters) {\n\t\treferencedIdentifiers.push(...continuation(parameter));\n\t}\n\n\tif (node.typeParameters != null) {\n\t\tfor (const typeParameter of node.typeParameters) {\n\t\t\treferencedIdentifiers.push(...continuation(typeParameter));\n\t\t}\n\t}\n\n\tif (node.body != null) {\n\t\treferencedIdentifiers.push(...continuation(node.body));\n\t}\n\n\tif (node.type != null) {\n\t\treferencedIdentifiers.push(...continuation(node.type));\n\t}\n\n\tmarkIdentifiersAsReferenced(node, ...referencedIdentifiers);\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkVariableDeclaration({node, continuation}: ReferenceVisitorOptions<TS.VariableDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\tif (node.initializer != null) {\n\t\treferencedIdentifiers.push(...continuation(node.initializer));\n\t}\n\n\tif (node.type != null) {\n\t\treferencedIdentifiers.push(...continuation(node.type));\n\t}\n\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkExportSpecifier({node, continuation}: ReferenceVisitorOptions<TS.ExportSpecifier>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\tif (node.propertyName != null) {\n\t\treferencedIdentifiers.push(...continuation(node.propertyName));\n\t} else if (node.propertyName == null) {\n\t\treferencedIdentifiers.push(...continuation(node.name));\n\t}\n\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkArrayBindingPattern({node, continuation}: ReferenceVisitorOptions<TS.ArrayBindingPattern>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tfor (const element of node.elements) {\n\t\treferencedIdentifiers.push(...continuation(element));\n\t}\n\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkObjectBindingPattern({node, continuation}: ReferenceVisitorOptions<TS.ObjectBindingPattern>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tfor (const element of node.elements) {\n\t\treferencedIdentifiers.push(...continuation(element));\n\t}\n\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkBindingElement({node, continuation, typescript}: ReferenceVisitorOptions<TS.BindingElement>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tif (!typescript.isIdentifier(node.name)) {\n\t\treferencedIdentifiers.push(...continuation(node.name));\n\t}\n\n\tif (node.initializer != null) {\n\t\treferencedIdentifiers.push(...continuation(node.initializer));\n\t}\n\n\tif (node.propertyName != null && !typescript.isIdentifier(node.propertyName)) {\n\t\treferencedIdentifiers.push(...continuation(node.propertyName));\n\t}\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkMethodDeclaration({node, continuation, typescript}: ReferenceVisitorOptions<TS.MethodDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tif (!typescript.isIdentifier(node.name)) {\n\t\treferencedIdentifiers.push(...continuation(node.name));\n\t}\n\tfor (const parameter of node.parameters) {\n\t\treferencedIdentifiers.push(...continuation(parameter));\n\t}\n\n\tif (node.typeParameters != null) {\n\t\tfor (const typeParameter of node.typeParameters) {\n\t\t\treferencedIdentifiers.push(...continuation(typeParameter));\n\t\t}\n\t}\n\n\tif (node.type != null) {\n\t\treferencedIdentifiers.push(...continuation(node.type));\n\t}\n\n\tif (node.body != null) {\n\t\treferencedIdentifiers.push(...continuation(node.body));\n\t}\n\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\nimport {isSymbolIdentifier} from \"../../../../util/is-symbol-identifier\";\n\nexport function checkMethodSignature({node, continuation, typescript}: ReferenceVisitorOptions<TS.MethodSignature>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tif (!typescript.isIdentifier(node.name) || isSymbolIdentifier(node.name, typescript)) {\n\t\treferencedIdentifiers.push(...continuation(node.name));\n\t}\n\tfor (const parameter of node.parameters) {\n\t\treferencedIdentifiers.push(...continuation(parameter));\n\t}\n\n\tif (node.typeParameters != null) {\n\t\tfor (const typeParameter of node.typeParameters) {\n\t\t\treferencedIdentifiers.push(...continuation(typeParameter));\n\t\t}\n\t}\n\n\tif (node.type != null) {\n\t\treferencedIdentifiers.push(...continuation(node.type));\n\t}\n\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkPropertyDeclaration({node, continuation, typescript}: ReferenceVisitorOptions<TS.PropertyDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tif (!typescript.isIdentifier(node.name)) {\n\t\treferencedIdentifiers.push(...continuation(node.name));\n\t}\n\n\tif (node.type != null) {\n\t\treferencedIdentifiers.push(...continuation(node.type));\n\t}\n\n\tif (node.initializer != null) {\n\t\treferencedIdentifiers.push(...continuation(node.initializer));\n\t}\n\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\nimport {isSymbolIdentifier} from \"../../../../util/is-symbol-identifier\";\n\nexport function checkPropertySignature({node, continuation, typescript}: ReferenceVisitorOptions<TS.PropertySignature>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tif (!typescript.isIdentifier(node.name) || isSymbolIdentifier(node.name, typescript)) {\n\t\treferencedIdentifiers.push(...continuation(node.name));\n\t}\n\n\tif (node.initializer != null) {\n\t\treferencedIdentifiers.push(...continuation(node.initializer));\n\t}\n\n\tif (node.type != null) {\n\t\treferencedIdentifiers.push(...continuation(node.type));\n\t}\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkGetAccessorDeclaration({node, continuation, typescript}: ReferenceVisitorOptions<TS.GetAccessorDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tif (!typescript.isIdentifier(node.name)) {\n\t\treferencedIdentifiers.push(...continuation(node.name));\n\t}\n\tfor (const parameter of node.parameters) {\n\t\treferencedIdentifiers.push(...continuation(parameter));\n\t}\n\n\tif (node.typeParameters != null) {\n\t\tfor (const typeParameter of node.typeParameters) {\n\t\t\treferencedIdentifiers.push(...continuation(typeParameter));\n\t\t}\n\t}\n\n\tif (node.type != null) {\n\t\treferencedIdentifiers.push(...continuation(node.type));\n\t}\n\n\tif (node.body != null) {\n\t\treferencedIdentifiers.push(...continuation(node.body));\n\t}\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkSetAccessorDeclaration({node, continuation, typescript}: ReferenceVisitorOptions<TS.SetAccessorDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tif (!typescript.isIdentifier(node.name)) {\n\t\treferencedIdentifiers.push(...continuation(node.name));\n\t}\n\tfor (const parameter of node.parameters) {\n\t\treferencedIdentifiers.push(...continuation(parameter));\n\t}\n\n\tif (node.typeParameters != null) {\n\t\tfor (const typeParameter of node.typeParameters) {\n\t\t\treferencedIdentifiers.push(...continuation(typeParameter));\n\t\t}\n\t}\n\n\tif (node.type != null) {\n\t\treferencedIdentifiers.push(...continuation(node.type));\n\t}\n\n\tif (node.body != null) {\n\t\treferencedIdentifiers.push(...continuation(node.body));\n\t}\n\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkParameterDeclaration({node, continuation, typescript}: ReferenceVisitorOptions<TS.ParameterDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tif (!typescript.isIdentifier(node.name)) {\n\t\treferencedIdentifiers.push(...continuation(node.name));\n\t}\n\n\tif (node.type != null) {\n\t\treferencedIdentifiers.push(...continuation(node.type));\n\t}\n\n\tif (node.initializer != null) {\n\t\treferencedIdentifiers.push(...continuation(node.initializer));\n\t}\n\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkVariableDeclarationList({node, continuation}: ReferenceVisitorOptions<TS.VariableDeclarationList>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\tfor (const declaration of node.declarations) {\n\t\treferencedIdentifiers.push(...continuation(declaration));\n\t}\n\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkVariableStatement({node, continuation, markIdentifiersAsReferenced}: ReferenceVisitorOptions<TS.VariableStatement>): string[] {\n\tconst referencedIdentifiers = continuation(node.declarationList);\n\tmarkIdentifiersAsReferenced(node, ...referencedIdentifiers);\n\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkExportDeclaration({node, continuation, markIdentifiersAsReferenced}: ReferenceVisitorOptions<TS.ExportDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\tif (node.exportClause != null) {\n\t\treferencedIdentifiers.push(...continuation(node.exportClause));\n\t}\n\n\tmarkIdentifiersAsReferenced(node, ...referencedIdentifiers);\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkExportAssignment({node, continuation, markIdentifiersAsReferenced}: ReferenceVisitorOptions<TS.ExportAssignment>): string[] {\n\tconst referencedIdentifiers = continuation(node.expression);\n\n\tmarkIdentifiersAsReferenced(node, ...referencedIdentifiers);\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkModuleDeclaration({node, continuation, markIdentifiersAsReferenced}: ReferenceVisitorOptions<TS.ModuleDeclaration>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\tif (node.body != null) {\n\t\treferencedIdentifiers.push(...continuation(node.body));\n\t}\n\n\tmarkIdentifiersAsReferenced(node, ...referencedIdentifiers);\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkIndexedAccessTypeNode({node, continuation}: ReferenceVisitorOptions<TS.IndexedAccessTypeNode>): string[] {\n\tconst referencedIdentifiers: string[] = [];\n\n\treferencedIdentifiers.push(...continuation(node.indexType));\n\treferencedIdentifiers.push(...continuation(node.objectType));\n\treturn referencedIdentifiers;\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkPropertyAccessExpression({node, continuation}: ReferenceVisitorOptions<TS.PropertyAccessExpression>): string[] {\n\treturn continuation(node.expression);\n}\n","import {ReferenceVisitorOptions} from \"../reference-visitor-options\";\nimport {TS} from \"../../../../../../../type/ts\";\n\nexport function checkQualifiedName({node, continuation}: ReferenceVisitorOptions<TS.QualifiedName>): string[] {\n\treturn continuation(node.left);\n}\n","import {TS} from \"../../../../type/ts\";\nimport {getParentNode} from \"./get-parent-node\";\n\n/**\n * Returns true if the given Node contains the given Child Node\n */\nexport function nodeContainsChild(parent: TS.Node, potentialChild: TS.Node): boolean {\n\tif (parent === potentialChild) return false;\n\n\tlet candidate = potentialChild;\n\twhile (candidate != null) {\n\t\tcandidate = getParentNode(candidate);\n\t\tif (candidate === parent) return true;\n\t}\n\n\treturn false;\n}\n","import {IsReferencedOptions} from \"./is-referenced-options\";\nimport {ReferenceVisitorOptions} from \"./reference-visitor-options\";\nimport {checkClassDeclaration} from \"./visitor/check-class-declaration\";\nimport {checkIdentifier} from \"./visitor/check-identifier\";\nimport {checkClassExpression} from \"./visitor/check-class-expression\";\nimport {checkInterfaceDeclaration} from \"./visitor/check-interface-declaration\";\nimport {checkEnumDeclaration} from \"./visitor/check-enum-declaration\";\nimport {checkTypeAliasDeclaration} from \"./visitor/check-type-alias-declaration\";\nimport {checkFunctionDeclaration} from \"./visitor/check-function-declaration\";\nimport {checkFunctionExpression} from \"./visitor/check-function-expression\";\nimport {checkVariableDeclaration} from \"./visitor/check-variable-declaration\";\nimport {checkExportSpecifier} from \"./visitor/check-export-specifier\";\nimport {NodeToReferencedIdentifiersCache} from \"../cache/reference-cache\";\nimport {checkArrayBindingPattern} from \"./visitor/check-array-binding-pattern\";\nimport {checkObjectBindingPattern} from \"./visitor/check-object-binding-pattern\";\nimport {checkBindingElement} from \"./visitor/check-binding-element\";\nimport {checkMethodDeclaration} from \"./visitor/check-method-declaration\";\nimport {checkMethodSignature} from \"./visitor/check-method-signature\";\nimport {checkPropertyDeclaration} from \"./visitor/check-property-declaration\";\nimport {checkPropertySignature} from \"./visitor/check-property-signature\";\nimport {checkGetAccessorDeclaration} from \"./visitor/check-get-accessor-declaration\";\nimport {checkSetAccessorDeclaration} from \"./visitor/check-set-accessor-declaration\";\nimport {checkParameterDeclaration} from \"./visitor/check-parameter-declaration\";\nimport {checkVariableDeclarationList} from \"./visitor/check-variable-declaration-list\";\nimport {checkVariableStatement} from \"./visitor/check-variable-statement\";\nimport {checkExportDeclaration} from \"./visitor/check-export-declaration\";\nimport {checkExportAssignment} from \"./visitor/check-export-assignment\";\nimport {checkModuleDeclaration} from \"./visitor/check-module-declaration\";\nimport {checkIndexedAccessTypeNode} from \"./visitor/check-indexed-access-type-node\";\nimport {checkPropertyAccessExpression} from \"./visitor/check-property-access-expression\";\nimport {checkQualifiedName} from \"./visitor/check-qualified-name\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {nodeContainsChild} from \"../../../util/node-contains-child\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\nimport {traceIdentifiers} from \"../../trace-identifiers/trace-identifiers\";\n\n/**\n * Visits the given node. Returns true if it references the node to check for references, and false otherwise\n */\nfunction checkNode({node, originalNode, ...options}: ReferenceVisitorOptions): string[] {\n\tif (options.typescript.isArrayBindingPattern(node)) {\n\t\treturn checkArrayBindingPattern({node, originalNode, ...options});\n\t} else if (options.typescript.isObjectBindingPattern(node)) {\n\t\treturn checkObjectBindingPattern({node, originalNode, ...options});\n\t} else if (options.typescript.isParameter(node)) {\n\t\treturn checkParameterDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isQualifiedName(node)) {\n\t\treturn checkQualifiedName({node, originalNode, ...options});\n\t} else if (options.typescript.isBindingElement(node)) {\n\t\treturn checkBindingElement({node, originalNode, ...options});\n\t} else if (options.typescript.isMethodDeclaration(node)) {\n\t\treturn checkMethodDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isMethodSignature(node)) {\n\t\treturn checkMethodSignature({node, originalNode, ...options});\n\t} else if (options.typescript.isGetAccessorDeclaration(node)) {\n\t\treturn checkGetAccessorDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isSetAccessorDeclaration(node)) {\n\t\treturn checkSetAccessorDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isPropertyAccessExpression(node)) {\n\t\treturn checkPropertyAccessExpression({node, originalNode, ...options});\n\t} else if (options.typescript.isPropertyDeclaration(node)) {\n\t\treturn checkPropertyDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isPropertySignature(node)) {\n\t\treturn checkPropertySignature({node, originalNode, ...options});\n\t} else if (options.typescript.isClassDeclaration(node)) {\n\t\treturn checkClassDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isClassExpression(node)) {\n\t\treturn checkClassExpression({node, originalNode, ...options});\n\t} else if (options.typescript.isFunctionDeclaration(node)) {\n\t\treturn checkFunctionDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isFunctionExpression(node)) {\n\t\treturn checkFunctionExpression({node, originalNode, ...options});\n\t} else if (options.typescript.isInterfaceDeclaration(node)) {\n\t\treturn checkInterfaceDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isEnumDeclaration(node)) {\n\t\treturn checkEnumDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isTypeAliasDeclaration(node)) {\n\t\treturn checkTypeAliasDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isIndexedAccessTypeNode(node)) {\n\t\treturn checkIndexedAccessTypeNode({node, originalNode, ...options});\n\t} else if (options.typescript.isVariableStatement(node)) {\n\t\treturn checkVariableStatement({node, originalNode, ...options});\n\t} else if (options.typescript.isVariableDeclarationList(node)) {\n\t\treturn checkVariableDeclarationList({node, originalNode, ...options});\n\t} else if (options.typescript.isVariableDeclaration(node)) {\n\t\treturn checkVariableDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isExportDeclaration(node)) {\n\t\treturn checkExportDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isExportAssignment(node)) {\n\t\treturn checkExportAssignment({node, originalNode, ...options});\n\t} else if (options.typescript.isExportSpecifier(node)) {\n\t\treturn checkExportSpecifier({node, originalNode, ...options});\n\t} else if (options.typescript.isModuleDeclaration(node)) {\n\t\treturn checkModuleDeclaration({node, originalNode, ...options});\n\t} else if (options.typescript.isIdentifier(node)) {\n\t\treturn checkIdentifier({node, originalNode, ...options});\n\t} else {\n\t\treturn options.childContinuation(node);\n\t}\n}\n\n/**\n * Visits the given node. Returns true if it references the node to check for references, and false otherwise\n */\nfunction getReferencingNodes(originalNode: TS.Node, identifiers: Set<string>, cache: NodeToReferencedIdentifiersCache): TS.Node[] {\n\t// TODO: Can all of this be replaced by typescript.FindAllReferences.Core.isSymbolReferencedInFile(identifier, typeChecker, sourceFile); ?\n\tconst referencingNodes = new Set<TS.Node>();\n\n\tfor (const identifier of identifiers) {\n\t\tconst nodesReferencingIdentifier = cache.get(identifier);\n\t\tif (nodesReferencingIdentifier != null) {\n\t\t\tfor (const node of nodesReferencingIdentifier) {\n\t\t\t\tif (node === originalNode || nodeContainsChild(originalNode, node)) continue;\n\t\t\t\treferencingNodes.add(node);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [...referencingNodes];\n}\n\n/**\n * Returns true if the given Node is referenced within the given options\n */\nexport function isReferenced<T extends TS.Node>({seenNodes = new Set(), ...options}: IsReferencedOptions<T>): boolean {\n\t// Exports are always referenced and should never be removed\n\tif (\n\t\toptions.typescript.isExportDeclaration(options.node) ||\n\t\toptions.typescript.isExportSpecifier(options.node) ||\n\t\toptions.typescript.isExportAssignment(options.node) ||\n\t\thasExportModifier(options.node, options.typescript) ||\n\t\toptions.typescript.isModuleDeclaration(options.node)\n\t) {\n\t\treturn true;\n\t}\n\n\t// If it has been computed previously, use the cached result\n\tif (options.referenceCache.has(options.node)) {\n\t\treturn options.referenceCache.get(options.node)!;\n\t}\n\n\t// Assume that the node is referenced if the received node has been visited before in the recursive stack\n\tif (seenNodes.has(options.node)) {\n\t\treturn true;\n\t} else {\n\t\t// Otherwise, add the node to the Set of seen nodes\n\t\tseenNodes.add(options.node);\n\t}\n\n\t// Collect the identifier for the node\n\tconst identifiers = traceIdentifiers(options);\n\n\t// If there are no identifiers for the node, include it since it cannot be referenced.\n\tif (identifiers.size === 0) {\n\t\treturn true;\n\t}\n\n\t// Collect all nodes that references the given node\n\tconst referencingNodes = collectReferences(options, identifiers);\n\n\t// Compute the result\n\tconst result = referencingNodes.length > 0 && referencingNodes.some(referencingNode => isReferenced({...options, seenNodes, node: referencingNode}));\n\n\t// Cache the result\n\toptions.referenceCache.set(options.node, result);\n\treturn result;\n}\n\nfunction collectReferences<T extends TS.Node>(options: IsReferencedOptions<T>, identifiers: Set<string>): TS.Node[] {\n\tlet nodeToReferencedIdentifiersCache = options.sourceFileToNodeToReferencedIdentifiersCache.get(options.sourceFile.fileName);\n\n\t// If it has been computed for the SourceFile previously, use it.\n\tif (nodeToReferencedIdentifiersCache == null) {\n\t\t// Otherwise, compute it\n\t\tnodeToReferencedIdentifiersCache = new Map();\n\t\toptions.sourceFileToNodeToReferencedIdentifiersCache.set(options.sourceFile.fileName, nodeToReferencedIdentifiersCache);\n\n\t\tconst visitorOptions = {\n\t\t\t...options,\n\t\t\toriginalNode: options.node,\n\t\t\tmarkIdentifiersAsReferenced(fromNode: TS.Node, ...referencedIdentifiers: string[]) {\n\t\t\t\tfor (const identifier of referencedIdentifiers) {\n\t\t\t\t\tlet matchingSet = nodeToReferencedIdentifiersCache!.get(identifier);\n\t\t\t\t\tif (matchingSet == null) {\n\t\t\t\t\t\tmatchingSet = new Set();\n\t\t\t\t\t\tnodeToReferencedIdentifiersCache!.set(identifier, matchingSet);\n\t\t\t\t\t}\n\t\t\t\t\tmatchingSet.add(fromNode);\n\t\t\t\t}\n\t\t\t},\n\t\t\tchildContinuation: (node: TS.Node): string[] => {\n\t\t\t\tconst referencedIdentifiers: string[] = [];\n\t\t\t\toptions.typescript.forEachChild<void>(node, nextNode => {\n\t\t\t\t\treferencedIdentifiers.push(...checkNode({...visitorOptions, node: nextNode}));\n\t\t\t\t});\n\t\t\t\treturn referencedIdentifiers;\n\t\t\t},\n\t\t\tcontinuation: (node: TS.Node): string[] => checkNode({...visitorOptions, node})\n\t\t};\n\n\t\toptions.typescript.forEachChild<void>(options.sourceFile, node => {\n\t\t\tcheckNode({...visitorOptions, node});\n\t\t});\n\t}\n\n\treturn getReferencingNodes(options.node, identifiers, nodeToReferencedIdentifiersCache);\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\n\nexport function visitExportAssignment({node}: TreeShakerVisitorOptions<TS.ExportAssignment>): TS.ExportAssignment | undefined {\n\treturn node;\n}\n","import {TreeShakerVisitorOptions} from \"../tree-shaker-visitor-options\";\nimport {TS} from \"../../../../../../type/ts\";\nimport {preserveMeta} from \"../../../util/clone-node-with-meta\";\n\nexport function visitImportEqualsDeclaration(options: TreeShakerVisitorOptions<TS.ImportEqualsDeclaration>): TS.ImportEqualsDeclaration | undefined {\n\tconst {node, continuation, typescript} = options;\n\tconst nameContinuationResult = node.name == null ? undefined : continuation(node.name);\n\n\tif (nameContinuationResult == null) {\n\t\treturn undefined;\n\t}\n\treturn node.name === nameContinuationResult\n\t\t? node\n\t\t: preserveMeta(typescript.updateImportEqualsDeclaration(node, node.decorators, node.modifiers, nameContinuationResult, node.moduleReference), node, options);\n}\n","import {visitImportDeclaration} from \"./visitor/visit-import-declaration\";\nimport {visitVariableStatement} from \"./visitor/visit-variable-statement\";\nimport {visitVariableDeclarationList} from \"./visitor/visit-variable-declaration-list\";\nimport {visitVariableDeclaration} from \"./visitor/visit-variable-declaration\";\nimport {visitImportSpecifier} from \"./visitor/visit-import-specifier\";\nimport {visitImportClause} from \"./visitor/visit-import-clause\";\nimport {visitNamedImports} from \"./visitor/visit-named-imports\";\nimport {visitNamespaceImport} from \"./visitor/visit-namespace-import\";\nimport {visitClassDeclaration} from \"./visitor/visit-class-declaration\";\nimport {visitClassExpression} from \"./visitor/visit-class-expression\";\nimport {visitFunctionDeclaration} from \"./visitor/visit-function-declaration\";\nimport {visitFunctionExpression} from \"./visitor/visit-function-expression\";\nimport {visitEnumDeclaration} from \"./visitor/visit-enum-declaration\";\nimport {visitInterfaceDeclaration} from \"./visitor/visit-interface-declaration\";\nimport {visitTypeAliasDeclaration} from \"./visitor/visit-type-alias-declaration\";\nimport {visitModuleDeclaration} from \"./visitor/visit-module-declaration\";\nimport {visitExportDeclaration} from \"./visitor/visit-export-declaration\";\nimport {visitArrayBindingPattern} from \"./visitor/visit-array-binding-pattern\";\nimport {visitBindingElement} from \"./visitor/visit-binding-element\";\nimport {visitObjectBindingPattern} from \"./visitor/visit-object-binding-pattern\";\nimport {visitIdentifier} from \"./visitor/visit-identifier\";\nimport {SourceFileBundlerVisitorOptions} from \"../source-file-bundler/source-file-bundler-visitor-options\";\nimport {TS} from \"../../../../../type/ts\";\nimport {isReferenced} from \"../reference/is-referenced/is-referenced\";\nimport {hasExportModifier} from \"../../util/modifier-util\";\nimport {visitExportAssignment} from \"./visitor/visit-export-assignment\";\nimport {shouldDebugMetrics, shouldDebugSourceFile} from \"../../../../../util/is-debug/should-debug\";\nimport {logMetrics} from \"../../../../../util/logging/log-metrics\";\nimport {logTransformer} from \"../../../../../util/logging/log-transformer\";\nimport {preserveMeta} from \"../../util/clone-node-with-meta\";\nimport {visitImportEqualsDeclaration} from \"./visitor/visit-import-equals-declaration\";\n\nexport function treeShaker(options: SourceFileBundlerVisitorOptions): TS.SourceFile {\n\tconst {typescript, context, sourceFile, pluginOptions, printer} = options;\n\n\tconst fullBenchmark = shouldDebugMetrics(pluginOptions.debug, sourceFile) ? logMetrics(`Tree-shaking`, sourceFile.fileName) : undefined;\n\n\tconst transformationLog = shouldDebugSourceFile(pluginOptions.debug, sourceFile) ? logTransformer(\"Tree-shaking\", sourceFile, printer) : undefined;\n\n\t// Prepare some VisitorOptions\n\tconst visitorOptions = {\n\t\t...options,\n\t\tisReferenced: <U extends TS.Node>(node: U): boolean => isReferenced({...visitorOptions, node}),\n\t\tcontinuation: <U extends TS.Node>(node: U): U | undefined => visitor(node) as U | undefined\n\t};\n\n\tfunction visitor(node: TS.Node): TS.Node | undefined {\n\t\tif (hasExportModifier(node, typescript)) return node;\n\n\t\tif (typescript.isClassDeclaration(node)) {\n\t\t\treturn visitClassDeclaration({...visitorOptions, node});\n\t\t} else if (typescript.isClassExpression(node)) {\n\t\t\treturn visitClassExpression({...visitorOptions, node});\n\t\t} else if (typescript.isFunctionDeclaration(node)) {\n\t\t\treturn visitFunctionDeclaration({...visitorOptions, node});\n\t\t} else if (typescript.isFunctionExpression(node)) {\n\t\t\treturn visitFunctionExpression({...visitorOptions, node});\n\t\t} else if (typescript.isEnumDeclaration(node)) {\n\t\t\treturn visitEnumDeclaration({...visitorOptions, node});\n\t\t} else if (typescript.isInterfaceDeclaration(node)) {\n\t\t\treturn visitInterfaceDeclaration({...visitorOptions, node});\n\t\t} else if (typescript.isTypeAliasDeclaration(node)) {\n\t\t\treturn visitTypeAliasDeclaration({...visitorOptions, node});\n\t\t} else if (typescript.isModuleDeclaration(node)) {\n\t\t\treturn visitModuleDeclaration({...visitorOptions, node});\n\t\t} else if (typescript.isExportDeclaration(node)) {\n\t\t\treturn visitExportDeclaration({...visitorOptions, node});\n\t\t} else if (typescript.isExportAssignment(node)) {\n\t\t\treturn visitExportAssignment({...visitorOptions, node});\n\t\t} else if (typescript.isVariableStatement(node)) {\n\t\t\treturn visitVariableStatement({node, ...visitorOptions});\n\t\t} else if (typescript.isVariableDeclarationList(node)) {\n\t\t\treturn visitVariableDeclarationList({node, ...visitorOptions});\n\t\t} else if (typescript.isVariableDeclaration(node)) {\n\t\t\treturn visitVariableDeclaration({node, ...visitorOptions});\n\t\t} else if (typescript.isImportDeclaration(node)) {\n\t\t\treturn visitImportDeclaration({node, ...visitorOptions});\n\t\t} else if (typescript.isImportSpecifier(node)) {\n\t\t\treturn visitImportSpecifier({node, ...visitorOptions});\n\t\t} else if (typescript.isImportClause(node)) {\n\t\t\treturn visitImportClause({node, ...visitorOptions});\n\t\t} else if (typescript.isNamedImports(node)) {\n\t\t\treturn visitNamedImports({node, ...visitorOptions});\n\t\t} else if (typescript.isNamespaceImport(node)) {\n\t\t\treturn visitNamespaceImport({node, ...visitorOptions});\n\t\t} else if (typescript.isImportEqualsDeclaration(node)) {\n\t\t\treturn visitImportEqualsDeclaration({node, ...visitorOptions});\n\t\t} else if (typescript.isArrayBindingPattern(node)) {\n\t\t\treturn visitArrayBindingPattern({node, ...visitorOptions});\n\t\t} else if (typescript.isObjectBindingPattern(node)) {\n\t\t\treturn visitObjectBindingPattern({node, ...visitorOptions});\n\t\t} else if (typescript.isBindingElement(node)) {\n\t\t\treturn visitBindingElement({node, ...visitorOptions});\n\t\t} else if (typescript.isIdentifier(node)) {\n\t\t\treturn visitIdentifier({node, ...visitorOptions});\n\t\t} else {\n\t\t\t// Fall back to dropping the node\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconst updatedSourceFile = preserveMeta(typescript.visitEachChild(sourceFile, visitor, context), sourceFile, options);\n\n\ttransformationLog?.finish(updatedSourceFile);\n\tfullBenchmark?.finish();\n\n\treturn updatedSourceFile;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {ToExportDeclarationTransformerVisitorOptions} from \"../to-export-declaration-transformer-visitor-options\";\nimport {generateIdentifierName} from \"../../../util/generate-identifier-name\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {preserveMeta, preserveParents, preserveSymbols} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitClassDeclaration(options: ToExportDeclarationTransformerVisitorOptions<TS.ClassDeclaration>): TS.ClassDeclaration {\n\tconst {node, typescript, appendNodes, sourceFile} = options;\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\tconst nameText = node.name == null ? generateIdentifierName(sourceFile.fileName, \"class\") : node.name.text;\n\tlet returnNode: TS.ClassDeclaration;\n\n\tconst {exportSpecifier} = createExportSpecifierFromNameAndModifiers({\n\t\t...options,\n\t\tname: nameText,\n\t\tmodifiers: node.modifiers\n\t});\n\n\t// Append an ExportDeclaration\n\tappendNodes(preserveParents(typescript.createExportDeclaration(undefined, undefined, typescript.createNamedExports([exportSpecifier])), {typescript}));\n\n\t// Update the name if it changed\n\tif (node.name != null && nameText === node.name.text) {\n\t\treturnNode = node;\n\t} else {\n\t\treturnNode = preserveMeta(\n\t\t\ttypescript.updateClassDeclaration(node, node.decorators, node.modifiers, typescript.createIdentifier(nameText), node.typeParameters, node.heritageClauses, node.members),\n\t\t\tnode,\n\t\t\toptions\n\t\t);\n\t}\n\n\tconst propertyName = exportSpecifier.propertyName ?? exportSpecifier.name;\n\tpreserveSymbols(propertyName, returnNode, options);\n\n\treturn returnNode;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {ToExportDeclarationTransformerVisitorOptions} from \"../to-export-declaration-transformer-visitor-options\";\nimport {generateIdentifierName} from \"../../../util/generate-identifier-name\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {preserveMeta, preserveParents, preserveSymbols} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitClassExpression(options: ToExportDeclarationTransformerVisitorOptions<TS.ClassExpression>): TS.ClassExpression {\n\tconst {node, typescript, appendNodes, sourceFile} = options;\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\tconst nameText = node.name == null ? generateIdentifierName(sourceFile.fileName, \"class\") : node.name.text;\n\tlet returnNode: TS.ClassExpression;\n\n\tconst {exportSpecifier} = createExportSpecifierFromNameAndModifiers({...options, name: nameText, modifiers: node.modifiers});\n\n\t// Append an ExportDeclaration\n\tappendNodes(preserveParents(typescript.createExportDeclaration(undefined, undefined, typescript.createNamedExports([exportSpecifier])), {typescript}));\n\n\t// Update the name if it changed\n\tif (node.name != null && nameText === node.name.text) {\n\t\treturnNode = node;\n\t} else {\n\t\treturnNode = preserveMeta(\n\t\t\ttypescript.updateClassExpression(node, node.modifiers, typescript.createIdentifier(nameText), node.typeParameters, node.heritageClauses, node.members),\n\t\t\tnode,\n\t\t\toptions\n\t\t);\n\t}\n\n\tconst propertyName = exportSpecifier.propertyName ?? exportSpecifier.name;\n\tpreserveSymbols(propertyName, returnNode, options);\n\n\treturn returnNode;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {ToExportDeclarationTransformerVisitorOptions} from \"../to-export-declaration-transformer-visitor-options\";\nimport {generateIdentifierName} from \"../../../util/generate-identifier-name\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {preserveMeta, preserveParents, preserveSymbols} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitFunctionDeclaration(options: ToExportDeclarationTransformerVisitorOptions<TS.FunctionDeclaration>): TS.FunctionDeclaration {\n\tconst {node, typescript, sourceFile, appendNodes} = options;\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\tconst nameText = node.name == null ? generateIdentifierName(sourceFile.fileName, \"function\") : node.name.text;\n\tlet returnNode: TS.FunctionDeclaration;\n\tconst {exportSpecifier} = createExportSpecifierFromNameAndModifiers({...options, name: nameText, modifiers: node.modifiers});\n\n\t// Append an ExportDeclaration\n\tappendNodes(preserveParents(typescript.createExportDeclaration(undefined, undefined, typescript.createNamedExports([exportSpecifier])), {typescript}));\n\n\t// Update the name if it changed\n\tif (node.name != null && nameText === node.name.text) {\n\t\treturnNode = node;\n\t} else {\n\t\treturnNode = preserveMeta(\n\t\t\ttypescript.updateFunctionDeclaration(\n\t\t\t\tnode,\n\t\t\t\tnode.decorators,\n\t\t\t\tnode.modifiers,\n\t\t\t\tnode.asteriskToken,\n\t\t\t\ttypescript.createIdentifier(nameText),\n\t\t\t\tnode.typeParameters,\n\t\t\t\tnode.parameters,\n\t\t\t\tnode.type,\n\t\t\t\tnode.body\n\t\t\t),\n\t\t\tnode,\n\t\t\toptions\n\t\t);\n\t}\n\n\tconst propertyName = exportSpecifier.propertyName ?? exportSpecifier.name;\n\tpreserveSymbols(propertyName, returnNode, options);\n\n\treturn returnNode;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {ToExportDeclarationTransformerVisitorOptions} from \"../to-export-declaration-transformer-visitor-options\";\nimport {generateIdentifierName} from \"../../../util/generate-identifier-name\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {preserveMeta, preserveParents, preserveSymbols} from \"../../../util/clone-node-with-meta\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\n\nexport function visitFunctionExpression(options: ToExportDeclarationTransformerVisitorOptions<TS.FunctionExpression>): TS.FunctionExpression {\n\tconst {node, typescript, sourceFile, appendNodes} = options;\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\tconst nameText = node.name == null ? generateIdentifierName(sourceFile.fileName, \"function\") : node.name.text;\n\tlet returnNode: TS.FunctionExpression;\n\tconst {exportSpecifier} = createExportSpecifierFromNameAndModifiers({...options, name: nameText, modifiers: node.modifiers});\n\n\t// Append an ExportDeclaration\n\tappendNodes(preserveParents(typescript.createExportDeclaration(undefined, undefined, typescript.createNamedExports([exportSpecifier])), {typescript}));\n\n\t// Update the name if it changed\n\tif (node.name != null && nameText === node.name.text) {\n\t\treturnNode = node;\n\t} else {\n\t\treturnNode = preserveMeta(\n\t\t\ttypescript.updateFunctionExpression(\n\t\t\t\tnode,\n\t\t\t\tnode.modifiers,\n\t\t\t\tnode.asteriskToken,\n\t\t\t\ttypescript.createIdentifier(nameText),\n\t\t\t\tnode.typeParameters,\n\t\t\t\tnode.parameters,\n\t\t\t\tnode.type,\n\t\t\t\tnode.body\n\t\t\t),\n\t\t\tnode,\n\t\t\toptions\n\t\t);\n\t}\n\n\tconst propertyName = exportSpecifier.propertyName ?? exportSpecifier.name;\n\tpreserveSymbols(propertyName, returnNode, options);\n\n\treturn returnNode;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {ToExportDeclarationTransformerVisitorOptions} from \"../to-export-declaration-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\nimport {preserveParents, preserveSymbols} from \"../../../util/clone-node-with-meta\";\n\nexport function visitEnumDeclaration(options: ToExportDeclarationTransformerVisitorOptions<TS.EnumDeclaration>): TS.EnumDeclaration {\n\tconst {node, typescript, appendNodes} = options;\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\tconst {exportSpecifier} = createExportSpecifierFromNameAndModifiers({...options, name: node.name.text, modifiers: node.modifiers});\n\n\t// Append an ExportDeclaration\n\tappendNodes(preserveParents(typescript.createExportDeclaration(undefined, undefined, typescript.createNamedExports([exportSpecifier])), {typescript}));\n\n\tconst propertyName = exportSpecifier.propertyName ?? exportSpecifier.name;\n\tpreserveSymbols(propertyName, node, options);\n\n\treturn node;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {ToExportDeclarationTransformerVisitorOptions} from \"../to-export-declaration-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\nimport {traceIdentifiers} from \"../../trace-identifiers/trace-identifiers\";\nimport {preserveParents, preserveSymbols} from \"../../../util/clone-node-with-meta\";\n\nexport function visitVariableStatement(options: ToExportDeclarationTransformerVisitorOptions<TS.VariableStatement>): TS.VariableStatement {\n\tconst {node, typescript, appendNodes} = options;\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\tfor (const declaration of node.declarationList.declarations) {\n\t\tconst identifiers = traceIdentifiers({...options, node: declaration});\n\n\t\tfor (const identifier of identifiers) {\n\t\t\tconst {exportSpecifier} = createExportSpecifierFromNameAndModifiers({\n\t\t\t\t...options,\n\t\t\t\tname: identifier,\n\t\t\t\tmodifiers: node.modifiers\n\t\t\t});\n\t\t\t// Append an ExportDeclaration\n\t\t\tappendNodes(preserveParents(typescript.createExportDeclaration(undefined, undefined, typescript.createNamedExports([exportSpecifier])), {typescript}));\n\n\t\t\tconst propertyName = exportSpecifier.propertyName ?? exportSpecifier.name;\n\t\t\tpreserveSymbols(propertyName, declaration, options);\n\t\t}\n\t}\n\n\treturn node;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {ToExportDeclarationTransformerVisitorOptions} from \"../to-export-declaration-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\nimport {preserveParents, preserveSymbols} from \"../../../util/clone-node-with-meta\";\n\nexport function visitInterfaceDeclaration(options: ToExportDeclarationTransformerVisitorOptions<TS.InterfaceDeclaration>): TS.InterfaceDeclaration {\n\tconst {node, typescript, appendNodes} = options;\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\tconst {exportSpecifier} = createExportSpecifierFromNameAndModifiers({...options, name: node.name.text, modifiers: node.modifiers});\n\n\t// Append an ExportDeclaration\n\tappendNodes(preserveParents(typescript.createExportDeclaration(undefined, undefined, typescript.createNamedExports([exportSpecifier])), {typescript}));\n\n\tconst propertyName = exportSpecifier.propertyName ?? exportSpecifier.name;\n\tpreserveSymbols(propertyName, node, options);\n\n\treturn node;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {ToExportDeclarationTransformerVisitorOptions} from \"../to-export-declaration-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\nimport {preserveParents, preserveSymbols} from \"../../../util/clone-node-with-meta\";\n\nexport function visitModuleDeclaration(options: ToExportDeclarationTransformerVisitorOptions<TS.ModuleDeclaration>): TS.ModuleDeclaration {\n\tconst {node, typescript, appendNodes} = options;\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\tconst {exportSpecifier} = createExportSpecifierFromNameAndModifiers({...options, name: node.name.text, modifiers: node.modifiers});\n\n\t// Append an ExportDeclaration\n\tappendNodes(preserveParents(typescript.createExportDeclaration(undefined, undefined, typescript.createNamedExports([exportSpecifier])), {typescript}));\n\n\tconst propertyName = exportSpecifier.propertyName ?? exportSpecifier.name;\n\tpreserveSymbols(propertyName, node, options);\n\n\treturn node;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {ToExportDeclarationTransformerVisitorOptions} from \"../to-export-declaration-transformer-visitor-options\";\nimport {createExportSpecifierFromNameAndModifiers} from \"../../../util/create-export-specifier-from-name-and-modifiers\";\nimport {hasExportModifier} from \"../../../util/modifier-util\";\nimport {preserveParents, preserveSymbols} from \"../../../util/clone-node-with-meta\";\n\nexport function visitTypeAliasDeclaration(options: ToExportDeclarationTransformerVisitorOptions<TS.TypeAliasDeclaration>): TS.TypeAliasDeclaration {\n\tconst {node, typescript, appendNodes} = options;\n\t// If the node has no export modifier, leave it as it is\n\tif (!hasExportModifier(node, typescript)) return node;\n\n\tconst {exportSpecifier} = createExportSpecifierFromNameAndModifiers({...options, name: node.name.text, modifiers: node.modifiers});\n\n\t// Append an ExportDeclaration\n\tappendNodes(preserveParents(typescript.createExportDeclaration(undefined, undefined, typescript.createNamedExports([exportSpecifier])), {typescript}));\n\n\tconst propertyName = exportSpecifier.propertyName ?? exportSpecifier.name;\n\tpreserveSymbols(propertyName, node, options);\n\n\treturn node;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {ToExportDeclarationTransformerVisitorOptions} from \"../to-export-declaration-transformer-visitor-options\";\nimport {visitClassDeclaration} from \"./visit-class-declaration\";\nimport {visitClassExpression} from \"./visit-class-expression\";\nimport {visitFunctionDeclaration} from \"./visit-function-declaration\";\nimport {visitFunctionExpression} from \"./visit-function-expression\";\nimport {visitEnumDeclaration} from \"./visit-enum-declaration\";\nimport {visitVariableStatement} from \"./visit-variable-statement\";\nimport {visitInterfaceDeclaration} from \"./visit-interface-declaration\";\nimport {visitModuleDeclaration} from \"./visit-module-declaration\";\nimport {visitTypeAliasDeclaration} from \"./visit-type-alias-declaration\";\n\nexport function visitNode({node, ...options}: ToExportDeclarationTransformerVisitorOptions<TS.Node>): TS.Node {\n\tif (options.typescript.isClassDeclaration(node)) {\n\t\treturn visitClassDeclaration({...options, node});\n\t} else if (options.typescript.isClassExpression(node)) {\n\t\treturn visitClassExpression({...options, node});\n\t} else if (options.typescript.isFunctionDeclaration(node)) {\n\t\treturn visitFunctionDeclaration({...options, node});\n\t} else if (options.typescript.isFunctionExpression(node)) {\n\t\treturn visitFunctionExpression({...options, node});\n\t} else if (options.typescript.isEnumDeclaration(node)) {\n\t\treturn visitEnumDeclaration({...options, node});\n\t} else if (options.typescript.isInterfaceDeclaration(node)) {\n\t\treturn visitInterfaceDeclaration({...options, node});\n\t} else if (options.typescript.isTypeAliasDeclaration(node)) {\n\t\treturn visitTypeAliasDeclaration({...options, node});\n\t} else if (options.typescript.isModuleDeclaration(node)) {\n\t\treturn visitModuleDeclaration({...options, node});\n\t} else if (options.typescript.isVariableStatement(node)) {\n\t\treturn visitVariableStatement({...options, node});\n\t} else {\n\t\t// Only consider root-level statements here\n\t\treturn node;\n\t}\n}\n","import {TS} from \"../../../../../type/ts\";\nimport {SourceFileBundlerVisitorOptions} from \"../source-file-bundler/source-file-bundler-visitor-options\";\nimport {visitNode} from \"./visitor/visit-node\";\nimport {getNodePlacementQueue} from \"../../util/get-node-placement-queue\";\nimport {ToExportDeclarationTransformerVisitorOptions} from \"./to-export-declaration-transformer-visitor-options\";\nimport {shouldDebugMetrics, shouldDebugSourceFile} from \"../../../../../util/is-debug/should-debug\";\nimport {logMetrics} from \"../../../../../util/logging/log-metrics\";\nimport {logTransformer} from \"../../../../../util/logging/log-transformer\";\nimport {preserveMeta} from \"../../util/clone-node-with-meta\";\n\nexport function toExportDeclarationTransformer(options: SourceFileBundlerVisitorOptions): TS.SourceFile {\n\tconst {typescript, context, sourceFile, pluginOptions, printer} = options;\n\n\tconst fullBenchmark = shouldDebugMetrics(pluginOptions.debug, sourceFile) ? logMetrics(`Adding ExportDeclarations`, sourceFile.fileName) : undefined;\n\n\tconst transformationLog = shouldDebugSourceFile(pluginOptions.debug, sourceFile) ? logTransformer(\"Adding ExportDeclarations\", sourceFile, printer) : undefined;\n\n\tconst nodePlacementQueue = getNodePlacementQueue({typescript});\n\n\t// Prepare some VisitorOptions\n\tconst visitorOptions: Omit<ToExportDeclarationTransformerVisitorOptions<TS.Node>, \"node\"> = {\n\t\t...options,\n\t\t...nodePlacementQueue,\n\n\t\tchildContinuation: <U extends TS.Node>(node: U): U =>\n\t\t\ttypescript.visitEachChild(\n\t\t\t\tnode,\n\t\t\t\tnextNode =>\n\t\t\t\t\tnodePlacementQueue.wrapVisitResult(\n\t\t\t\t\t\tvisitNode({\n\t\t\t\t\t\t\t...visitorOptions,\n\t\t\t\t\t\t\tnode: nextNode\n\t\t\t\t\t\t})\n\t\t\t\t\t),\n\t\t\t\tcontext\n\t\t\t),\n\n\t\tcontinuation: <U extends TS.Node>(node: U): U =>\n\t\t\tnodePlacementQueue.wrapVisitResult(\n\t\t\t\tvisitNode({\n\t\t\t\t\t...visitorOptions,\n\t\t\t\t\tnode\n\t\t\t\t})\n\t\t\t) as U\n\t};\n\n\tlet result = typescript.visitEachChild(sourceFile, nextNode => visitorOptions.continuation(nextNode), context);\n\n\t// There may be prepended or appended nodes that hasn't been added yet. Do so!\n\tconst [missingPrependNodes, missingAppendNodes] = nodePlacementQueue.flush();\n\tif (missingPrependNodes.length > 0 || missingAppendNodes.length > 0) {\n\t\tresult = typescript.updateSourceFileNode(\n\t\t\tresult,\n\t\t\t[...(missingPrependNodes as TS.Statement[]), ...result.statements, ...(missingAppendNodes as TS.Statement[])],\n\t\t\tresult.isDeclarationFile,\n\t\t\tresult.referencedFiles,\n\t\t\tresult.typeReferenceDirectives,\n\t\t\tresult.hasNoDefaultLib,\n\t\t\tresult.libReferenceDirectives\n\t\t);\n\t}\n\n\tresult = preserveMeta(result, result, options);\n\n\ttransformationLog?.finish(result);\n\tfullBenchmark?.finish();\n\n\treturn result;\n}\n","import {CompilerHost} from \"../../../compiler-host/compiler-host\";\n\nexport interface TypeModuleReferenceIsAllowedOptions {\n\thost: CompilerHost;\n\ttypeModule: string;\n}\n\nexport function typeModuleReferenceIsAllowed({host, typeModule}: TypeModuleReferenceIsAllowedOptions): boolean {\n\tconst compilerOptions = host.getCompilationSettings();\n\tif (compilerOptions.types == null || compilerOptions.types.length < 1) return true;\n\treturn compilerOptions.types.includes(typeModule);\n}\n","import {typeModuleReferenceIsAllowed} from \"./type-module-reference-is-allowed\";\nimport {normalize} from \"../../../../util/path/path-util\";\nimport {CompilerHost} from \"../../../compiler-host/compiler-host\";\n\nexport interface GetTypeReferenceModuleFromFileNameOptions {\n\thost: CompilerHost;\n\tfileName: string;\n}\n\nexport function getTypeReferenceModuleFromFileName({host, fileName}: GetTypeReferenceModuleFromFileNameOptions): string | undefined {\n\tfor (const typeRoot of host.getTypeRoots()) {\n\t\tif (!fileName.includes(typeRoot)) continue;\n\t\tconst base = normalize(fileName.slice(typeRoot.length + 1));\n\t\tconst typeModule = base.includes(\"/\") ? base.slice(0, base.indexOf(\"/\")) : base;\n\n\t\tif (typeModuleReferenceIsAllowed({host, typeModule})) {\n\t\t\treturn typeModule;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n","import {getAliasedDeclaration, GetAliasedDeclarationOptions} from \"./get-aliased-declaration\";\nimport {getTypeReferenceModuleFromFileName} from \"./get-type-reference-module-from-file-name\";\nimport {TS} from \"../../../../type/ts\";\n\nexport interface GetTypeReferenceModuleFromNodeOptions extends GetAliasedDeclarationOptions {\n\tnode: TS.Identifier;\n\timportDeclarations: TS.ImportDeclaration[];\n}\n\nexport function getTypeReferenceModuleFromNode(options: GetTypeReferenceModuleFromNodeOptions): string | undefined {\n\tconst aliasedDeclaration = getAliasedDeclaration(options);\n\n\tif (aliasedDeclaration == null) return;\n\tconst declarationSourceFile = aliasedDeclaration.getSourceFile();\n\tif (declarationSourceFile == null) return;\n\n\tconst typeReference = getTypeReferenceModuleFromFileName({...options, fileName: declarationSourceFile.fileName});\n\tif (typeReference == null) return undefined;\n\n\t// Otherwise, check if the particular binding is already directly imported somewhere, in which case the directive isn't needed\n\tfor (const importDeclaration of options.importDeclarations) {\n\t\t// The module specifier must be identical to the name of the type reference\n\t\tif (!options.typescript.isStringLiteralLike(importDeclaration.moduleSpecifier)) continue;\n\t\tif (importDeclaration.moduleSpecifier.text !== typeReference) continue;\n\n\t\t// Otherwise, we only need to verify that the identifier is included as a binding inside the ImportClause\n\t\tif (importDeclaration.importClause == null) continue;\n\n\t\t// If the identifier is imported as a default import, we don't need the directive\n\t\tif (importDeclaration.importClause.name != null && importDeclaration.importClause.name.text === options.node.text) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// If there are no named bindings, there's no way the ImportClause may refer to the module of the type reference\n\t\tif (importDeclaration.importClause.namedBindings == null) continue;\n\n\t\tif (options.typescript.isNamespaceImport(importDeclaration.importClause.namedBindings)) {\n\t\t\t// If the identifier is imported as a namespace import, we don't need the directive\n\t\t\tif (importDeclaration.importClause.namedBindings.name.text === options.node.text) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const importSpecifier of importDeclaration.importClause.namedBindings.elements) {\n\t\t\t\t// If the name of the ImportSpecifier is identical to that of the identifier, we don't need the directive\n\t\t\t\tif (importSpecifier.name.text === options.node.text) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Otherwise, preserve it!\n\treturn typeReference;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TypeReferenceCollectorVisitorOptions} from \"../type-reference-collector-visitor-options\";\nimport {getTypeReferenceModuleFromNode} from \"../../../util/get-type-reference-module-from-node\";\n\nexport function visitIdentifier(options: TypeReferenceCollectorVisitorOptions<TS.Identifier>): void {\n\tconst {node, addTypeReference} = options;\n\n\tconst typeReferenceModule = getTypeReferenceModuleFromNode({...options, node});\n\tif (typeReferenceModule != null) {\n\t\taddTypeReference(typeReferenceModule);\n\t}\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TypeReferenceCollectorVisitorOptions} from \"../type-reference-collector-visitor-options\";\nimport {visitIdentifier} from \"./visit-identifier\";\n\nexport function visitNode({node, ...options}: TypeReferenceCollectorVisitorOptions<TS.Node>): void {\n\tif (options.typescript.isIdentifier(node)) {\n\t\treturn visitIdentifier({...options, node});\n\t} else {\n\t\t// Only consider root-level statements here\n\t\treturn options.childContinuation(node);\n\t}\n}\n","import {SourceFileBundlerVisitorOptions} from \"../source-file-bundler/source-file-bundler-visitor-options\";\nimport {TS} from \"../../../../../type/ts\";\nimport {TypeReferenceCollectorVisitorOptions} from \"./type-reference-collector-visitor-options\";\nimport {visitNode} from \"./visitor/visit-node\";\n\nexport function typeReferenceCollector(options: SourceFileBundlerVisitorOptions): TS.SourceFile {\n\tconst {typescript} = options;\n\tconst typeReferences = new Set<string>();\n\toptions.sourceFileToTypeReferencesSet.set(options.sourceFile.fileName, typeReferences);\n\n\t// Prepare some VisitorOptions\n\tconst visitorOptions: Omit<TypeReferenceCollectorVisitorOptions<TS.Node>, \"node\"> = {\n\t\t...options,\n\t\timportDeclarations: options.sourceFile.statements.filter(options.typescript.isImportDeclaration),\n\n\t\taddTypeReference(module: string): void {\n\t\t\ttypeReferences.add(module);\n\t\t},\n\n\t\tchildContinuation: <U extends TS.Node>(node: U): void =>\n\t\t\ttypescript.forEachChild(node, nextNode => {\n\t\t\t\tvisitNode({\n\t\t\t\t\t...visitorOptions,\n\t\t\t\t\tnode: nextNode\n\t\t\t\t});\n\t\t\t}),\n\n\t\tcontinuation: <U extends TS.Node>(node: U): void => {\n\t\t\tvisitNode({\n\t\t\t\t...visitorOptions,\n\t\t\t\tnode\n\t\t\t});\n\t\t}\n\t};\n\n\ttypescript.forEachChild(options.sourceFile, nextNode => {\n\t\tvisitorOptions.continuation(nextNode);\n\t});\n\treturn options.sourceFile;\n}\n","import {DeclarationBundlerOptions} from \"./declaration-bundler-options\";\nimport {TS} from \"../../../type/ts\";\nimport {sourceFileBundler} from \"./transformers/source-file-bundler/source-file-bundler\";\nimport {moduleMerger} from \"./transformers/module-merger/module-merger\";\nimport {deconflicter} from \"./transformers/deconflicter/deconflicter\";\nimport {ensureDeclareModifierTransformer} from \"./transformers/ensure-declare-modifier-transformer/ensure-declare-modifier-transformer\";\nimport {moduleBlockExtractor} from \"./transformers/module-block-extractor/module-block-extractor\";\nimport {treeShaker} from \"./transformers/tree-shaker/tree-shaker\";\nimport {statementMerger} from \"./transformers/statement-merger/statement-merger\";\nimport {toExportDeclarationTransformer} from \"./transformers/to-export-declaration-transformer/to-export-declaration-transformer\";\nimport {ensureNoExportModifierTransformer} from \"./transformers/ensure-no-export-modifier-transformer/ensure-no-export-modifier-transformer\";\nimport {typeReferenceCollector} from \"./transformers/type-reference-collector/type-reference-collector\";\n\n/**\n * Bundles declarations\n */\nexport function declarationBundler(options: DeclarationBundlerOptions): TS.CustomTransformers {\n\treturn {\n\t\tafterDeclarations: [\n\t\t\t// Bundle all SourceFiles within the declaration bundle\n\t\t\tsourceFileBundler(\n\t\t\t\toptions,\n\t\t\t\t// Merge modules inside the entry module(s),\n\t\t\t\tmoduleBlockExtractor,\n\n\t\t\t\tmoduleMerger(\n\t\t\t\t\t// Merge modules inside the entry module(s),\n\t\t\t\t\tmoduleBlockExtractor,\n\t\t\t\t\t// Ensure that nodes that require it have the 'declare' modifier\n\t\t\t\t\tensureDeclareModifierTransformer\n\t\t\t\t),\n\n\t\t\t\t// Generate ExportDeclarations where 'export' modifiers are otherwise being used\n\t\t\t\ttoExportDeclarationTransformer,\n\n\t\t\t\t// Deconflicts bindings\n\t\t\t\tdeconflicter,\n\n\t\t\t\t// Removes 'export' modifiers from Nodes\n\t\t\t\tensureNoExportModifierTransformer,\n\n\t\t\t\t// Ensure that nodes that require it have the 'declare' modifier\n\t\t\t\tensureDeclareModifierTransformer,\n\n\t\t\t\t// Tree-shake declarations\n\t\t\t\ttreeShaker,\n\n\t\t\t\t// Merge related statements\n\t\t\t\tstatementMerger({markAsModuleIfNeeded: true}),\n\n\t\t\t\t// Collects type references\n\t\t\t\ttypeReferenceCollector\n\t\t\t)\n\t\t]\n\t};\n}\n","import {SourceDescription, SourceMap} from \"rollup\";\nimport {D_TS_EXTENSION, D_TS_MAP_EXTENSION, SOURCE_MAP_COMMENT, SOURCE_MAP_COMMENT_REGEXP} from \"../../../constant/constant\";\nimport {declarationBundler} from \"../../transformer/declaration-bundler/declaration-bundler\";\nimport {DeclarationBundlerOptions} from \"../../transformer/declaration-bundler/declaration-bundler-options\";\n\nexport interface BundleDeclarationsForChunkOptions extends DeclarationBundlerOptions {}\n\nexport interface BundleDeclarationsForChunkResult extends SourceDescription {}\n\nexport function bundleDeclarationsForChunk(options: BundleDeclarationsForChunkOptions): BundleDeclarationsForChunkResult {\n\tlet code = \"\";\n\tlet map: SourceMap | undefined;\n\n\tconst emitOutput = options.host.emit(undefined, true, declarationBundler(options));\n\n\tfor (const {name, text} of emitOutput.outputFiles) {\n\t\tif (name.endsWith(D_TS_MAP_EXTENSION)) {\n\t\t\tmap = JSON.parse(text) as SourceMap;\n\t\t\tmap.file = options.declarationPaths.fileName;\n\t\t} else if (name.endsWith(D_TS_EXTENSION)) {\n\t\t\tcode += text.replace(SOURCE_MAP_COMMENT_REGEXP, `${SOURCE_MAP_COMMENT}=${options.declarationMapPaths.fileName}`);\n\t\t}\n\t}\n\n\treturn {\n\t\tcode,\n\t\t...(map == null ? {} : {map: JSON.stringify(map)})\n\t};\n}\n","import {join} from \"../../../../../util/path/path-util\";\n\nexport interface PreparePathsOptions {\n\tfileName: string;\n\trelativeOutDir: string;\n\tabsoluteOutDir: string;\n}\n\nexport interface PathsResult {\n\tfileName: string;\n\trelative: string;\n\tabsolute: string;\n}\n\nexport function preparePaths({relativeOutDir, absoluteOutDir, fileName}: PreparePathsOptions): PathsResult {\n\tconst absolutePath = join(absoluteOutDir, fileName);\n\tconst relativePath = join(relativeOutDir, fileName);\n\n\treturn {\n\t\tfileName,\n\t\tabsolute: absolutePath,\n\t\trelative: relativePath\n\t};\n}\n","import {OutputChunk, OutputOptions} from \"rollup\";\nimport {join, normalize} from \"../path/path-util\";\nimport {getOutDir} from \"../get-out-dir/get-out-dir\";\nimport {PathsResult, preparePaths} from \"../../service/transformer/declaration-bundler/util/prepare-paths/prepare-paths\";\nimport {ROLLUP_PLUGIN_MULTI_ENTRY} from \"../../constant/constant\";\nimport {CompilerHost} from \"../../service/compiler-host/compiler-host\";\n\nexport interface PreNormalizedChunk {\n\tfileName: string;\n\tisEntry: boolean;\n\tmodules: string[];\n}\n\nexport interface NormalizedChunk {\n\tpaths: PathsResult;\n\tisEntry: boolean;\n\tmodules: Set<string>;\n\tentryModules: Set<string>;\n}\n\nexport interface NormalizeChunkOptions {\n\thost: CompilerHost;\n\toutputOptions: OutputOptions;\n\trelativeOutDir: string;\n\tmultiEntryFileNames: Set<string> | undefined;\n}\n\nexport function preNormalizeChunk(chunk: OutputChunk): PreNormalizedChunk {\n\treturn {\n\t\tmodules: Object.keys(chunk.modules).map(normalize),\n\t\tfileName: normalize(chunk.fileName),\n\t\tisEntry: chunk.isEntry\n\t};\n}\n\nexport function normalizeChunk(chunk: PreNormalizedChunk, {host, outputOptions, relativeOutDir, multiEntryFileNames}: NormalizeChunkOptions): NormalizedChunk {\n\tconst cwd = host.getCwd();\n\n\tfor (let i = 0; i < chunk.modules.length; i++) {\n\t\tconst module = chunk.modules[i];\n\n\t\tif (module === ROLLUP_PLUGIN_MULTI_ENTRY && multiEntryFileNames != null) {\n\t\t\t// Reassign the entry file names accordingly\n\t\t\tchunk.modules.splice(i, 1, ...multiEntryFileNames);\n\t\t}\n\t}\n\n\tconst visitableModules = chunk.modules.filter(module => host.isSupportedFileName(module, true));\n\tconst entryModules = chunk.isEntry ? [visitableModules.slice(-1)[0]] : [...visitableModules].reverse();\n\n\treturn {\n\t\tisEntry: chunk.isEntry,\n\t\tpaths: preparePaths({\n\t\t\tfileName: normalize(chunk.fileName),\n\t\t\trelativeOutDir: getOutDir(cwd, outputOptions),\n\t\t\tabsoluteOutDir: join(cwd, relativeOutDir)\n\t\t}),\n\t\tmodules: new Set(chunk.modules),\n\t\tentryModules: new Set(entryModules)\n\t};\n}\n","import {ModuleFormat} from \"rollup\";\nimport {PreNormalizedChunk} from \"./normalize-chunk\";\nimport {getChunkForModule} from \"../../service/transformer/declaration-bundler/util/get-chunk-filename\";\nimport {basename, stripKnownExtension} from \"../path/path-util\";\nimport {generateRandomHash} from \"../hash/generate-random-hash\";\nimport {SourceFileToDependenciesMap} from \"../../service/transformer/declaration-bundler/declaration-bundler-options\";\nimport {CompilerHost} from \"../../service/compiler-host/compiler-host\";\nimport {pickResolvedModule} from \"../pick-resolved-module\";\n\nfunction createCommonChunk(module: string, code: string, format: ModuleFormat, chunkFileNames = `[name]-[hash].js`): PreNormalizedChunk {\n\tconst name = stripKnownExtension(basename(module));\n\tconst hash = generateRandomHash({key: code});\n\treturn {\n\t\tfileName: chunkFileNames\n\t\t\t.replace(/\\[format]/g, format)\n\t\t\t.replace(/\\[hash]/g, hash)\n\t\t\t.replace(/\\[name]/g, name),\n\t\tmodules: [module],\n\t\tisEntry: false\n\t};\n}\n\nfunction ensureChunkForModule(\n\tmodule: string,\n\tcode: string,\n\tchunks: PreNormalizedChunk[],\n\tmoduleDependencyMap: SourceFileToDependenciesMap,\n\tformat: ModuleFormat,\n\tchunkFileNames: string | undefined\n): PreNormalizedChunk {\n\tlet chunk = getChunkForModule(module, chunks);\n\tconst [firstChunk] = chunks;\n\n\tif (chunk == null) {\n\t\tif (chunks.length === 1) {\n\t\t\tfirstChunk.modules.unshift(module);\n\t\t\treturn firstChunk;\n\t\t} else {\n\t\t\t// Find all modules that refer to this module.\n\t\t\tconst referencingModules = [...moduleDependencyMap.entries()]\n\t\t\t\t.map(([otherModule, dependencies]) => [otherModule, [...dependencies]] as const)\n\t\t\t\t.filter(([, dependencies]) => dependencies.find(resolveModule => pickResolvedModule(resolveModule, false) === module))\n\t\t\t\t.map(([otherModule]) => otherModule);\n\n\t\t\t// Find all chunks for the referencing modules\n\t\t\tconst [firstReferencingChunk, ...otherReferencingChunks] = new Set(\n\t\t\t\treferencingModules.map(referencingModule => getChunkForModule(referencingModule, chunks)).filter(chunkOrUndefined => chunkOrUndefined != null)\n\t\t\t);\n\n\t\t\t// If only 1 chunk is matched, use that one\n\t\t\tif (firstReferencingChunk != null && otherReferencingChunks.length === 0) {\n\t\t\t\tfirstReferencingChunk.modules.unshift(module);\n\t\t\t\treturn firstReferencingChunk;\n\t\t\t}\n\n\t\t\t// Otherwise, create a new chunk\n\t\t\telse {\n\t\t\t\tchunk = createCommonChunk(module, code, format, chunkFileNames);\n\t\t\t\tchunks.push(chunk);\n\t\t\t\treturn chunk;\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn chunk;\n\t}\n}\n\nexport function mergeChunksWithAmbientDependencies(chunks: PreNormalizedChunk[], host: CompilerHost, format: ModuleFormat = \"esm\", chunkFileNames: string | undefined): void {\n\tconst dependencyToModulesMap: Map<string, Set<string>> = new Map();\n\tconst sourceFileToDependenciesMap = host.getAllDependencies();\n\n\tfor (const [module, dependencies] of sourceFileToDependenciesMap.entries()) {\n\t\tfor (const resolvedModule of dependencies) {\n\t\t\tconst dependency = pickResolvedModule(resolvedModule, false);\n\t\t\tif (dependency == null) continue;\n\t\t\tlet modulesForDependency = dependencyToModulesMap.get(dependency);\n\t\t\tif (modulesForDependency == null) {\n\t\t\t\tmodulesForDependency = new Set();\n\t\t\t\tdependencyToModulesMap.set(dependency, modulesForDependency);\n\t\t\t}\n\t\t\tmodulesForDependency.add(module);\n\t\t}\n\t}\n\n\tfor (const [dependency, modulesForDependency] of dependencyToModulesMap.entries()) {\n\t\tconst text = host.readFile(dependency);\n\t\tif (text == null) continue;\n\t\tconst chunkWithDependency = ensureChunkForModule(dependency, text, chunks, sourceFileToDependenciesMap, format, chunkFileNames);\n\n\t\tconst chunksForModulesForDependency = new Set<PreNormalizedChunk>(\n\t\t\t[...modulesForDependency].map(moduleForDependency => ensureChunkForModule(moduleForDependency, text, chunks, sourceFileToDependenciesMap, format, chunkFileNames))\n\t\t);\n\n\t\t// If the modules that refer to the dependency are divided across multiple chunks, and one of those chunks contain the dependency,\n\t\t// move it into its own chunk\n\t\tif (chunksForModulesForDependency.size > 1) {\n\t\t\tconst containingChunk = [...chunksForModulesForDependency].find(chunkForModuleDependency => chunkForModuleDependency === chunkWithDependency);\n\t\t\tif (containingChunk != null) {\n\t\t\t\tcontainingChunk.modules.splice(containingChunk.modules.indexOf(dependency), 1);\n\t\t\t\tchunks.push(createCommonChunk(dependency, text, format, chunkFileNames));\n\t\t\t}\n\t\t}\n\t}\n}\n","import chalk from \"chalk\";\nimport {getFormattedDateTimePrefix} from \"./get-formatted-date-time-prefix\";\n\nexport function logEmit(fileName: string, text: string): void {\n\tconsole.log(`${getFormattedDateTimePrefix()}${chalk.blue(`emit: ${fileName}`)}`);\n\tconsole.log(chalk.white(text));\n}\n","import {OutputBundle, OutputOptions, PluginContext} from \"rollup\";\nimport {TypescriptPluginOptions} from \"../../../plugin/i-typescript-plugin-options\";\nimport {isOutputChunk} from \"../../../util/is-output-chunk/is-output-chunk\";\nimport {getDeclarationOutDir} from \"../../../util/get-declaration-out-dir/get-declaration-out-dir\";\nimport {getOutDir} from \"../../../util/get-out-dir/get-out-dir\";\nimport {basename, dirname, join, nativeNormalize, relative, setExtension} from \"../../../util/path/path-util\";\nimport {D_TS_EXTENSION, D_TS_MAP_EXTENSION, JS_EXTENSION} from \"../../../constant/constant\";\nimport {bundleDeclarationsForChunk} from \"./bundle-declarations-for-chunk\";\nimport {ReferenceCache, SourceFileToNodeToReferencedIdentifiersCache} from \"../../transformer/declaration-bundler/transformers/reference/cache/reference-cache\";\nimport {normalizeChunk, preNormalizeChunk} from \"../../../util/chunk/normalize-chunk\";\nimport {shouldDebugEmit, shouldDebugMetrics} from \"../../../util/is-debug/should-debug\";\nimport {logMetrics} from \"../../../util/logging/log-metrics\";\nimport {CompilerHost} from \"../../compiler-host/compiler-host\";\nimport {mergeChunksWithAmbientDependencies} from \"../../../util/chunk/merge-chunks-with-ambient-dependencies\";\nimport {preparePaths} from \"../../transformer/declaration-bundler/util/prepare-paths/prepare-paths\";\nimport {logEmit} from \"../../../util/logging/log-emit\";\nimport {TS} from \"../../../type/ts\";\n\nexport interface EmitDeclarationsOptions {\n\tpluginContext: PluginContext;\n\tbundle: OutputBundle;\n\thost: CompilerHost;\n\tpluginOptions: TypescriptPluginOptions;\n\toutputOptions: OutputOptions;\n\tmultiEntryFileNames: Set<string> | undefined;\n\toriginalCompilerOptions: TS.CompilerOptions;\n}\n\nexport function emitDeclarations(options: EmitDeclarationsOptions): void {\n\tconst fullBenchmark = shouldDebugMetrics(options.pluginOptions.debug) ? logMetrics(`Emit declarations`) : undefined;\n\n\tconst typescript = options.host.getTypescript();\n\tconst cwd = options.host.getCwd();\n\tconst relativeOutDir = getOutDir(cwd, options.outputOptions);\n\n\tconst chunks = Object.values(options.bundle).filter(isOutputChunk).map(preNormalizeChunk);\n\n\t// Merge ambient dependencies into the chunks\n\tmergeChunksWithAmbientDependencies(chunks, options.host, options.outputOptions.format, options.outputOptions.chunkFileNames);\n\t// Normalize the chunks\n\tconst normalizedChunks = chunks.map(chunk => normalizeChunk(chunk, {...options, relativeOutDir}));\n\n\tconst relativeDeclarationOutDir = getDeclarationOutDir(cwd, options.originalCompilerOptions, options.outputOptions);\n\tconst absoluteDeclarationOutDir = join(cwd, relativeDeclarationOutDir);\n\n\tconst sourceFileToNodeToReferencedIdentifiersCache: SourceFileToNodeToReferencedIdentifiersCache = new Map();\n\tconst referenceCache: ReferenceCache = new Map();\n\n\tlet virtualOutFile = preparePaths({\n\t\tfileName: setExtension(\"index.js\", D_TS_EXTENSION),\n\t\trelativeOutDir: relativeDeclarationOutDir,\n\t\tabsoluteOutDir: absoluteDeclarationOutDir\n\t});\n\n\t// Rewrite the virtual out file if a hook is provided\n\tif (options.pluginOptions.hook.outputPath != null) {\n\t\tconst result = options.pluginOptions.hook.outputPath(virtualOutFile.absolute, \"declaration\");\n\n\t\tif (result != null) {\n\t\t\tvirtualOutFile = preparePaths({\n\t\t\t\tfileName: basename(result),\n\t\t\t\trelativeOutDir: relative(cwd, dirname(result)),\n\t\t\t\tabsoluteOutDir: dirname(result)\n\t\t\t});\n\t\t}\n\t}\n\n\tconst host = options.host.clone(\n\t\t{\n\t\t\t...options.host.getCompilationSettings(),\n\t\t\tdeclaration: Boolean(options.originalCompilerOptions.declaration),\n\t\t\tdeclarationMap: Boolean(options.originalCompilerOptions.declarationMap),\n\t\t\tdeclarationDir: options.originalCompilerOptions.declarationDir,\n\t\t\toutFile: setExtension(virtualOutFile.relative, JS_EXTENSION),\n\t\t\tmodule: typescript.ModuleKind.System,\n\t\t\temitDeclarationOnly: true,\n\n\t\t\t// Never allow these options for bundled declarations\n\t\t\tcomposite: false,\n\t\t\tincremental: false,\n\t\t\ttsBuildInfoFile: undefined\n\t\t},\n\t\t{\n\t\t\tallowTransformingDeclarations: true\n\t\t}\n\t);\n\n\tconst typeChecker = host.getTypeChecker();\n\n\tconst sharedOptions = {\n\t\t...options,\n\t\tchunks: normalizedChunks,\n\t\thost,\n\t\ttypeChecker,\n\t\ttypescript,\n\t\treferenceCache,\n\t\tsourceFileToNodeToReferencedIdentifiersCache,\n\t\tsourceFileToTypeReferencesSet: new Map(),\n\t\tsourceFileToExportedSymbolSet: new Map(),\n\t\tsourceFileToImportedSymbolSet: new Map(),\n\t\tsourceFileToDependenciesMap: new Map(),\n\t\tmoduleSpecifierToSourceFileMap: new Map(),\n\t\tprinter: host.getPrinter()\n\t};\n\n\tfor (const chunk of normalizedChunks) {\n\t\tlet declarationPaths = preparePaths({\n\t\t\tfileName: setExtension(chunk.paths.fileName, D_TS_EXTENSION),\n\t\t\trelativeOutDir: relativeDeclarationOutDir,\n\t\t\tabsoluteOutDir: absoluteDeclarationOutDir\n\t\t});\n\n\t\tlet declarationMapPaths = preparePaths({\n\t\t\tfileName: setExtension(chunk.paths.fileName, D_TS_MAP_EXTENSION),\n\t\t\trelativeOutDir: relativeDeclarationOutDir,\n\t\t\tabsoluteOutDir: absoluteDeclarationOutDir\n\t\t});\n\n\t\t// Rewrite the declaration paths\n\t\tif (options.pluginOptions.hook.outputPath != null) {\n\t\t\tconst declarationResult = options.pluginOptions.hook.outputPath(declarationPaths.absolute, \"declaration\");\n\t\t\tconst declarationMapResult = options.pluginOptions.hook.outputPath(declarationMapPaths.absolute, \"declarationMap\");\n\n\t\t\tif (declarationResult != null) {\n\t\t\t\tdeclarationPaths = preparePaths({\n\t\t\t\t\tfileName: basename(declarationResult),\n\t\t\t\t\trelativeOutDir: relative(cwd, dirname(declarationResult)),\n\t\t\t\t\tabsoluteOutDir: dirname(declarationResult)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (declarationMapResult != null) {\n\t\t\t\tdeclarationMapPaths = {\n\t\t\t\t\t// Don't allow diverging from the declaration paths.\n\t\t\t\t\t// The two files must be placed together\n\t\t\t\t\tfileName: basename(declarationMapResult),\n\t\t\t\t\trelative: join(dirname(declarationPaths.relative), basename(declarationMapResult)),\n\t\t\t\t\tabsolute: join(dirname(declarationPaths.absolute), basename(declarationMapResult))\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst emitFileDeclarationFilename = relative(relativeOutDir, declarationPaths.relative);\n\t\tconst emitFileDeclarationMapFilename = relative(relativeOutDir, declarationMapPaths.relative);\n\n\t\t// Rollup does not allow emitting files outside of the root of the whatever 'dist' directory that has been provided.\n\t\t// Under such circumstances, unfortunately, we'll have to default to using whatever FileSystem was provided to write the files to disk\n\t\tconst declarationNeedsFileSystem = emitFileDeclarationFilename.startsWith(\"../\") || emitFileDeclarationFilename.startsWith(\"..\\\\\") || options.pluginContext.emitFile == null;\n\t\tconst declarationMapNeedsFileSystem =\n\t\t\temitFileDeclarationMapFilename.startsWith(\"../\") || emitFileDeclarationMapFilename.startsWith(\"..\\\\\") || options.pluginContext.emitFile == null;\n\n\t\t// Don't emit declarations when there is no compatible entry file\n\t\tif (chunk.entryModules.size < 1) continue;\n\n\t\tconst bundleResult = bundleDeclarationsForChunk({\n\t\t\t...sharedOptions,\n\t\t\tchunk,\n\t\t\tdeclarationPaths,\n\t\t\tdeclarationMapPaths,\n\t\t\twrappedTransformers: host.getCustomTransformers()\n\t\t});\n\n\t\tif (shouldDebugEmit(options.pluginOptions.debug, declarationPaths.absolute, bundleResult.code, \"declaration\")) {\n\t\t\tlogEmit(declarationPaths.absolute, bundleResult.code);\n\t\t}\n\n\t\tif (declarationNeedsFileSystem) {\n\t\t\toptions.host.getFileSystem().writeFile(nativeNormalize(declarationPaths.absolute), bundleResult.code);\n\t\t}\n\n\t\t// Otherwise, we can use Rollup, which is absolutely preferable\n\t\telse {\n\t\t\toptions.pluginContext.emitFile({\n\t\t\t\ttype: \"asset\",\n\t\t\t\tsource: bundleResult.code,\n\t\t\t\tfileName: nativeNormalize(emitFileDeclarationFilename)\n\t\t\t});\n\t\t}\n\n\t\t// If there is a SourceMap for the declarations, add that asset too\n\t\tif (bundleResult.map != null) {\n\t\t\tif (shouldDebugEmit(options.pluginOptions.debug, declarationMapPaths.absolute, bundleResult.map.toString(), \"declarationMap\")) {\n\t\t\t\tlogEmit(declarationMapPaths.absolute, bundleResult.map.toString());\n\t\t\t}\n\n\t\t\tif (declarationMapNeedsFileSystem) {\n\t\t\t\toptions.host.getFileSystem().writeFile(nativeNormalize(declarationMapPaths.absolute), bundleResult.map.toString());\n\t\t\t}\n\n\t\t\t// Otherwise, we can use Rollup, which is absolutely preferable\n\t\t\telse {\n\t\t\t\toptions.pluginContext.emitFile({\n\t\t\t\t\ttype: \"asset\",\n\t\t\t\t\tsource: bundleResult.map.toString(),\n\t\t\t\t\tfileName: nativeNormalize(emitFileDeclarationMapFilename)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tif (fullBenchmark != null) fullBenchmark.finish();\n}\n","import {SourceMap} from \"rollup\";\nimport MagicString from \"magic-string\";\nimport {BABEL_REQUIRE_RUNTIME_HELPER_REGEXP_1, BABEL_REQUIRE_RUNTIME_HELPER_REGEXP_2} from \"../../constant/constant\";\nimport {matchAll} from \"@wessberg/stringutil\";\n\nexport function replaceBabelEsmHelpers(code: string, filename: string): {code: string; map: SourceMap} | undefined {\n\tconst matches = [...matchAll(code, BABEL_REQUIRE_RUNTIME_HELPER_REGEXP_1), ...matchAll(code, BABEL_REQUIRE_RUNTIME_HELPER_REGEXP_2)];\n\tif (matches.length < 1) return undefined;\n\tconst magicString = new MagicString(code, {filename, indentExclusionRanges: []});\n\tfor (const match of matches) {\n\t\tconst start = match.index + match[1].length;\n\t\tconst end = match.index + match[1].length + match[2].length;\n\t\tmagicString.overwrite(start, end, match[2].replace(`/esm/`, `/`));\n\t}\n\treturn {\n\t\tcode: magicString.toString(),\n\t\tmap: magicString.generateMap({hires: true, source: filename, includeContent: true})\n\t};\n}\n","import {TS} from \"../../type/ts\";\nimport {ModuleResolutionHostOptions} from \"./module-resolution-host-options\";\nimport {dirname, ensureAbsolute, nativeNormalize, normalize} from \"../../util/path/path-util\";\nimport {FileSystem} from \"../../util/file-system/file-system\";\nimport {SupportedExtensions} from \"../../util/get-supported-extensions/get-supported-extensions\";\nimport {VirtualFile, VirtualFileInput} from \"./virtual-file\";\nimport {D_TS_EXTENSION, D_TS_MAP_EXTENSION} from \"../../constant/constant\";\n\nexport class ModuleResolutionHost implements TS.ModuleResolutionHost {\n\tprivate readonly directoryExistsCache: Map<string, boolean> = new Map();\n\tprivate readonly fileExistsCache: Map<string, boolean> = new Map();\n\tprivate currentFileNames: Set<string> | undefined;\n\tprivate currentDirectories: Set<string> | undefined;\n\tprivate currentNonAmbientSupportedExtensions: SupportedExtensions;\n\tconstructor(protected readonly options: ModuleResolutionHostOptions, protected readonly files: Map<string, VirtualFile> = new Map()) {}\n\n\tadd(fileInput: VirtualFileInput | VirtualFile): VirtualFile {\n\t\tconst file = {\n\t\t\t...fileInput,\n\t\t\ttransformedText: \"transformedText\" in fileInput && fileInput.transformedText != null ? fileInput.transformedText : fileInput.text\n\t\t};\n\t\tthis.files.set(file.fileName, file);\n\t\tthis.clearCaches(file.fileName);\n\t\treturn file;\n\t}\n\n\tclearCaches(fileName?: string): void {\n\t\tif (fileName != null) {\n\t\t\tthis.fileExistsCache.delete(fileName);\n\t\t\tthis.directoryExistsCache.delete(dirname(fileName));\n\t\t\tthis.currentFileNames = undefined;\n\t\t\tthis.currentDirectories = undefined;\n\t\t} else {\n\t\t\tthis.directoryExistsCache.clear();\n\t\t\tthis.fileExistsCache.clear();\n\t\t}\n\t}\n\n\tdelete(fileName: string): boolean {\n\t\tthis.clearCaches(fileName);\n\t\treturn this.files.delete(fileName);\n\t}\n\n\thas(fileName: string): boolean {\n\t\treturn this.files.has(fileName);\n\t}\n\n\tget(fileName: string): VirtualFile | undefined {\n\t\treturn this.files.get(fileName);\n\t}\n\n\tgetFileNames(): Set<string> {\n\t\tif (this.currentFileNames == null) {\n\t\t\tthis.currentFileNames = new Set(this.files.keys());\n\t\t}\n\n\t\treturn this.currentFileNames;\n\t}\n\n\tgetFileNameDirectories(): Set<string> {\n\t\tif (this.currentDirectories == null) {\n\t\t\tthis.currentDirectories = new Set([...this.getFileNames()].map(fileName => dirname(fileName)));\n\t\t}\n\n\t\treturn this.currentDirectories;\n\t}\n\n\tgetRollupFileNames(): Set<string> {\n\t\treturn new Set([...this.getFileNames()].filter(fileName => this.get(fileName)!.fromRollup));\n\t}\n\n\tgetFileSystem(): FileSystem {\n\t\treturn this.options.fileSystem;\n\t}\n\n\tgetParsedCommandLine(): TS.ParsedCommandLine {\n\t\treturn this.options.parsedCommandLineResult.parsedCommandLine;\n\t}\n\n\tgetCompilationSettings(): TS.CompilerOptions {\n\t\treturn this.getParsedCommandLine().options;\n\t}\n\n\tgetSupportedExtensions(): SupportedExtensions {\n\t\treturn this.options.extensions;\n\t}\n\n\tgetSupportedNonAmbientExtensions(): SupportedExtensions {\n\t\tif (this.currentNonAmbientSupportedExtensions == null) {\n\t\t\tthis.currentNonAmbientSupportedExtensions = new Set([...this.options.extensions].filter(extension => extension !== D_TS_EXTENSION && extension !== D_TS_MAP_EXTENSION));\n\t\t}\n\t\treturn this.currentNonAmbientSupportedExtensions;\n\t}\n\n\tgetTypescript(): typeof TS {\n\t\treturn this.options.typescript;\n\t}\n\n\tgetCwd(): string {\n\t\treturn this.options.cwd;\n\t}\n\n\t/**\n\t * Returns true if the given file exists\n\t */\n\tfileExists(fileName: string): boolean {\n\t\tif (this.fileExistsCache.has(fileName)) {\n\t\t\treturn this.fileExistsCache.get(fileName)!;\n\t\t}\n\n\t\tconst exists = this.files.has(fileName) || this.getFileSystem().fileExists(nativeNormalize(fileName));\n\t\tthis.fileExistsCache.set(fileName, exists);\n\t\treturn exists;\n\t}\n\n\t/**\n\t * Reads the given file\n\t */\n\treadFile(fileName: string, encoding?: string): string | undefined {\n\t\t// Check if the file exists within the cached files and return it if so\n\t\tconst result = this.files.get(fileName);\n\t\tif (result != null) return result.text;\n\n\t\t// Otherwise, try to properly resolve the file\n\t\treturn this.getFileSystem().readFile(nativeNormalize(fileName), encoding);\n\t}\n\n\t/**\n\t * Returns true if the given directory exists\n\t */\n\tdirectoryExists(directoryName: string): boolean {\n\t\tif (this.directoryExistsCache.has(directoryName)) {\n\t\t\treturn this.directoryExistsCache.get(directoryName)!;\n\t\t}\n\t\tconst absoluteDirectoryName = ensureAbsolute(this.getCwd(), directoryName);\n\t\tconst fileNameDirectories = this.getFileNameDirectories();\n\n\t\tconst result =\n\t\t\tfileNameDirectories.has(directoryName) ||\n\t\t\tfileNameDirectories.has(absoluteDirectoryName) ||\n\t\t\tthis.getFileSystem().directoryExists(nativeNormalize(directoryName)) ||\n\t\t\tthis.getFileSystem().directoryExists(nativeNormalize(absoluteDirectoryName));\n\t\tthis.directoryExistsCache.set(directoryName, result);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Gets the real path for the given path. Meant to resolve symlinks\n\t */\n\trealpath(path: string): string {\n\t\treturn normalize(this.getFileSystem().realpath(nativeNormalize(path)));\n\t}\n\n\t/**\n\t * Gets the current directory\n\t */\n\tgetCurrentDirectory(): string {\n\t\treturn normalize(this.getCwd());\n\t}\n\n\t/**\n\t * Gets all directories within the given directory path\n\t */\n\tgetDirectories(directoryName: string): string[] {\n\t\treturn this.getFileSystem().getDirectories(nativeNormalize(directoryName)).map(normalize);\n\t}\n}\n","import {TS} from \"../../type/ts\";\n\n/**\n * Gets the NewLineCharacter to use for a NewLineKind\n */\nexport function getNewLineCharacter(newLine: TS.NewLineKind, typescript: typeof TS): string {\n\tswitch (newLine) {\n\t\tcase typescript.NewLineKind.CarriageReturnLineFeed:\n\t\t\treturn \"\\r\\n\";\n\t\tcase typescript.NewLineKind.LineFeed:\n\t\t\treturn \"\\n\";\n\t}\n}\n","import {ResolveModuleOptions} from \"./resolve-module-options\";\nimport {ExtendedResolvedModule} from \"../../service/cache/resolve-cache/extended-resolved-module\";\n\n/**\n * Resolves an id from the given parent\n */\nexport function resolveId({resolveCache, ...options}: ResolveModuleOptions): ExtendedResolvedModule | null {\n\t// Don't proceed if there is no parent (in which case this is an entry module)\n\tif (options.parent == null) return null;\n\n\treturn resolveCache.get(options);\n}\n","import {JS_EXTENSION, JSON_EXTENSION, JSX_EXTENSION, TS_EXTENSION, TSX_EXTENSION} from \"../../constant/constant\";\nimport {TS} from \"../../type/ts\";\n\n/**\n * Gets a ScriptKind from the given path\n */\nexport function getScriptKindFromPath(path: string, typescript: typeof TS): TS.ScriptKind {\n\tif (path.endsWith(JS_EXTENSION)) {\n\t\treturn typescript.ScriptKind.JS;\n\t} else if (path.endsWith(TS_EXTENSION)) {\n\t\treturn typescript.ScriptKind.TS;\n\t} else if (path.endsWith(TSX_EXTENSION)) {\n\t\treturn typescript.ScriptKind.TSX;\n\t} else if (path.endsWith(JSX_EXTENSION)) {\n\t\treturn typescript.ScriptKind.JSX;\n\t} else if (path.endsWith(JSON_EXTENSION)) {\n\t\treturn typescript.ScriptKind.JSON;\n\t} else {\n\t\treturn typescript.ScriptKind.Unknown;\n\t}\n}\n","import {EnsureModuleTransformerOptions} from \"./ensure-module-transformer-options\";\nimport {TS} from \"../../../type/ts\";\n\nexport function ensureModuleTransformer({typescript, sourceFile}: EnsureModuleTransformerOptions): TS.SourceFile {\n\tconst importDeclarationCount = sourceFile.statements.filter(typescript.isImportDeclaration).length;\n\tconst exportDeclarationCount = sourceFile.statements.filter(typescript.isExportDeclaration).length;\n\tconst exportAssignmentCount = sourceFile.statements.filter(typescript.isExportAssignment).length;\n\n\t// If there's nothing to mark the file as a module, add an empty ExportDeclaration to mark it as such\n\tif (importDeclarationCount < 1 && exportDeclarationCount < 1 && exportAssignmentCount < 1) {\n\t\treturn typescript.updateSourceFileNode(\n\t\t\tsourceFile,\n\t\t\t[...sourceFile.statements, typescript.createExportDeclaration(undefined, undefined, typescript.createNamedExports([]))],\n\t\t\tsourceFile.isDeclarationFile,\n\t\t\tsourceFile.referencedFiles,\n\t\t\tsourceFile.typeReferenceDirectives,\n\t\t\tsourceFile.hasNoDefaultLib,\n\t\t\tsourceFile.libReferenceDirectives\n\t\t);\n\t}\n\n\treturn sourceFile;\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackDependenciesTransformerVisitorOptions} from \"../track-dependencies-transformer-visitor-options\";\n\nexport function visitImportDeclaration({node, typescript, host, sourceFile, addDependency}: TrackDependenciesTransformerVisitorOptions<TS.ImportDeclaration>): void {\n\tif (!typescript.isStringLiteralLike(node.moduleSpecifier)) return;\n\tconst resolvedModule = host.resolve(node.moduleSpecifier.text, sourceFile.fileName);\n\tif (resolvedModule != null) {\n\t\taddDependency(resolvedModule);\n\t}\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackDependenciesTransformerVisitorOptions} from \"../track-dependencies-transformer-visitor-options\";\n\nexport function visitImportTypeNode({node, typescript, host, sourceFile, addDependency, continuation}: TrackDependenciesTransformerVisitorOptions<TS.ImportTypeNode>): void {\n\tif (!typescript.isLiteralTypeNode(node.argument) || !typescript.isStringLiteralLike(node.argument.literal) || node.qualifier == null) return;\n\tconst moduleSpecifier = node.argument.literal.text;\n\n\tconst resolvedModule = host.resolve(moduleSpecifier, sourceFile.fileName);\n\n\tif (resolvedModule != null) {\n\t\taddDependency(resolvedModule);\n\t}\n\n\tcontinuation(node.qualifier);\n\tif (node.typeArguments != null) {\n\t\tfor (const typeArgument of node.typeArguments) {\n\t\t\tcontinuation(typeArgument);\n\t\t}\n\t}\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackDependenciesTransformerVisitorOptions} from \"../track-dependencies-transformer-visitor-options\";\n\nexport function visitModuleDeclaration({node, ...options}: TrackDependenciesTransformerVisitorOptions<TS.ModuleDeclaration>): void {\n\tif (node.body == null) return;\n\treturn options.childContinuation(node.body);\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackDependenciesTransformerVisitorOptions} from \"../track-dependencies-transformer-visitor-options\";\n\nexport function visitExportDeclaration({node, typescript, host, sourceFile, addDependency}: TrackDependenciesTransformerVisitorOptions<TS.ExportDeclaration>): void {\n\tif (node.moduleSpecifier == null || !typescript.isStringLiteralLike(node.moduleSpecifier)) return;\n\n\tconst resolvedModule = host.resolve(node.moduleSpecifier.text, sourceFile.fileName);\n\tif (resolvedModule != null) {\n\t\taddDependency(resolvedModule);\n\t}\n}\n","import {TS} from \"../../../../../../type/ts\";\nimport {TrackDependenciesTransformerVisitorOptions} from \"../track-dependencies-transformer-visitor-options\";\nimport {visitImportDeclaration} from \"./visit-import-declaration\";\nimport {visitImportTypeNode} from \"./visit-import-type-node\";\nimport {visitModuleDeclaration} from \"./visit-module-declaration\";\nimport {visitExportDeclaration} from \"./visit-export-declaration\";\n\nexport function visitNode({node, ...options}: TrackDependenciesTransformerVisitorOptions<TS.Node>): void {\n\tif (options.typescript.isImportDeclaration(node)) {\n\t\treturn visitImportDeclaration({...options, node});\n\t} else if (options.typescript.isImportTypeNode(node)) {\n\t\treturn visitImportTypeNode({...options, node});\n\t} else if (options.typescript.isExportDeclaration(node)) {\n\t\treturn visitExportDeclaration({...options, node});\n\t} else if (options.typescript.isModuleDeclaration(node)) {\n\t\treturn visitModuleDeclaration({...options, node});\n\t} else if (options.shouldDeepTraverse) {\n\t\treturn options.childContinuation(node);\n\t}\n}\n","import {TS} from \"../../../../../type/ts\";\nimport {visitNode} from \"./visitor/visit-node\";\nimport {TrackDependenciesOptions, TrackDependenciesTransformerVisitorOptions} from \"./track-dependencies-transformer-visitor-options\";\nimport {ExtendedResolvedModule} from \"../../../../cache/resolve-cache/extended-resolved-module\";\n\nexport function trackDependenciesTransformer(options: TrackDependenciesOptions): Set<ExtendedResolvedModule> {\n\tconst {typescript} = options;\n\tconst dependencies: Set<ExtendedResolvedModule> = new Set();\n\n\t// Prepare some VisitorOptions\n\tconst visitorOptions: Omit<TrackDependenciesTransformerVisitorOptions<TS.Node>, \"node\"> = {\n\t\t...options,\n\t\t// Optimization: We only need to traverse nested nodes inside of the SourceFile if it contains at least one ImportTypeNode (or at least what appears to be one)\n\t\tshouldDeepTraverse: options.sourceFile.text.includes(\"import(\"),\n\n\t\taddDependency(resolvedModule: ExtendedResolvedModule): void {\n\t\t\tdependencies.add(resolvedModule);\n\t\t},\n\n\t\tchildContinuation: <U extends TS.Node>(node: U): void =>\n\t\t\ttypescript.forEachChild(node, nextNode => {\n\t\t\t\tvisitNode({\n\t\t\t\t\t...visitorOptions,\n\t\t\t\t\tnode: nextNode\n\t\t\t\t});\n\t\t\t}),\n\n\t\tcontinuation: <U extends TS.Node>(node: U): void => {\n\t\t\tvisitNode({\n\t\t\t\t...visitorOptions,\n\t\t\t\tnode\n\t\t\t});\n\t\t}\n\t};\n\n\ttypescript.forEachChild(options.sourceFile, nextNode => {\n\t\tvisitorOptions.continuation(nextNode);\n\t});\n\treturn dependencies;\n}\n","import {CompilerHost} from \"../../service/compiler-host/compiler-host\";\nimport {ExtendedResolvedModule} from \"../../service/cache/resolve-cache/extended-resolved-module\";\nimport {getExtension} from \"../path/path-util\";\nimport {D_TS_EXTENSION} from \"../../constant/constant\";\nimport {trackDependenciesTransformer} from \"../../service/transformer/declaration-bundler/transformers/track-dependencies-transformer/track-dependencies-transformer\";\n\nexport interface GetModuleDependenciesOptions {\n\tcompilerHost: CompilerHost;\n\tmodule: string;\n}\n\nexport function getModuleDependencies(options: GetModuleDependenciesOptions): Set<ExtendedResolvedModule> | undefined {\n\t// Skip .d.ts files\n\tif (getExtension(options.module) === D_TS_EXTENSION) return undefined;\n\n\tconst cachedDependencies = options.compilerHost.getDependenciesForFile(options.module);\n\n\tif (cachedDependencies != null) {\n\t\treturn cachedDependencies;\n\t}\n\n\tconst typescript = options.compilerHost.getTypescript();\n\tconst sourceFile = options.compilerHost.getSourceFile(options.module);\n\tif (sourceFile == null) {\n\t\treturn;\n\t}\n\n\treturn trackDependenciesTransformer({\n\t\thost: options.compilerHost,\n\t\ttypescript,\n\t\tsourceFile\n\t});\n}\n","import {TS} from \"../../type/ts\";\nimport {CompilerHostOptions, CustomTransformersInput} from \"./compiler-host-options\";\nimport {ModuleResolutionHost} from \"../module-resolution-host/module-resolution-host\";\nimport {dirname, ensureAbsolute, getExtension, isTypeScriptLib, join, nativeNormalize, normalize} from \"../../util/path/path-util\";\nimport {getNewLineCharacter} from \"../../util/get-new-line-character/get-new-line-character\";\nimport {resolveId} from \"../../util/resolve-id/resolve-id\";\nimport {getScriptKindFromPath} from \"../../util/get-script-kind-from-path/get-script-kind-from-path\";\nimport {VirtualFile, VirtualFileInput} from \"../module-resolution-host/virtual-file\";\nimport {mergeTransformers} from \"../../util/merge-transformers/merge-transformers\";\nimport {ensureModuleTransformer} from \"../transformer/ensure-module/ensure-module-transformer\";\nimport {SourceFileToDependenciesMap} from \"../transformer/declaration-bundler/declaration-bundler-options\";\nimport {ExtendedResolvedModule} from \"../cache/resolve-cache/extended-resolved-module\";\nimport {getModuleDependencies} from \"../../util/get-module-dependencies/get-module-dependencies\";\n\nexport class CompilerHost extends ModuleResolutionHost implements TS.CompilerHost {\n\tprivate previousProgram: TS.EmitAndSemanticDiagnosticsBuilderProgram | undefined;\n\tprivate currentProgram: TS.EmitAndSemanticDiagnosticsBuilderProgram | undefined;\n\tprivate currentTypeRoots: Set<string> | undefined;\n\tprivate currentProgramInstance: TS.Program | undefined;\n\tprivate currentTypeChecker: TS.TypeChecker | undefined;\n\tprivate emitOutput: TS.EmitOutput | undefined;\n\n\tconstructor(\n\t\tprotected readonly options: CompilerHostOptions,\n\t\tprotected readonly printer: TS.Printer = options.typescript.createPrinter({\n\t\t\tnewLine: options.parsedCommandLineResult.parsedCommandLine.options.newLine\n\t\t}),\n\t\tprotected readonly sourceFiles: Map<string, TS.SourceFile> = new Map(),\n\t\tprotected readonly transformerDiagnostics: Map<string, TS.Diagnostic[]> = new Map(),\n\t\tprotected readonly fileToVersionMap: Map<string, number> = new Map(),\n\t\tprotected readonly sourceFileToDependenciesMap: SourceFileToDependenciesMap = new Map(),\n\t\tfiles?: Map<string, VirtualFile>\n\t) {\n\t\tsuper(options, files);\n\t\tthis.addDefaultFileNames();\n\t}\n\n\tallowTransformingDeclarations(): boolean {\n\t\treturn this.options.allowTransformingDeclarations === true;\n\t}\n\n\tisSupportedFileName(fileName: string, ignoreFilter = false): boolean {\n\t\treturn (ignoreFilter || this.options.filter(fileName)) && this.getSupportedExtensions().has(getExtension(fileName));\n\t}\n\n\tgetDiagnostics(fileName?: string): readonly TS.Diagnostic[] {\n\t\tconst program = this.getProgram();\n\n\t\tconst sourceFile = fileName == null ? undefined : this.getSourceFile(fileName);\n\n\t\tconst baseDiagnostics = [\n\t\t\t...this.getParsedCommandLine().errors,\n\t\t\t...program.getConfigFileParsingDiagnostics(),\n\t\t\t...program.getOptionsDiagnostics(),\n\t\t\t...program.getSyntacticDiagnostics(sourceFile),\n\t\t\t...program.getGlobalDiagnostics(),\n\t\t\t...program.getSemanticDiagnostics(sourceFile)\n\t\t];\n\n\t\tif (sourceFile != null) {\n\t\t\treturn [...baseDiagnostics, ...(this.transformerDiagnostics.get(sourceFile.fileName) ?? [])];\n\t\t} else {\n\t\t\tconst extraDiagnostics: TS.Diagnostic[] = [];\n\t\t\tfor (const transformerDiagnostics of this.transformerDiagnostics.values()) {\n\t\t\t\textraDiagnostics.push(...transformerDiagnostics);\n\t\t\t}\n\n\t\t\treturn [...baseDiagnostics, ...extraDiagnostics];\n\t\t}\n\t}\n\n\temitBuildInfo(): TS.EmitOutput {\n\t\tthis.popEmitOutput();\n\t\tconst programWithEmitBuildInfo = this.getProgramInstance() as TS.Program & {emitBuildInfo?(writeFileCallback: TS.WriteFileCallback): void};\n\t\t// A non-exposed internal method, emitBuildInfo, is used, if available (which it is from TypeScript v3.4 and up)\n\t\t// If not, we would have to emit the entire Program (or pending affected files) which can be avoided for maximum performance\n\t\tprogramWithEmitBuildInfo.emitBuildInfo?.(this.writeFile.bind(this));\n\n\t\treturn this.popEmitOutput();\n\t}\n\n\temit(fileName?: string, onlyDts = false, transformers?: CustomTransformersInput): TS.EmitOutput {\n\t\tthis.popEmitOutput();\n\n\t\tconst sourceFile = fileName == null ? undefined : this.getSourceFile(fileName);\n\t\tconst customTransformers = this.getCustomTransformers(transformers);\n\t\tlet hasEmitted = false;\n\n\t\tconst runEmit = (program: TS.Program | TS.EmitAndSemanticDiagnosticsBuilderProgram) => {\n\t\t\tprogram.emit(\n\t\t\t\tsourceFile,\n\t\t\t\t(file, data, writeByteOrderMark) => {\n\t\t\t\t\thasEmitted = true;\n\t\t\t\t\tthis.writeFile(file, data, writeByteOrderMark);\n\t\t\t\t},\n\t\t\t\tundefined,\n\t\t\t\tonlyDts,\n\t\t\t\tcustomTransformers\n\t\t\t);\n\t\t};\n\n\t\trunEmit(this.getProgram());\n\n\t\t// TypeScript will not emit if a builder-program haven't changed. In that case, use the underlying program instance and emit with that one.\n\t\tif (!hasEmitted) {\n\t\t\trunEmit(this.getProgramInstance());\n\t\t}\n\n\t\treturn this.popEmitOutput();\n\t}\n\n\twriteFile(name: string, text: string, writeByteOrderMark: boolean): void {\n\t\tconst emitOutput = this.ensureEmitOutput();\n\t\temitOutput.outputFiles.push({\n\t\t\tname,\n\t\t\ttext,\n\t\t\twriteByteOrderMark\n\t\t});\n\t}\n\n\tgetScriptTarget(): TS.ScriptTarget {\n\t\treturn this.getCompilationSettings().target ?? this.getTypescript().ScriptTarget.ES3;\n\t}\n\n\tprivate createProgram(): TS.EmitAndSemanticDiagnosticsBuilderProgram {\n\t\tconst typescript = this.getTypescript();\n\n\t\t// The --incremental option is part of TypeScript 3.4 and up only\n\t\tif (\"createIncrementalProgram\" in (typescript as Partial<typeof TS>)) {\n\t\t\treturn typescript.createIncrementalProgram({\n\t\t\t\trootNames: [...this.getFileNames()],\n\t\t\t\toptions: this.getCompilationSettings(),\n\t\t\t\thost: this\n\t\t\t});\n\t\t} else {\n\t\t\treturn typescript.createEmitAndSemanticDiagnosticsBuilderProgram([...this.getFileNames()], this.getCompilationSettings(), this, this.previousProgram);\n\t\t}\n\t}\n\n\tgetProgram(): TS.EmitAndSemanticDiagnosticsBuilderProgram {\n\t\tif (this.currentProgram == null) {\n\t\t\tthis.currentProgram = this.createProgram();\n\t\t}\n\t\treturn this.currentProgram;\n\t}\n\n\tgetPrinter(): TS.Printer {\n\t\treturn this.printer;\n\t}\n\n\tgetProgramInstance(): TS.Program {\n\t\tif (this.currentProgramInstance == null) {\n\t\t\tthis.currentProgramInstance = this.getProgram().getProgram();\n\t\t}\n\t\treturn this.currentProgramInstance;\n\t}\n\n\tgetTypeChecker(): TS.TypeChecker {\n\t\tif (this.currentTypeChecker == null) {\n\t\t\tthis.currentTypeChecker = this.getProgramInstance().getTypeChecker();\n\t\t}\n\t\treturn this.currentTypeChecker;\n\t}\n\n\tgetFilter(): (id: string) => boolean {\n\t\treturn this.options.filter;\n\t}\n\n\tgetTransformers(): CustomTransformersInput {\n\t\treturn this.options.transformers;\n\t}\n\n\tprivate getDependenciesForFileDeep(fileName: string, dependencies: Set<ExtendedResolvedModule> = new Set(), seenModules: Set<string> = new Set()): Set<ExtendedResolvedModule> {\n\t\tif (seenModules.has(fileName)) return dependencies;\n\t\tseenModules.add(fileName);\n\t\tconst localDependencies = this.sourceFileToDependenciesMap.get(fileName);\n\t\tconst dependenciesArr = [...dependencies];\n\t\tif (localDependencies != null) {\n\t\t\tfor (const dependency of localDependencies) {\n\t\t\t\tif (\n\t\t\t\t\t!dependenciesArr.some(\n\t\t\t\t\t\t({resolvedFileName, resolvedAmbientFileName}) => resolvedFileName === dependency.resolvedFileName && resolvedAmbientFileName === dependency.resolvedAmbientFileName\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tdependencies.add(dependency);\n\t\t\t\t\tif (dependency.resolvedFileName != null) this.getDependenciesForFileDeep(dependency.resolvedFileName, dependencies, seenModules);\n\t\t\t\t\tif (dependency.resolvedAmbientFileName != null) {\n\t\t\t\t\t\tthis.getDependenciesForFileDeep(dependency.resolvedAmbientFileName, dependencies, seenModules);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dependencies;\n\t}\n\n\tgetDependenciesForFile(fileName: string, deep = false): Set<ExtendedResolvedModule> | undefined {\n\t\tif (deep) {\n\t\t\treturn this.getDependenciesForFileDeep(fileName);\n\t\t}\n\t\treturn this.sourceFileToDependenciesMap.get(fileName);\n\t}\n\n\tgetAllDependencies(): SourceFileToDependenciesMap {\n\t\treturn this.sourceFileToDependenciesMap;\n\t}\n\n\tadd(fileInput: VirtualFileInput | VirtualFile): VirtualFile {\n\t\tconst existing = this.get(fileInput.fileName);\n\t\tif (existing != null && existing.text === fileInput.text) return existing;\n\n\t\tthis.delete(fileInput.fileName);\n\n\t\tif (fileInput.fromRollup) {\n\t\t\tconst sourceFile = this.constructSourceFile(fileInput.fileName, fileInput.text);\n\t\t\tconst transformedSourceFile = ensureModuleTransformer({typescript: this.getTypescript(), sourceFile});\n\t\t\tif (transformedSourceFile !== sourceFile) {\n\t\t\t\t(fileInput as VirtualFile).transformedText = this.printer.printFile(transformedSourceFile);\n\t\t\t}\n\t\t}\n\n\t\tconst addedFile = super.add(fileInput);\n\t\tthis.refreshDependenciesForFileName(fileInput.fileName);\n\t\treturn addedFile;\n\t}\n\n\tprivate refreshDependenciesForFileName(fileName: string, seenModules: Set<string> = new Set()): void {\n\t\tif (seenModules.has(fileName)) return;\n\t\tseenModules.add(fileName);\n\n\t\tconst dependencies = getModuleDependencies({\n\t\t\tcompilerHost: this,\n\t\t\tmodule: fileName\n\t\t});\n\n\t\tif (dependencies == null) return;\n\t\tthis.sourceFileToDependenciesMap.set(fileName, dependencies);\n\n\t\tfor (const resolveResult of dependencies) {\n\t\t\tfor (const module of [resolveResult.resolvedFileName, resolveResult.resolvedAmbientFileName]) {\n\t\t\t\tif (module == null) continue;\n\t\t\t\tthis.refreshDependenciesForFileName(module, seenModules);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate constructSourceFile(fileName: string, text: string, languageVersion: TS.ScriptTarget = this.getScriptTarget()): TS.SourceFile {\n\t\treturn this.getTypescript().createSourceFile(fileName, text, languageVersion, true, getScriptKindFromPath(fileName, this.getTypescript()));\n\t}\n\n\tprivate clearProgram(): void {\n\t\tthis.previousProgram = this.currentProgram;\n\t\tthis.currentProgram = undefined;\n\t\tthis.currentProgramInstance = undefined;\n\t\tthis.currentTypeChecker = undefined;\n\t}\n\n\tprivate ensureEmitOutput(): TS.EmitOutput {\n\t\tif (this.emitOutput == null) {\n\t\t\tthis.emitOutput = {\n\t\t\t\toutputFiles: [],\n\t\t\t\temitSkipped: false\n\t\t\t};\n\t\t}\n\t\treturn this.emitOutput;\n\t}\n\n\tprivate popEmitOutput(): TS.EmitOutput {\n\t\tconst emitOutput = this.ensureEmitOutput();\n\t\tthis.emitOutput = undefined;\n\t\treturn emitOutput;\n\t}\n\n\tdelete(fileName: string): boolean {\n\t\tconst superDelete = super.delete(fileName);\n\t\tconst sourceFilesDelete = this.sourceFiles.delete(fileName);\n\t\tconst transformerDiagnosticsDelete = this.transformerDiagnostics.delete(fileName);\n\t\tconst sourceFileToDependenciesMapDelete = this.sourceFileToDependenciesMap.delete(fileName);\n\t\tconst success = superDelete || sourceFilesDelete || transformerDiagnosticsDelete || sourceFileToDependenciesMapDelete;\n\t\tthis.clearProgram();\n\t\treturn success;\n\t}\n\n\tclone(compilerOptions: TS.CompilerOptions, overrides: Partial<Omit<CompilerHostOptions, \"parsedCommandLineResult\">> = {}): CompilerHost {\n\t\treturn new CompilerHost(\n\t\t\t{\n\t\t\t\t...this.options,\n\t\t\t\t...overrides,\n\t\t\t\tparsedCommandLineResult: {\n\t\t\t\t\t...this.options.parsedCommandLineResult,\n\t\t\t\t\tparsedCommandLine: {\n\t\t\t\t\t\t...this.getParsedCommandLine(),\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t...this.getCompilationSettings(),\n\t\t\t\t\t\t\t...compilerOptions\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis.printer,\n\t\t\tnew Map(this.sourceFiles),\n\t\t\tnew Map(this.transformerDiagnostics),\n\t\t\tnew Map(this.fileToVersionMap),\n\t\t\tnew Map(this.sourceFileToDependenciesMap),\n\t\t\tnew Map(this.files)\n\t\t);\n\t}\n\n\tgetSourceFile(fileName: string, languageVersion: TS.ScriptTarget = this.getScriptTarget()): TS.SourceFile | undefined {\n\t\tconst absoluteFileName = isTypeScriptLib(fileName) ? join(this.getDefaultLibLocation(), fileName) : ensureAbsolute(this.getCwd(), fileName);\n\n\t\tif (this.sourceFiles.has(absoluteFileName)) {\n\t\t\treturn this.sourceFiles.get(absoluteFileName);\n\t\t}\n\n\t\tif (!this.isSupportedFileName(absoluteFileName, true)) return undefined;\n\n\t\tlet file = this.get(absoluteFileName);\n\n\t\tif (file == null) {\n\t\t\tconst text = this.readFile(absoluteFileName);\n\t\t\tif (text == null) return undefined;\n\t\t\tfile = this.add({fileName: absoluteFileName, text, fromRollup: false});\n\t\t}\n\n\t\tconst sourceFile = this.constructSourceFile(absoluteFileName, file.transformedText, languageVersion);\n\t\tthis.sourceFiles.set(absoluteFileName, sourceFile);\n\n\t\tconst oldVersion = this.fileToVersionMap.get(absoluteFileName) ?? 0;\n\t\tconst newVersion = oldVersion + 1;\n\t\tthis.fileToVersionMap.set(absoluteFileName, newVersion);\n\n\t\t// SourceFiles in builder programs needs a version\n\t\t((sourceFile as unknown) as {version: number}).version = newVersion;\n\n\t\treturn sourceFile;\n\t}\n\n\tgetTypeRoots() {\n\t\tif (this.currentTypeRoots == null) {\n\t\t\tthis.currentTypeRoots = new Set(this.getTypescript().getEffectiveTypeRoots(this.getCompilationSettings(), this));\n\t\t}\n\t\treturn this.currentTypeRoots;\n\t}\n\n\tgetDefaultLibLocation(): string {\n\t\treturn dirname(this.getTypescript().getDefaultLibFilePath(this.getCompilationSettings()));\n\t}\n\n\t/**\n\t * Gets the Custom Transformers to use, depending on the current emit mode\n\t */\n\tgetCustomTransformers(transformers: CustomTransformersInput = this.getTransformers()): TS.CustomTransformers | undefined {\n\t\tconst mergedTransformers = mergeTransformers(transformers);\n\t\tconst upgradedTransformers = mergedTransformers({\n\t\t\tprogram: this.getProgramInstance(),\n\t\t\ttypescript: this.getTypescript(),\n\t\t\tprinter: this.printer,\n\n\t\t\t/**\n\t\t\t * This hook can add diagnostics from within CustomTransformers. These will be emitted alongside Typescript diagnostics seamlessly\n\t\t\t */\n\t\t\taddDiagnostics: (...diagnostics) => {\n\t\t\t\tdiagnostics.forEach(diagnostic => {\n\t\t\t\t\t// Skip diagnostics that doesn't point to a specific file\n\t\t\t\t\tif (diagnostic.file == null) return;\n\t\t\t\t\tlet transformerDiagnostics = this.transformerDiagnostics.get(diagnostic.file.fileName);\n\t\t\t\t\t// If no file matches the one of the diagnostic, skip it\n\t\t\t\t\tif (transformerDiagnostics == null) {\n\t\t\t\t\t\ttransformerDiagnostics = [];\n\t\t\t\t\t\tthis.transformerDiagnostics.set(diagnostic.file.fileName, transformerDiagnostics);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Add the diagnostic\n\t\t\t\t\ttransformerDiagnostics.push(diagnostic);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Ensure that declarations are never transformed if not allowed\n\t\tif (!this.allowTransformingDeclarations()) {\n\t\t\treturn {\n\t\t\t\t...upgradedTransformers,\n\t\t\t\tafterDeclarations: undefined\n\t\t\t};\n\t\t}\n\t\treturn upgradedTransformers;\n\t}\n\n\t/**\n\t * Gets the default lib file name based on the given CompilerOptions\n\t */\n\tgetDefaultLibFileName(compilerOptions: TS.CompilerOptions): string {\n\t\treturn this.getTypescript().getDefaultLibFileName(compilerOptions);\n\t}\n\n\t/**\n\t * Gets the canonical filename for the given file\n\t */\n\tgetCanonicalFileName(fileName: string): string {\n\t\treturn this.useCaseSensitiveFileNames() ? fileName : fileName.toLowerCase();\n\t}\n\n\t/**\n\t * Returns true if file names should be treated as case-sensitive\n\t */\n\tuseCaseSensitiveFileNames(): boolean {\n\t\treturn this.getFileSystem().useCaseSensitiveFileNames;\n\t}\n\n\t/**\n\t * Gets the newline to use\n\t */\n\tgetNewLine(): string {\n\t\tconst compilationSettings = this.getCompilationSettings();\n\t\treturn compilationSettings.newLine != null ? getNewLineCharacter(compilationSettings.newLine, this.getTypescript()) : this.getFileSystem().newLine;\n\t}\n\n\t/**\n\t * Reads the given directory\n\t */\n\treadDirectory(path: string, extensions: readonly string[], exclude: readonly string[] | undefined, include: readonly string[], depth?: number): string[] {\n\t\treturn this.getFileSystem().readDirectory(nativeNormalize(path), extensions, exclude, include, depth).map(normalize);\n\t}\n\n\tresolve(moduleName: string, containingFile: string): ExtendedResolvedModule | null {\n\t\treturn resolveId({\n\t\t\tmoduleResolutionHost: this,\n\t\t\tparent: containingFile,\n\t\t\tid: moduleName,\n\t\t\tresolveCache: this.options.resolveCache\n\t\t});\n\t}\n\n\tresolveModuleNames(moduleNames: string[], containingFile: string): (TS.ResolvedModuleFull | undefined)[] {\n\t\tconst resolvedModules: (TS.ResolvedModuleFull | undefined)[] = [];\n\t\tfor (const moduleName of moduleNames) {\n\t\t\tconst result = this.resolve(moduleName, containingFile);\n\n\t\t\tif (result != null && result.resolvedAmbientFileName != null) {\n\t\t\t\tresolvedModules.push({...result, resolvedFileName: result.resolvedAmbientFileName});\n\t\t\t} else if (result != null && result.resolvedFileName != null) {\n\t\t\t\tresolvedModules.push({...result, resolvedFileName: result.resolvedFileName});\n\t\t\t} else {\n\t\t\t\tresolvedModules.push(undefined);\n\t\t\t}\n\t\t}\n\t\treturn resolvedModules;\n\t}\n\n\tresolveTypeReferenceDirectives(typeReferenceDirectiveNames: string[], containingFile: string): (TS.ResolvedTypeReferenceDirective | undefined)[] {\n\t\tconst resolvedTypeReferenceDirectives: (TS.ResolvedTypeReferenceDirective | undefined)[] = [];\n\t\tfor (const typeReferenceDirectiveName of typeReferenceDirectiveNames) {\n\t\t\t// try to use standard resolution\n\t\t\tconst result = resolveId({\n\t\t\t\tmoduleResolutionHost: this,\n\t\t\t\tparent: containingFile,\n\t\t\t\tid: typeReferenceDirectiveName,\n\t\t\t\tresolveCache: this.options.resolveCache\n\t\t\t});\n\t\t\tif (result != null && result.resolvedAmbientFileName != null) {\n\t\t\t\tresolvedTypeReferenceDirectives.push({...result, primary: true, resolvedFileName: result.resolvedAmbientFileName});\n\t\t\t} else if (result != null && result.resolvedFileName != null) {\n\t\t\t\tresolvedTypeReferenceDirectives.push({...result, primary: true, resolvedFileName: result.resolvedFileName});\n\t\t\t} else {\n\t\t\t\tresolvedTypeReferenceDirectives.push(undefined);\n\t\t\t}\n\t\t}\n\t\treturn resolvedTypeReferenceDirectives;\n\t}\n\n\t/**\n\t * Adds all default declaration files to the LanguageService\n\t */\n\tprivate addDefaultFileNames(): void {\n\t\tthis.getParsedCommandLine().fileNames.forEach(file => {\n\t\t\tconst fileName = ensureAbsolute(this.getCwd(), file);\n\n\t\t\tif (!this.getFilter()(normalize(fileName))) return;\n\n\t\t\tconst text = this.readFile(fileName);\n\t\t\tif (text != null) {\n\t\t\t\tthis.add({\n\t\t\t\t\tfileName,\n\t\t\t\t\ttext,\n\t\t\t\t\tfromRollup: false\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n","import {TSBUILDINFO_EXTENSION} from \"../../constant/constant\";\nimport {getExtension} from \"../path/path-util\";\nimport {TS} from \"../../type/ts\";\n\n/**\n * Returns true if the given OutputFile represents .tsbuildinfo\n */\nexport function isBuildInfoOutputFile({name}: TS.OutputFile): boolean {\n\treturn getExtension(name) === TSBUILDINFO_EXTENSION;\n}\n","import {OutputBundle, OutputOptions, PluginContext} from \"rollup\";\nimport {CompilerHost} from \"../../compiler-host/compiler-host\";\nimport {TypescriptPluginOptions} from \"../../../plugin/i-typescript-plugin-options\";\nimport {join, nativeNormalize, relative} from \"../../../util/path/path-util\";\nimport {getOutDir} from \"../../../util/get-out-dir/get-out-dir\";\nimport {isBuildInfoOutputFile} from \"../../../util/is-build-info-output-file/is-build-info-output-file\";\nimport {shouldDebugEmit} from \"../../../util/is-debug/should-debug\";\nimport {logEmit} from \"../../../util/logging/log-emit\";\n\nexport interface EmitBuildInfoOptions {\n\tpluginContext: PluginContext;\n\tbundle: OutputBundle;\n\thost: CompilerHost;\n\tpluginOptions: TypescriptPluginOptions;\n\toutputOptions: OutputOptions;\n}\n\nexport function emitBuildInfo(options: EmitBuildInfoOptions): void {\n\tconst compilationSettings = options.host.getCompilationSettings();\n\tif (compilationSettings.tsBuildInfoFile == null) return;\n\n\tconst emitResult = options.host.emitBuildInfo();\n\tconst buildInfo = emitResult.outputFiles.find(isBuildInfoOutputFile);\n\tif (buildInfo == null) return;\n\n\tconst cwd = options.host.getCwd();\n\tconst relativeOutDir = getOutDir(cwd, options.outputOptions);\n\tlet outputPathCandidate = compilationSettings.tsBuildInfoFile;\n\n\t// Rewrite the path\n\tif (options.pluginOptions.hook.outputPath != null) {\n\t\tconst result = options.pluginOptions.hook.outputPath(outputPathCandidate, \"buildInfo\");\n\n\t\tif (result != null) {\n\t\t\toutputPathCandidate = result;\n\t\t}\n\t}\n\n\tif (shouldDebugEmit(options.pluginOptions.debug, outputPathCandidate, buildInfo.text, \"buildInfo\")) {\n\t\tlogEmit(outputPathCandidate, buildInfo.text);\n\t}\n\n\tconst emitFile = join(relative(relativeOutDir, outputPathCandidate));\n\t// Rollup does not allow emitting files outside of the root of the whatever 'dist' directory that has been provided.\n\t// Under such circumstances, unfortunately, we'll have to default to using whatever FileSystem was provided to write the file to disk\n\tconst needsFileSystem = emitFile.startsWith(\"../\") || emitFile.startsWith(\"..\\\\\") || options.pluginContext.emitFile == null;\n\n\tif (needsFileSystem) {\n\t\toptions.host.getFileSystem().writeFile(nativeNormalize(outputPathCandidate), buildInfo.text);\n\t}\n\n\t// Otherwise, we can use Rollup, which is absolutely preferable\n\telse {\n\t\toptions.pluginContext.emitFile({\n\t\t\ttype: \"asset\",\n\t\t\tsource: buildInfo.text,\n\t\t\tfileName: nativeNormalize(emitFile)\n\t\t});\n\t}\n}\n","/**\n * Checks if the given piece of code is JSON-like\n */\nexport function isJsonLike(code: string): boolean {\n\ttry {\n\t\treturn JSON.parse(code) != null;\n\t} catch {\n\t\treturn false;\n\t}\n}\n","import {InputOptions, OutputBundle, OutputOptions, Plugin, PluginContext, RenderedChunk, ExistingRawSourceMap, SourceDescription} from \"rollup\";\nimport {getParsedCommandLine} from \"../util/get-parsed-command-line/get-parsed-command-line\";\nimport {getForcedCompilerOptions} from \"../util/get-forced-compiler-options/get-forced-compiler-options\";\nimport {getSourceDescriptionFromEmitOutput} from \"../util/get-source-description-from-emit-output/get-source-description-from-emit-output\";\nimport {emitDiagnostics} from \"../service/emit/diagnostics/emit-diagnostics\";\nimport {getSupportedExtensions} from \"../util/get-supported-extensions/get-supported-extensions\";\nimport {ensureHasDriveLetter, ensureRelative, getExtension, isBabelHelper, isCoreJsInternals, isRollupPluginMultiEntry, nativeNormalize, normalize} from \"../util/path/path-util\";\nimport {takeBundledFilesNames} from \"../util/take-bundled-filenames/take-bundled-filenames\";\nimport {TypescriptPluginOptions} from \"./i-typescript-plugin-options\";\nimport {getPluginOptions} from \"../util/plugin-options/get-plugin-options\";\nimport {getBabelConfig} from \"../util/get-babel-config/get-babel-config\";\nimport {getForcedBabelOptions} from \"../util/get-forced-babel-options/get-forced-babel-options\";\nimport {getBrowserslist} from \"../util/get-browserslist/get-browserslist\";\nimport {ResolveCache} from \"../service/cache/resolve-cache/resolve-cache\";\nimport {JSON_EXTENSION, REGENERATOR_RUNTIME_NAME_1, REGENERATOR_RUNTIME_NAME_2} from \"../constant/constant\";\nimport {REGENERATOR_SOURCE} from \"../lib/regenerator/regenerator\";\nimport {getDefaultBabelOptions} from \"../util/get-default-babel-options/get-default-babel-options\";\nimport {transformAsync} from \"@babel/core\";\nimport {createFilter} from \"@rollup/pluginutils\";\nimport {mergeTransformers} from \"../util/merge-transformers/merge-transformers\";\nimport {ensureArray} from \"../util/ensure-array/ensure-array\";\nimport {ParsedCommandLineResult} from \"../util/get-parsed-command-line/parsed-command-line-result\";\nimport {takeBrowserslistOrComputeBasedOnCompilerOptions} from \"../util/take-browserslist-or-compute-based-on-compiler-options/take-browserslist-or-compute-based-on-compiler-options\";\nimport {matchAll} from \"@wessberg/stringutil\";\nimport {emitDeclarations} from \"../service/emit/declaration/emit-declarations\";\nimport {replaceBabelEsmHelpers} from \"../util/replace-babel-esm-helpers/replace-babel-esm-helpers\";\nimport {CompilerHost} from \"../service/compiler-host/compiler-host\";\nimport {pickResolvedModule} from \"../util/pick-resolved-module\";\nimport {emitBuildInfo} from \"../service/emit/tsbuildinfo/emit-build-info\";\nimport {shouldDebugEmit} from \"../util/is-debug/should-debug\";\nimport {logEmit} from \"../util/logging/log-emit\";\nimport {isJsonLike} from \"../util/is-json-like/is-json-like\";\nimport {BabelConfigFactory} from \"../util/get-babel-config/get-babel-config-result\";\n\n/**\n * The name of the Rollup plugin\n */\nconst PLUGIN_NAME = \"Typescript\";\n\n/**\n * A Rollup plugin that transpiles the given input with Typescript\n */\nexport default function typescriptRollupPlugin(pluginInputOptions: Partial<TypescriptPluginOptions> = {}): Plugin {\n\tconst pluginOptions: TypescriptPluginOptions = getPluginOptions(pluginInputOptions);\n\tconst {include, exclude, tsconfig, cwd, browserslist, typescript, fileSystem, transpileOnly} = pluginOptions;\n\tconst transformers = pluginOptions.transformers == null ? [] : ensureArray(pluginOptions.transformers);\n\n\t// Make sure to normalize the received Browserslist\n\tconst normalizedBrowserslist = getBrowserslist({browserslist, cwd, fileSystem});\n\n\t/**\n\t * The ParsedCommandLine to use with Typescript\n\t */\n\tlet parsedCommandLineResult: ParsedCommandLineResult;\n\n\t/**\n\t * The config to use with Babel for each file, if Babel should transpile source code\n\t */\n\tlet babelConfigFileFactory: BabelConfigFactory | undefined;\n\n\t/**\n\t * The config to use with Babel for each chunk, if Babel should transpile source code\n\t */\n\tlet babelConfigChunkFactory: BabelConfigFactory | undefined;\n\n\t/**\n\t * The (Incremental) LanguageServiceHost to use\n\t */\n\tlet host: CompilerHost;\n\n\t/**\n\t * The ResolveCache to use\n\t */\n\tconst resolveCache = new ResolveCache({fileSystem});\n\n\t/**\n\t * The filter function to use\n\t */\n\tconst internalFilter = createFilter(include, exclude);\n\tconst filter = (id: string): boolean => internalFilter(id) || internalFilter(normalize(id)) || internalFilter(nativeNormalize(id));\n\n\t/**\n\t * All supported extensions\n\t */\n\tlet SUPPORTED_EXTENSIONS: Set<string>;\n\n\t/**\n\t * The InputOptions provided to Rollup\n\t */\n\tlet rollupInputOptions: InputOptions;\n\n\t/**\n\t * A Set of the entry filenames for when using rollup-plugin-multi-entry (we need to track this for generating valid declarations)\n\t */\n\tlet MULTI_ENTRY_FILE_NAMES: Set<string> | undefined;\n\n\treturn {\n\t\tname: PLUGIN_NAME,\n\n\t\t/**\n\t\t * Invoked when Input options has been received by Rollup\n\t\t */\n\t\toptions(options: InputOptions): undefined {\n\t\t\t// Break if the options aren't different from the previous ones\n\t\t\tif (rollupInputOptions != null) return;\n\n\t\t\t// Re-assign the input options\n\t\t\trollupInputOptions = options;\n\n\t\t\t// Make sure we have a proper ParsedCommandLine to work with\n\t\t\tparsedCommandLineResult = getParsedCommandLine({\n\t\t\t\ttsconfig,\n\t\t\t\tcwd,\n\t\t\t\tfileSystem,\n\t\t\t\ttypescript,\n\t\t\t\tforcedCompilerOptions: getForcedCompilerOptions({pluginOptions, rollupInputOptions, browserslist: normalizedBrowserslist})\n\t\t\t});\n\n\t\t\t// Prepare a Babel config if Babel should be the transpiler\n\t\t\tif (pluginOptions.transpiler === \"babel\") {\n\t\t\t\t// A browserslist may already be provided, but if that is not the case, one can be computed based on the \"target\" from the tsconfig\n\t\t\t\tconst computedBrowserslist = takeBrowserslistOrComputeBasedOnCompilerOptions(normalizedBrowserslist, parsedCommandLineResult.originalCompilerOptions, typescript);\n\n\t\t\t\tconst sharedBabelConfigFactoryOptions = {\n\t\t\t\t\tcwd,\n\t\t\t\t\thook: pluginOptions.hook.babelConfig,\n\t\t\t\t\tbabelConfig: pluginOptions.babelConfig,\n\t\t\t\t\tforcedOptions: getForcedBabelOptions({cwd, pluginOptions, rollupInputOptions, browserslist: computedBrowserslist}),\n\t\t\t\t\tdefaultOptions: getDefaultBabelOptions({pluginOptions, rollupInputOptions, browserslist: computedBrowserslist}),\n\t\t\t\t\tbrowserslist: computedBrowserslist,\n\t\t\t\t\trollupInputOptions\n\t\t\t\t};\n\n\t\t\t\tbabelConfigFileFactory = getBabelConfig({\n\t\t\t\t\t...sharedBabelConfigFactoryOptions,\n\t\t\t\t\tphase: \"file\"\n\t\t\t\t});\n\n\t\t\t\tbabelConfigChunkFactory = getBabelConfig({\n\t\t\t\t\t...sharedBabelConfigFactoryOptions,\n\t\t\t\t\tphase: \"chunk\"\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tSUPPORTED_EXTENSIONS = getSupportedExtensions(\n\t\t\t\tBoolean(parsedCommandLineResult.parsedCommandLine.options.allowJs),\n\t\t\t\tBoolean(parsedCommandLineResult.parsedCommandLine.options.resolveJsonModule)\n\t\t\t);\n\n\t\t\t// Hook up a LanguageServiceHost and a LanguageService\n\t\t\thost = new CompilerHost({\n\t\t\t\tfilter,\n\t\t\t\tcwd,\n\t\t\t\tresolveCache,\n\t\t\t\tfileSystem,\n\t\t\t\ttypescript,\n\t\t\t\textensions: SUPPORTED_EXTENSIONS,\n\t\t\t\tparsedCommandLineResult,\n\t\t\t\ttransformers: mergeTransformers(...transformers)\n\t\t\t});\n\n\t\t\treturn undefined;\n\t\t},\n\n\t\t/**\n\t\t * Renders the given chunk. Will emit declaration files if the Typescript config says so.\n\t\t * Will also apply any minification via Babel if a minification plugin or preset has been provided,\n\t\t * and if Babel is the chosen transpiler. Otherwise, it will simply do nothing\n\t\t */\n\t\tasync renderChunk(this: PluginContext, code: string, chunk: RenderedChunk, outputOptions: OutputOptions): Promise<SourceDescription | null> {\n\t\t\tlet updatedSourceDescription: SourceDescription | undefined;\n\n\t\t\t// When targeting CommonJS and using babel as a transpiler, we may need to rewrite forced ESM paths for preserved external helpers to paths that are compatible with CommonJS.\n\t\t\tif (pluginOptions.transpiler === \"babel\" && (outputOptions.format === \"cjs\" || outputOptions.format === \"commonjs\")) {\n\t\t\t\tupdatedSourceDescription = replaceBabelEsmHelpers(code, chunk.fileName);\n\t\t\t}\n\n\t\t\tif (babelConfigChunkFactory == null) {\n\t\t\t\treturn updatedSourceDescription == null ? null : updatedSourceDescription;\n\t\t\t}\n\n\t\t\tconst {config} = babelConfigChunkFactory(chunk.fileName);\n\n\t\t\t// Don't proceed if there is no minification config\n\t\t\tif (config == null) {\n\t\t\t\treturn updatedSourceDescription == null ? null : updatedSourceDescription;\n\t\t\t}\n\n\t\t\tconst updatedCode = updatedSourceDescription != null ? updatedSourceDescription.code : code;\n\t\t\tconst updatedMap = updatedSourceDescription != null ? updatedSourceDescription.map : undefined;\n\n\t\t\tconst transpilationResult = await transformAsync(updatedCode, {\n\t\t\t\t...config,\n\t\t\t\tfilenameRelative: ensureRelative(cwd, chunk.fileName),\n\t\t\t\t...(updatedMap == null\n\t\t\t\t\t? {}\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tinputSourceMap: updatedMap as ExistingRawSourceMap\n\t\t\t\t\t  })\n\t\t\t});\n\n\t\t\tif (transpilationResult == null || transpilationResult.code == null) {\n\t\t\t\treturn updatedSourceDescription == null ? null : updatedSourceDescription;\n\t\t\t}\n\n\t\t\t// Return the results\n\t\t\treturn {\n\t\t\t\tcode: transpilationResult.code,\n\t\t\t\tmap: transpilationResult.map ?? undefined\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * When a file changes, make sure to clear it from any caches to avoid stale caches\n\t\t */\n\t\twatchChange(id: string): void {\n\t\t\thost.delete(id);\n\t\t\tresolveCache.delete(id);\n\t\t\thost.clearCaches();\n\t\t},\n\n\t\t/**\n\t\t * Transforms the given code and file\n\t\t */\n\t\tasync transform(this: PluginContext, code: string, fileInput: string): Promise<SourceDescription | undefined> {\n\t\t\tconst file = ensureHasDriveLetter(fileInput);\n\t\t\tconst normalizedFile = normalize(file);\n\t\t\t// If this file represents ROLLUP_PLUGIN_MULTI_ENTRY, we need to parse its' contents to understand which files it aliases.\n\t\t\t// Following that, there's nothing more to do\n\t\t\tif (isRollupPluginMultiEntry(normalizedFile)) {\n\t\t\t\tMULTI_ENTRY_FILE_NAMES = new Set(matchAll(code, /(import|export)\\s*(\\*\\s*from\\s*)?[\"'`]([^\"'`]*)[\"'`]/).map(([, , , path]) => normalize(path)));\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Skip the file if it doesn't match the filter or if the helper cannot be transformed\n\t\t\tif (!filter(normalizedFile) || isBabelHelper(normalizedFile) || isCoreJsInternals(normalizedFile)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst hasJsonExtension = getExtension(normalizedFile) === JSON_EXTENSION;\n\t\t\t// Files with a .json extension may not necessarily be JSON, for example\n\t\t\t// if a JSON plugin came before rollup-plugin-ts, in which case it shouldn't be treated\n\t\t\t// as JSON.\n\t\t\tconst isJsInDisguise = hasJsonExtension && !isJsonLike(code);\n\n\t\t\tconst babelConfigResult = babelConfigFileFactory?.(file);\n\n\t\t\t// Only pass the file through Typescript if it's extension is supported. Otherwise, if we're going to continue on with Babel,\n\t\t\t// Mock a SourceDescription. Otherwise, return bind undefined\n\t\t\tconst sourceDescription =\n\t\t\t\t!host.isSupportedFileName(normalizedFile) || isJsInDisguise\n\t\t\t\t\t? babelConfigResult != null\n\t\t\t\t\t\t? {code, map: undefined}\n\t\t\t\t\t\t: undefined\n\t\t\t\t\t: (() => {\n\t\t\t\t\t\t\t// Add the file to the LanguageServiceHost\n\t\t\t\t\t\t\thost.add({fileName: normalizedFile, text: code, fromRollup: true});\n\n\t\t\t\t\t\t\t// Add all dependencies of the file to the File Watcher if missing\n\t\t\t\t\t\t\tconst dependencies = host.getDependenciesForFile(normalizedFile, true);\n\n\t\t\t\t\t\t\tif (dependencies != null) {\n\t\t\t\t\t\t\t\tfor (const dependency of dependencies) {\n\t\t\t\t\t\t\t\t\tconst pickedDependency = pickResolvedModule(dependency, false);\n\t\t\t\t\t\t\t\t\tif (pickedDependency == null) continue;\n\t\t\t\t\t\t\t\t\tthis.addWatchFile(pickedDependency);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Get some EmitOutput, optionally from the cache if the file contents are unchanged\n\t\t\t\t\t\t\tconst emitOutput = host.emit(normalizedFile, false);\n\n\t\t\t\t\t\t\t// Return the emit output results to Rollup\n\t\t\t\t\t\t\treturn getSourceDescriptionFromEmitOutput(emitOutput);\n\t\t\t\t\t  })();\n\n\t\t\t// If nothing was emitted, simply return undefined\n\t\t\tif (sourceDescription == null) {\n\t\t\t\treturn undefined;\n\t\t\t} else {\n\t\t\t\t// If Babel shouldn't be used, simply return the emitted results\n\t\t\t\tif (babelConfigResult == null) {\n\t\t\t\t\treturn sourceDescription;\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, pass it on to Babel to perform the rest of the transpilation steps\n\t\t\t\telse {\n\t\t\t\t\tconst transpilationResult = await transformAsync(sourceDescription.code, {\n\t\t\t\t\t\t...babelConfigResult.config,\n\t\t\t\t\t\tfilenameRelative: ensureRelative(cwd, file),\n\t\t\t\t\t\tinputSourceMap: typeof sourceDescription.map === \"string\" ? JSON.parse(sourceDescription.map) : sourceDescription.map\n\t\t\t\t\t});\n\n\t\t\t\t\tif (transpilationResult == null || transpilationResult.code == null) {\n\t\t\t\t\t\treturn sourceDescription;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Return the results\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcode: transpilationResult.code,\n\t\t\t\t\t\tmap: transpilationResult.map ?? undefined\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Attempts to resolve the given id via the LanguageServiceHost\n\t\t */\n\t\tresolveId(this: PluginContext, id: string, parent: string | undefined): string | null {\n\t\t\t// Don't proceed if there is no parent (in which case this is an entry module)\n\t\t\tif (parent == null) return null;\n\n\t\t\tconst resolveResult = host.resolve(id, parent);\n\n\t\t\tconst pickedResolveResult = resolveResult == null ? undefined : pickResolvedModule(resolveResult, false);\n\t\t\treturn pickedResolveResult == null ? null : nativeNormalize(pickedResolveResult);\n\t\t},\n\n\t\t/**\n\t\t * Optionally loads the given id. Is used to swap out the regenerator-runtime implementation used by babel\n\t\t * to use one that is using ESM by default to play nice with Rollup even when rollup-plugin-commonjs isn't\n\t\t * being used\n\t\t */\n\t\tload(this: PluginContext, id: string): string | null {\n\t\t\tconst normalizedId = normalize(id);\n\t\t\t// Return the alternative source for the regenerator runtime if that file is attempted to be loaded\n\t\t\tif (normalizedId.endsWith(REGENERATOR_RUNTIME_NAME_1) || normalizedId.endsWith(REGENERATOR_RUNTIME_NAME_2)) {\n\t\t\t\treturn REGENERATOR_SOURCE;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\n\t\t/**\n\t\t * Invoked when a full bundle is generated. Will take all modules for all chunks and make sure to remove all removed files\n\t\t * from the LanguageService\n\t\t */\n\t\tgenerateBundle(this: PluginContext, outputOptions: OutputOptions, bundle: OutputBundle): void {\n\t\t\t// If debugging is active, log the outputted files\n\t\t\tfor (const file of Object.values(bundle)) {\n\t\t\t\tconst normalizedFileName = normalize(file.fileName);\n\t\t\t\tconst text = \"code\" in file ? file.code : file.source.toString();\n\t\t\t\tif (shouldDebugEmit(pluginOptions.debug, normalizedFileName, text, \"javascript\")) {\n\t\t\t\t\tlogEmit(normalizedFileName, text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Only emit diagnostics if the plugin options allow it\n\t\t\tif (!Boolean(transpileOnly)) {\n\t\t\t\t// Emit all reported diagnostics\n\t\t\t\temitDiagnostics({host, pluginOptions, context: this});\n\t\t\t}\n\n\t\t\t// Emit tsbuildinfo files if required\n\t\t\tif (Boolean(parsedCommandLineResult.parsedCommandLine.options.incremental) || Boolean(parsedCommandLineResult.parsedCommandLine.options.composite)) {\n\t\t\t\temitBuildInfo({\n\t\t\t\t\thost,\n\t\t\t\t\tbundle,\n\t\t\t\t\toutputOptions,\n\t\t\t\t\tpluginOptions,\n\t\t\t\t\tpluginContext: this\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Emit declaration files if required\n\t\t\tif (Boolean(parsedCommandLineResult.originalCompilerOptions.declaration)) {\n\t\t\t\temitDeclarations({\n\t\t\t\t\thost,\n\t\t\t\t\tbundle,\n\t\t\t\t\toutputOptions,\n\t\t\t\t\tpluginOptions,\n\t\t\t\t\tpluginContext: this,\n\t\t\t\t\tmultiEntryFileNames: MULTI_ENTRY_FILE_NAMES,\n\t\t\t\t\toriginalCompilerOptions: parsedCommandLineResult.originalCompilerOptions\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst bundledFilenames = takeBundledFilesNames(bundle);\n\n\t\t\t// Walk through all of the files of the LanguageService and make sure to remove them if they are not part of the bundle\n\t\t\tfor (const fileName of host.getRollupFileNames()) {\n\t\t\t\tif (!bundledFilenames.has(fileName)) {\n\t\t\t\t\thost.delete(fileName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n"],"names":["visitModuleDeclaration","visitNode","visitClassDeclaration","visitClassExpression","visitFunctionDeclaration","visitFunctionExpression","visitEnumDeclaration","visitVariableStatement","visitInterfaceDeclaration","visitTypeAliasDeclaration","visitImportDeclaration","visitExportDeclaration","visitExportAssignment","visitImportTypeNode","visitImportSpecifier","visitImportClause","visitNamespaceImport","visitIdentifier"],"mappings":"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"}