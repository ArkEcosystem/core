dist: trusty

language: node_js

node_js:
  - 10
  - 9

services:
  - redis-server
  - postgresql

addons:
  postgresql: "9.6"
  apt:
    packages:
      - xsel

env:
  ARK_CI_TEST: true

before_install:
  - curl -o- -L https://yarnpkg.com/install.sh | bash
  - export PATH="$HOME/.yarn/bin:$PATH"
  - yarn config set cache-folder $HOME/.cache/yarn
  - sudo service postgresql stop
  - sudo apt-get remove -q 'postgresql-*'
  - sudo apt-get update -q
  - sudo apt-get install -q postgresql-10 postgresql-client-10
  - sudo sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf
  - sudo sed -i 's/port = 5433/port = 5432/' /etc/postgresql/10/main/postgresql.conf
  - sudo service postgresql restart

install: yarn

stages:
  - lint
  - depcheck
  - test

before_script:
  - 'if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export DISPLAY=:99.0; fi'
  - 'if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh -e /etc/init.d/xvfb start; sleep 3; fi'
  - sudo redis-server /etc/redis/redis.conf --port 6379
  - psql -c "create user ark with password 'password';" -U postgres
  - psql -c "create database ark_testnet with owner 'ark';" -U postgres

script:
  # See https://jestjs.io/docs/en/troubleshooting.html#tests-are-extremely-slow-on-docker-and-or-continuous-integration-ci-server
  - yarn test:force-exit --ci --coverage
  - codecov

jobs:
  include:
    - stage: lint
      script: yarn lint
    - stage: lint
      node_js: 9
      script: yarn lint

    - stage: depcheck
      script: yarn depcheck
    - stage: depcheck
      node_js: 9
      script: yarn depcheck

cache:
  yarn: true # This wouldn't do anything because it needs a yarn.lock
  directories:
    - $HOME/.nvm/.cache
    - $HOME/.cache/yarn
    - node_modules
    - packages/**/node_modules

git:
  depth: 1
