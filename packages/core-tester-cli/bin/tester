#!/usr/bin/env node

const app = require('commander')

app.version(require('../package.json').version)

const registerCommand = (name, description) => {
  return app
    .command(name)
    .description(description)
    .option('-n, --number <number>', 'number of transactions', 10)
    .option('-a, --amount <number>', 'transaction amount', 200000000)
    .option('--transfer-fee <number>', 'transfer fee', 10000000)
    .option('--base-api <value>', 'base api url')
    .option('--base-p2p <value>', 'base p2p url')
    .option('--skip-validation', 'skip transaction validations', false)
    .option('--recipient <value>', 'recipient address')
    .option('-c, --copy', 'copy the transactions to the clipboard', false)
}

registerCommand('transfer', 'send multiple transactions')
  .action(async (options) => require('../lib/commands/transfer')(options))

registerCommand('second-signature', 'create wallets with second signature')
  .option('--signature-fee <number>', 'second signature fee', 500000000)
  .action(async (options) => require('../lib/commands/second-signature')(options))

registerCommand('delegate', 'create multiple delegates')
  .option('--delegate-fee <number>', 'delegate registration fee', 2500000000)
  .action(async (options) => require('../lib/commands/delegate-registration')(options))

registerCommand('vote', 'create multiple votes for a delegate')
  .option('--vote-fee <number>', 'vote fee', 100000000)
  .option('-d, --delegate <delegate>', 'delegate public key')
  .option('-q, --quantity <number>', 'quantity of delegates to vote for if `-d` is omitted', 1)
  .action(async (options) => require('../lib/commands/vote')(options))

app
  .command('multi-signatures')
  .description('create multiple multisig wallets')
  .option('-n, --number <number>', 'number of multisig wallets', 10)
  .option('-m, --min <number>', 'minimum number of signatures per transaction')
  .option('-l, --lifetime <number>', 'lifetime of transaction', 72)
  .option('-q, --quantity <number>', 'number of signatures per wallet', 2)
  .option('-c, --copy', 'copy the transactions to the clipboard', false)
  .action(async (options) => require('../lib/commands/multi-signature')(options))

app
  .command('*')
  .action(env => {
    app.help()
    process.exit(0)
  })

app.parse(process.argv)
