#!/usr/bin/env node

const app = require('commander')

app.version(require('../package.json').version)

const registerCommand = (name, description) => {
  return app
    .command(name)
    .description(description)
    .option('-n, --number <number>', 'number of wallets', 10)
    .option('-a, --amount <number>', 'initial wallet token amount', 200000000)
    .option('--transfer-fee <number>', 'transfer fee', 10000000)
    .option('--base-url <value>', 'base api url')
    .option('--api-port <number>', 'base api port', 4003)
    .option('--p2p-port <number>', 'base p2p port', 4002)
    .option('-p, --passphrase <value>', 'passphrase of initial wallet')
    .option('-s, --second-passphrase <value>', 'passphrase of initial wallet')
    .option('--skip-validation', 'skip transaction validations', false)
    .option('-c, --copy', 'copy the transactions to the clipboard', false)
}

registerCommand('transfer', 'send multiple transactions')
  .option('--flood-attempts <value>', 'flood node with same transactions', 0)
  .option('--recipient <value>', 'recipient address')
  .option('--skip-second-run', 'skip second sending of transactions', false)
  .action(async (options) => {
    const command = await require('../lib/commands/transfer').init(options)
    await command.run()
  })

registerCommand('second-signature', 'create wallets with second signature')
  .option('--signature-fee <number>', 'second signature fee', 500000000)
  .action(async (options) => {
    const command = await require('../lib/commands/second-signature').init(options)
    await command.run()
  })

registerCommand('delegate-registration', 'create multiple delegates')
  .option('--delegate-fee <number>', 'delegate registration fee', 2500000000)
  .action(async (options) => {
    const command = await require('../lib/commands/delegate-registration').init(options)
    await command.run()
  })

registerCommand('vote', 'create multiple votes for a delegate')
  .option('--vote-fee <number>', 'vote fee', 100000000)
  .option('-d, --delegate <delegate>', 'delegate public key')
  .action(async (options) => {
    const command = await require('../lib/commands/vote').init(options)
    await command.run()
  })

registerCommand('multi-signature', 'create multiple multisig wallets')
  .option('--multisig-fee <number>', 'multisig fee', 500000000)
  .option('-m, --min <number>', 'minimum number of signatures per transaction', 2)
  .option('-l, --lifetime <number>', 'lifetime of transaction', 72)
  .option('-q, --quantity <number>', 'number of signatures per wallet', 3)
  .option('--skip-tests', 'skip transaction tests', false)
  .action(async (options) => {
    const command = await require('../lib/commands/multi-signature').init(options)
    await command.run()
  })

app
  .command('*')
  .action(env => {
    app.help()
  })

app.parse(process.argv)

if (app.args.length === 0) {
  app.help()
}
