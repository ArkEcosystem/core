name: Lint, Test & Benchmark

on:
    push:
        branches:
            - "master"
            - "develop"
    pull_request:
        types: [ready_for_review, synchronize, opened]

jobs:
    lint:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1

            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install & Build
              run: yarn install && yarn bootstrap

            - name: List
              run: yarn lint
    test-unit:
        needs: lint

        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1

            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install & Build
              run: yarn setup

            - name: Test
              run: yarn test:unit:coverage --coverageDirectory .coverage/unit/ --maxWorkers=2

            - name: Codecov
              run: ./node_modules/.bin/codecov --token=${{ secrets.CODECOV_TOKEN }}
    test-integration:
        needs: lint

        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        strategy:
            matrix:
                node-version: [12.x]
        env:
            CORE_DB_DATABASE: ark_unitnet
            CORE_DB_USERNAME: ark
            POSTGRES_USER: ark
            POSTGRES_PASSWORD: password
            POSTGRES_DB: ark_unitnet
        steps:
            - uses: actions/checkout@v1

            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Integration tests
              run: yarn test:integration:coverage --coverageDirectory .coverage/integration/

            - name: Codecov
              run: ./node_modules/.bin/codecov --token=${{ secrets.CODECOV_TOKEN }}
    test-functional-bridgechain-registration:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/bridgechain-registration.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-bridgechain-resignation:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/bridgechain-resignation.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-bridgechain-update:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/bridgechain-update.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-business-registration:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/business-registration.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-business-resignation:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/business-resignation.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-business-update:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/business-update.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-delegate-registration:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/delegate-registration.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-delegate-resignation:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/delegate-resignation.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-htlc-claim:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/htlc-claim.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-htlc-lock:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/htlc-lock.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-htlc-refund:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/htlc-refund.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-ipfs:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/ipfs.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-multi-payment:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/multi-payment.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet

    test-functional-multi-signature-registration:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/multi-signature-registration.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-second-signature-registration:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/second-signature-registration.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-transfer:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/transfer.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    test-functional-vote:
        needs: lint

        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install xsel & postgresql-client
              run: sudo apt-get install -q xsel postgresql-client

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: Functional tests
              run: yarn test __tests__/functional/transaction-forging/vote.test.ts

              env:
                  CORE_DB_DATABASE: ark_unitnet
                  CORE_DB_USERNAME: ark
                  POSTGRES_USER: ark
                  POSTGRES_PASSWORD: password
                  POSTGRES_DB: ark_unitnet
    # test-e2e:
    #     runs-on: ubuntu-latest
    #     strategy:
    #         matrix:
    #             node-version: [12.x]
    #     steps:
    #         - uses: actions/checkout@v1
    #         - name: Use Node.js ${{ matrix.node-version }}
    #           uses: actions/setup-node@v1
    #           with:
    #               node-version: ${{ matrix.node-version }}
    #         - name: Docker swarm init
    #           run: docker swarm init
    #         - name: Install and build packages
    #           run: yarn setup && cd __tests__/e2e && ../../node_modules/.bin/tsc && yarn cache clean && yarn install --frozen-lockfile
    #         - name: Generate files
    #           run: node --version && cd __tests__/e2e && yarn generate -c 3 -v ${{ matrix.node-version }}
    #         - name: Make scripts executable
    #           run: sudo chmod +x __tests__/e2e/dist/docker* && sudo chmod +x __tests__/e2e/dist/node0/docker/testnet-e2e/entrypoint.sh && sudo chmod +x __tests__/e2e/dist/node1/docker/testnet-e2e/entrypoint.sh && sudo chmod +x __tests__/e2e/dist/node2/docker/testnet-e2e/entrypoint.sh && sudo chmod +x __tests__/e2e/dist/node0/ark.sh && sudo chmod +x __tests__/e2e/dist/node1/ark.sh && sudo chmod +x __tests__/e2e/dist/node2/ark.sh
    #         - name: Docker init and start
    #           run: cd __tests__/e2e/dist && ./docker-init.sh && ./docker-start.sh
    #         - name: Wait 10 sec for docker containers to be up
    #           run: sleep 10
    #         - name: Run tests
    #           run: cd __tests__/e2e && sudo chown -R $USER:$USER ./dist/ && yarn run-tests -s scenario1
    #         - name: Output results - node0
    #           run: cat __tests__/e2e/dist/node0/output.log && cat __tests__/e2e/dist/node0/errors.log
    #         - name: Output results - node1
    #           run: cat __tests__/e2e/dist/node1/output.log && cat __tests__/e2e/dist/node1/errors.log
    #         - name: Output results - node2
    #           run: cat __tests__/e2e/dist/node2/output.log && cat __tests__/e2e/dist/node2/errors.log
    benchmark:
        needs: lint

        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1

            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-node-

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install & Build
              run: yarn setup

            - name: Benchmark
              run: yarn bench
